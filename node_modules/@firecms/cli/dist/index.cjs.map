{"version":3,"file":"index.cjs","sources":["../src/common.ts","../src/util/done_html.ts","../src/commands/auth.ts","../src/commands/deploy.ts","../src/commands/init.ts","../src/cli.ts"],"sourcesContent":["\n// export const DEFAULT_SERVER = \"http://localhost:5001/firecms-dev-2da42/europe-west3/api\"; // Local\nexport const DEFAULT_SERVER_DEV = \"https://api-kdoe6pj3qq-ey.a.run.app\";\nexport const DEFAULT_SERVER = \"https://api-drplyi3b6q-ey.a.run.app\";\n","export const done_html = `<html lang=\"en\">\n<head>\n    <style>\n        html, body {\n            font-family: Rubik, sans-serif;\n            height: 100%;\n            margin: 0;\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            justify-content: center;\n        }\n    </style>\n    <link rel=\"stylesheet\"\n          href=\"https://fonts.googleapis.com/css?family=Rubik\">\n</head>\n\n<body>\n\n<img src=\"https://firecms.co/img/firecms_logo.svg\" alt=\"FireCMS logo\" width=\"100\" height=\"100\">\n\n<h2>FireCMS CLI</h2>\n\n<p style=\"margin: 0;\">You can now close this tab</p>\n\n<script>\n\n    setTimeout(function () {\n        window.close();\n    }, 3000);\n\n</script>\n\n</body>\n</html>\n\n`;\n","import open from \"open\";\n\nimport fs from \"fs\";\nimport http from \"http\";\nimport path from \"path\";\nimport axios from \"axios\";\nimport { DEFAULT_SERVER, DEFAULT_SERVER_DEV } from \"../common\";\nimport * as os from \"os\";\nimport EventEmitter from \"events\";\nimport chalk from \"chalk\";\nimport { done_html } from \"../util/done_html\";\n\nimport https from \"https\";\n\nimport url from \"url\";\n\nexport async function getCurrentUser(env: \"prod\" | \"dev\", debug: boolean): Promise<object | null> {\n    if (debug) console.log(\"Getting current user\");\n    const userCredential = await getTokens(env, debug);\n    if (!userCredential) {\n        return null;\n    }\n    if (debug) console.log(\"userCredential\", userCredential);\n    return parseJwt(userCredential[\"id_token\"]);\n}\n\nexport async function login(env: \"prod\" | \"dev\", debug: boolean) {\n    const emitter = new EventEmitter();\n    const currentUser = await getCurrentUser(env, debug);\n    if (currentUser) {\n        console.log(\"You are already logged in as\", currentUser[\"email\"]);\n        console.log(`Run ${chalk.bold(\"firecms logout\")} to sign out`);\n        return;\n    }\n\n    const activeConnections: Set<any> = new Set();\n    const server = http.createServer(async (req, res) => {\n        res.setHeader(\"Cache-Control\", \"no-store, max-age=0\");\n\n        if (req.url === \"/\") {\n            const authURL = await getAuthURL(env);\n            console.log(\"Opening browser to\", authURL);\n            res.writeHead(301, { \"Location\": authURL });\n            res.end();\n        }\n\n        if (req.url.startsWith(\"/oauth2callback\")) {\n            let q = url.parse(req.url, true).query;\n\n            if (q.error) {\n                console.log(\"Error:\" + q.error);\n                server.close();\n                throw q.error;\n            } else {\n                // return the imported html\n                res.writeHead(200);\n                res.end(done_html, () => req.socket.end());\n                emitter.emit(\"tokensReady\", q.code);\n\n            }\n        }\n\n    }).listen(3000);\n\n    server.on(\"connection\", (socket) => {\n        activeConnections.add(socket);\n        socket.on(\"close\", () => {\n            activeConnections.delete(socket);\n        });\n    });\n\n    open(\"http://localhost:3000\");\n\n    return new Promise(async (resolve, reject) => {\n        emitter.once(\"tokensReady\", async (code) => {\n            // Handle the OAuth 2.0 server response\n            const tokens = await exchangeCodeForToken(code, env);\n            if (!tokens) {\n                return reject(\"Token could not be obtained\");\n            } else {\n                console.log(\"You have successfully logged in.\");\n                saveTokens(tokens, env);\n                resolve(tokens);\n            }\n            for (const socket of activeConnections) {\n                socket.destroy();\n            }\n            server.close();\n        })\n    });\n}\n\n// save this token to a file in .firecms or program data\nfunction saveTokens(tokens: object, env: \"prod\" | \"dev\") {\n    const dirPath = path.join(os.homedir(), \".firecms\");\n\n    if (!fs.existsSync(dirPath)) {\n        fs.mkdirSync(dirPath);\n    }\n\n    const filePath = path.join(dirPath, (env === \"dev\" ? \"staging.\" : \"\") + \"tokens.json\");\n\n    const data = JSON.stringify(tokens);\n\n    fs.writeFile(filePath, data, (error) => {\n        if (error) throw error;\n    });\n\n}\n\nexport async function logout(env: \"prod\" | \"dev\", debug: boolean) {\n\n    const userCredential = await getTokens(env, debug);\n    if (!userCredential) {\n        console.log(\"⚠️ You are not logged in\");\n        console.log(`Run ${chalk.red.bold(\"firecms login\")} to log in`);\n        return;\n    }\n\n    revokeToken(userCredential[\"access_token\"], env);\n\n    const dirPath = path.join(os.homedir(), \".firecms\");\n    const filePath = path.join(dirPath, (env === \"dev\" ? \"staging.\" : \"\") + \"tokens.json\");\n    fs.unlinkSync(filePath);\n    console.log(\"You have successfully logged out.\")\n}\n\nexport async function getTokens(env: \"prod\" | \"dev\", debug: boolean): Promise<object | null> {\n    const dirPath = path.join(os.homedir(), \".firecms\");\n    const filePath = path.join(dirPath, (env === \"dev\" ? \"staging.\" : \"\") + \"tokens.json\");\n\n    if (!fs.existsSync(filePath)) {\n        return null;\n    }\n\n    return new Promise((resolve, reject) => {\n        fs.readFile(filePath, \"utf8\", (err, data) => {\n            if (debug) console.log(\"getTokens\", { data });\n            if (err) {\n                reject(err);\n                return;\n            }\n            const result = JSON.parse(data);\n            if (result[\"env\"] === \"dev\") {\n                console.log(\"Using DEV environment\");\n            }\n            resolve(result);\n        });\n    });\n}\n\nfunction revokeToken(accessToken: string, env: \"prod\" | \"dev\") {\n    // Build the string for the POST request\n    let postData = \"token=\" + accessToken;\n\n    // Options for POST request to Google's OAuth 2.0 server to revoke a token\n    let postOptions = {\n        host: \"oauth2.googleapis.com\",\n        port: \"443\",\n        path: \"/revoke\",\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\n            \"Content-Length\": Buffer.byteLength(postData)\n        }\n    };\n\n    // Set up the request\n    const postReq = https.request(postOptions, function (res) {\n        res.setEncoding(\"utf8\");\n        res.on(\"data\", d => {\n            // console.log(\"Response: \" + d);\n        });\n    });\n\n    postReq.on(\"error\", error => {\n        console.log(error)\n    });\n\n    // Post the request with data\n    postReq.write(postData);\n    postReq.end();\n}\n\nexport function parseJwt(token: string): object {\n    if (!token) {\n        throw new Error(\"No JWT token\");\n    }\n    const base64Url = token.split(\".\")[1];\n    const base64 = base64Url.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    const buffer = Buffer.from(base64, \"base64\");\n    // console.log({\n    //     base64Url,\n    //     base64,\n    //     buffer: buffer.toString()\n    // });\n    // const uri = buffer.toString().split(\"\").map(function (c) {\n    //     return \"%\" + (\"00\" + c.charCodeAt(0).toString(16)).slice(-2);\n    // }).join(\"\");\n    // console.log({ uri });\n    // const jsonPayload = decodeURIComponent(uri);\n\n    return JSON.parse(buffer.toString());\n}\n\nasync function getAuthURL(env: \"prod\" | \"dev\") {\n    const server = env === \"prod\" ? DEFAULT_SERVER : DEFAULT_SERVER_DEV;\n\n    const response = await axios.get(server + \"/cli/generate_auth_url\", {\n        params: {\n            redirect_uri: \"http://localhost:3000/oauth2callback/\"\n        }\n    });\n\n    return response.data.data;\n}\n\nexport async function refreshCredentials(env: \"dev\" | \"prod\", credentials?: object, onErr?: (e: any) => void) {\n    if (credentials) {\n        const expiryDate = new Date(credentials[\"expiry_date\"]);\n        const now = new Date();\n        if (expiryDate.getTime() > now.getTime()) {\n            return credentials;\n        }\n    }\n    try {\n        const server = env === \"prod\" ? DEFAULT_SERVER : DEFAULT_SERVER_DEV;\n\n        const response = await axios.post(server + \"/cli/refresh_access_token\", credentials);\n        const newCredentials = response.data.data;\n        saveTokens({\n            ...credentials, ...newCredentials,\n            env\n        }, env);\n        return newCredentials;\n    } catch (error) {\n        if (onErr) onErr(error);\n        await logout(env, false);\n        console.error(\"\\nError refreshing credentials\", error.response?.status, error.response?.data?.message);\n        console.log(`⚠️ Run ${chalk.red.bold(\"firecms login\")} to log in again`);\n        return null;\n    }\n}\n\nasync function exchangeCodeForToken(code: string, env: \"prod\" | \"dev\") {\n    const server = env === \"prod\" ? DEFAULT_SERVER : DEFAULT_SERVER_DEV;\n\n    const response = await axios.get(server + \"/cli/exchange_code_for_token\", {\n        params: {\n            code\n        }\n    });\n\n    return response.data.data;\n}\n\n\n\n","import FormData from \"form-data\";\nimport * as os from \"os\";\nimport * as path from \"path\";\nimport fs from \"fs\";\nimport axios from \"axios\";\nimport { exec } from \"child_process\";\nimport zipFolder from \"zip-folder\";\nimport { getCurrentUser, getTokens, refreshCredentials } from \"./auth\";\nimport { DEFAULT_SERVER, DEFAULT_SERVER_DEV } from \"../common\";\nimport ora from \"ora\";\nimport chalk from \"chalk\";\n\nexport async function deploy(projectId: string, env: \"prod\" | \"dev\", debug: boolean) {\n    const currentUser = await getCurrentUser(env, debug);\n    if (!currentUser) {\n        console.log(\"⚠️ You are not logged in\");\n        console.log(`Run ${chalk.red.bold(\"firecms login\")} to log in`);\n        return;\n    }\n    console.log(\"Starting deploy\");\n    const zipFilePath = await createZipFromBuild();\n    await uploadZip(projectId, zipFilePath, env, debug);\n}\n\nexport function build() {\n\n    exec(\"yarn build\", (err, stdout, stderr) => {\n        if (err) {\n            // Node couldn't execute the command\n            return console.error(`exec error: ${err}`);\n        }\n        // The output of the command is passed in stdout and stderr\n        console.log(`stdout: ${stdout}`);\n        console.error(`stderr: ${stderr}`);\n    });\n}\n\nexport async function createZipFromBuild(): Promise<string> {\n    return new Promise((resolve, reject) => {\n        const tmpdir = os.tmpdir();\n        const destFile = path.join(tmpdir, `firecms_build.zip`);\n        // const destFile = path.join(tmpdir, `${crypto.randomUUID()}.zip`);\n        zipFolder(\"./dist/assets\", destFile, function (err) {\n            if (err) {\n                reject(err);\n            } else {\n                resolve(destFile);\n            }\n        });\n    })\n}\n\nexport async function uploadZip(projectId: string, zipFilePath: string, env: \"prod\" | \"dev\", debug: boolean) {\n\n    if (env === \"dev\") {\n        console.log(\"!!! Uploading to dev server\");\n    }\n    const spinner = ora(\"Uploading build of project \" + projectId).start();\n\n    const tokens = await refreshCredentials(env, await getTokens(env, debug));\n\n    const form = new FormData();\n\n    // Check if the file exists\n    if (!fs.existsSync(zipFilePath)) {\n        console.error(`File ${zipFilePath} does not exist`);\n        return;\n    }\n\n    form.append(\"zip\", fs.createReadStream(zipFilePath), \"file.zip\");\n\n    try {\n        const server = env === \"prod\" ? DEFAULT_SERVER : DEFAULT_SERVER_DEV;\n        const response = await axios.post(`${server}/projects/${projectId}/upload_config`, form, {\n            headers: {\n                ...form.getHeaders(),\n                [\"x-admin-authorization\"]: `Bearer ${tokens[\"access_token\"]}`\n            },\n            maxContentLength: Infinity,\n            maxBodyLength: Infinity\n        });\n\n        if (response.status === 200) {\n            spinner.succeed();\n            console.log(\"🔥 Successfully uploaded new build\");\n            const baseUrl = env === \"prod\" ? \"https://app.firecms.co/\" : \"https://staging.app.firecms.co/\";\n            console.log(\"\\nCheck it out at\", baseUrl + `p/${projectId}`);\n        } else {\n            console.error(\"There was an error uploading the build\");\n            console.error(response.data);\n            spinner.fail();\n        }\n\n        // console.log(response.data);\n    } catch (err) {\n        console.error(\"There was an error uploading the build\");\n        console.error(err.response.data);\n        spinner.fail();\n    }\n}\n","import arg from \"arg\";\nimport inquirer from \"inquirer\";\nimport chalk from \"chalk\";\nimport path, { dirname } from \"path\";\nimport fs from \"fs\";\n\nimport { promisify } from \"util\";\nimport execa from \"execa\";\nimport Listr from \"listr\";\n\nimport JSON5 from \"json5\";\nimport axios from \"axios\";\nimport { DEFAULT_SERVER, DEFAULT_SERVER_DEV } from \"../common\";\nimport { getCurrentUser, getTokens, login, refreshCredentials } from \"./auth\";\nimport ora from \"ora\";\n\nimport ncp from \"ncp\";\nimport { fileURLToPath } from \"url\";\n\nconst access = promisify(fs.access);\nconst copy = promisify(ncp);\n\n\n// Function to find a specific parent directory by name\nfunction findSpecificParentDir(currentDir:string, targetDirName:string) {\n    // Prevent infinite loop in case root is reached without finding target\n    const rootDir = path.parse(currentDir).root;\n\n    while (currentDir && currentDir !== rootDir) {\n        // Check if the current directory is the target directory\n        if (path.basename(currentDir) === targetDirName) {\n            // Target directory found\n            return currentDir;\n        }\n\n        // Move to the parent directory\n        currentDir = path.dirname(currentDir);\n    }\n\n    // Target directory not found\n    return null;\n}\n\n// For ES Modules, where __dirname is not defined directly\nconst __filename = fileURLToPath(import.meta.url);\nconst __dirname = path.dirname(__filename);\n\nconst targetDirPath = findSpecificParentDir(__dirname, \"cli\");\n\n\nexport type Template = \"cloud\" | \"v2\" | \"pro\" | \"community\";\nexport type InitOptions = Partial<{\n    // skipPrompts: boolean;\n    git: boolean;\n    dir_name: string;\n\n    targetDirectory: string;\n    templateDirectory: string;\n\n    // skipInstall: boolean;\n\n    authToken?: string;\n    firebaseProjectId?: string;\n\n    template: Template;\n\n    env: \"prod\" | \"dev\";\n    debug: boolean;\n}>\n\nexport async function createFireCMSApp(rawArgs) {\n\n    console.log(`\n${chalk.green.bold(\" ___ _          ___ __  __ ___\")}\n${chalk.green.bold(\"| __(_)_ _ ___ / __|  \\\\/  / __|\")}\n${chalk.green.bold(\"| _|| | '_/ -_) (__| |\\\\/| \\\\__ \\\\\")}\n${chalk.green.bold(\"|_| |_|_| \\\\___|\\\\___|_|  |_|___/\")}\n\n${chalk.red.bold(\"Welcome to the FireCMS CLI\")} 🔥\n`);\n\n    let options = parseArgumentsIntoOptions(rawArgs);\n    let currentUser = await getCurrentUser(options.env, options.debug);\n    const shouldLogin = [\"cloud\", \"pro\", \"community\"].includes(options.template) && !currentUser;\n    if (shouldLogin) {\n        console.log(\"You need to be logged in to create a project\");\n        await inquirer.prompt([\n            {\n                type: \"confirm\",\n                name: \"login\",\n                message: \"Do you want to log in?\",\n                default: true,\n            }\n        ]).then(async answers => {\n            if (answers.login) {\n                return login(options.env, options.debug);\n            }\n        });\n\n        let currentUser = await getCurrentUser(options.env, options.debug);\n        if (!currentUser) {\n            console.log(\"The login process was not completed. Exiting...\");\n            return;\n        }\n    } else if (currentUser) {\n        console.log(\"You are logged in as\", currentUser[\"email\"]);\n    }\n\n    options = await promptForMissingOptions(options);\n    // console.log({ options });\n\n    await createProject(options);\n}\n\nfunction parseArgumentsIntoOptions(rawArgs): InitOptions {\n    const args = arg(\n        {\n            \"--git\": Boolean,\n            \"--yes\": Boolean,\n            \"--skipInstall\": Boolean,\n            \"--projectId\": String,\n            \"--v2\": Boolean,\n            \"--pro\": Boolean,\n            \"--community\": Boolean,\n            \"--debug\": Boolean,\n            \"--env\": String\n        },\n        {\n            argv: rawArgs.slice(2),\n        }\n    );\n    const env = args[\"--env\"] || \"prod\";\n    if (env !== \"prod\" && env !== \"dev\") {\n        console.log(\"Please specify a valid environment: dev or prod\");\n        console.log(\"create-firecms-app --env=prod\");\n        return;\n    }\n\n    let template: Template = \"cloud\";\n    if (args[\"--v2\"]) {\n        template = \"v2\";\n    } else if (args[\"--pro\"]) {\n        template = \"pro\";\n    } else if (args[\"--community\"]) {\n        template = \"community\";\n    }\n\n    return {\n        git: args[\"--git\"] || false,\n        dir_name: args._[0],\n        template,\n        debug: args[\"--debug\"] || false,\n        firebaseProjectId: args[\"--projectId\"],\n        env\n    };\n}\n\nasync function promptForMissingOptions(options: InitOptions): Promise<InitOptions> {\n    const defaultName = \"my-cms\";\n    // if (options.skipPrompts) {\n    //     return {\n    //         ...options,\n    //         dir_name: options.dir_name || defaultName,\n    //     };\n    // }\n\n    const questions = [];\n    if (options.template !== \"v2\") {\n        if (options.template === \"cloud\") {\n            questions.push({\n                type: \"confirm\",\n                name: \"existing_firecms_project\",\n                message: \"Do you already have a FireCMS Cloud project?\",\n                default: true,\n            });\n        }\n\n        const spinner = ora(\"Loading your projects\").start();\n        const projects = await getProjects(options.env,\n            options.debug,\n            onErr => {\n                spinner.fail(\"Error loading projects\");\n            })\n            .then((res) => {\n                if (!res) {\n                    if (spinner.isSpinning)\n                        spinner.fail(\"Error loading projects\");\n                    process.exit(1);\n                }\n                spinner.succeed();\n                return res;\n            })\n            .catch((e) => {\n                if (spinner.isSpinning)\n                    spinner.fail(\"Error loading projects\");\n            });\n\n        const fireCMSProjects = projects.filter(project => project[\"fireCMSProject\"]);\n        if (!fireCMSProjects.length) {\n            console.log(\"No FireCMS projects found\");\n            process.exit(1);\n        }\n        // console.log({ projects });\n        questions.push({\n            type: \"list\",\n            name: \"firebaseProjectId\",\n            message: \"Select your project\",\n            when: (answers) => Boolean(answers.existing_firecms_project) || options.template !== \"cloud\",\n            choices: projects.map(project => project.projectId)\n        });\n    }\n\n    questions.push({\n        type: \"input\",\n        name: \"dir_name\",\n        message: \"Please choose which folder to create the project in\",\n        when: (answers) => Boolean(answers.existing_firecms_project) || options.template !== \"cloud\",\n        default: options.dir_name ?? defaultName,\n    });\n\n    if (!options.git) {\n        questions.push({\n            type: \"confirm\",\n            name: \"git\",\n            message: \"Initialize a git repository?\",\n            when: (answers) => Boolean(answers.firebaseProjectId),\n            default: false,\n        });\n    }\n\n    const answers = await inquirer.prompt(questions);\n\n    if (options.template === \"cloud\" && !answers.existing_firecms_project) {\n        console.log(\"Please create a FireCMS Cloud project first. Head to https://app.firecms.co to get started and then run this command again!\");\n        process.exit(1);\n    }\n\n    return {\n        ...options,\n        dir_name: answers.dir_name ?? options.dir_name,\n        git: options.git || answers.git,\n        firebaseProjectId: answers.firebaseProjectId,\n    };\n}\n\nexport async function createProject(options: InitOptions) {\n\n    const dir = \"./\" + options.dir_name;\n    if (fs.existsSync(dir)) {\n        if (fs.readdirSync(dir).length !== 0) {\n            console.error(\"%s Directory is not empty\", chalk.red.bold(\"ERROR\"));\n            process.exit(1);\n        }\n    } else {\n        fs.mkdirSync(dir);\n    }\n\n    const targetDirectory = path.resolve(\n        process.cwd(),\n        dir\n    );\n\n    options = {\n        ...options,\n        targetDirectory: targetDirectory,\n    };\n\n    let templateFolder: string;\n    if (options.template === \"v2\") {\n        templateFolder = \"template_v2\";\n    } else if (options.template === \"pro\") {\n        templateFolder = \"template_pro\";\n    } else if (options.template === \"community\") {\n        templateFolder = \"template\";\n    } else if (options.template === \"cloud\") {\n        templateFolder = \"template_cloud\";\n    } else {\n        throw new Error(\"createProject: Invalid template\");\n    }\n\n    const templateDir = path.resolve(\n        targetDirPath,\n        \"./templates/\" + templateFolder\n    );\n    options.templateDirectory = templateDir;\n\n    try {\n        await access(templateDir, fs.constants.R_OK);\n    } catch (err) {\n        console.error(\"%s Invalid template name \" + templateDir, chalk.red.bold(\"ERROR\"));\n        process.exit(1);\n    }\n\n    const tasks = new Listr([\n        {\n            title: \"Copy project files: \" + options.templateDirectory,\n            task: (ctx) => copyTemplateFiles(options, ctx.webappConfig),\n        },\n        {\n            title: \"Initialize git\",\n            task: () => initGit(options),\n            enabled: () => options.git,\n        }\n    ]);\n\n    await tasks.run();\n\n    console.log(\"\");\n    console.log(\"%s Your project is ready!\", chalk.green.bold(\"DONE\"));\n    console.log(\"\");\n\n    if (options.template === \"v2\") {\n        console.log(\"First update your firebase config in\");\n        console.log(chalk.bgYellow.black.bold(\"src/firebase_config.ts\"));\n        console.log(\"\");\n        console.log(\"Then run:\");\n        console.log(chalk.cyan.bold(\"cd \" + options.dir_name));\n        console.log(chalk.cyan.bold(\"yarn\"));\n        console.log(chalk.cyan.bold(\"yarn dev\"));\n        console.log(\"\");\n    } else if (options.template === \"pro\" || options.template === \"community\") {\n        console.log(\"Run:\");\n        console.log(chalk.cyan.bold(\"cd \" + options.dir_name));\n        console.log(chalk.cyan.bold(\"yarn\"));\n        console.log(chalk.cyan.bold(\"yarn dev\"));\n        console.log(\"\");\n    } else if (options.template === \"cloud\") {\n        console.log(\"If you want to run your project locally, run:\");\n        console.log(chalk.bgYellow.black.bold(\"cd \" + options.dir_name));\n        console.log(chalk.bgYellow.black.bold(\"yarn install\"));\n        console.log(chalk.bgYellow.black.bold(\"yarn dev\"));\n        console.log(\"\");\n        console.log(\"If you want to deploy your project, run:\");\n        console.log(chalk.bgYellow.black.bold(\"yarn deploy\"));\n        console.log(\"and see it running in https://app.firecms.co\");\n    } else {\n        throw new Error(\"createProject: Invalid template\");\n    }\n\n    return true;\n}\n\nasync function copyTemplateFiles(options: InitOptions, webappConfig?: object) {\n    return copy(options.templateDirectory, options.targetDirectory, {\n        clobber: false,\n        dot: true,\n    }).then(async _ => {\n        if (options.template === \"v2\") {\n            if (webappConfig)\n                writeWebAppConfig(options, webappConfig);\n        } else {\n            if (options.template === \"pro\" || options.template === \"community\") {\n\n                const firebaseConfig = await getProjectWebappConfig(options.env, options.firebaseProjectId, options.debug);\n                await copyWebAppConfig(options, firebaseConfig);\n\n                return replaceProjectIdInTemplateFiles(options, [\n                    \"./src/App.tsx\",\n                    \"./firebase.json\",\n                    \"./package.json\",\n                    \"./.firebaserc\",\n                ]);\n            } else if (options.template === \"cloud\") {\n\n                return replaceProjectIdInTemplateFiles(options, [\n                    \"./src/App.tsx\",\n                    \"./package.json\",\n                ]);\n            }\n        }\n    });\n}\n\nasync function copyWebAppConfig(options: InitOptions, firebaseConfig: object) {\n\n    const fullFileName = path.resolve(options.targetDirectory, \"src/firebase_config.ts\");\n    fs.writeFile(fullFileName, \"export const firebaseConfig = \" + JSON.stringify(firebaseConfig, null, 4), err => {\n        if (err) {\n            console.error(\"Failed to write file:\", err);\n        }\n    });\n}\n\nasync function replaceProjectIdInTemplateFiles(options: InitOptions, files: string[] = []) {\n    for (const file of files) {\n        const fullFileName = path.resolve(options.targetDirectory, file);\n        await fs.readFile(fullFileName, \"utf8\", function (err, data) {\n            if (err) {\n                return console.log(err);\n            }\n            const result = data.replace(/\\[REPLACE_WITH_PROJECT_ID]/g, options.firebaseProjectId);\n\n            fs.writeFile(fullFileName, result, \"utf8\", function (err) {\n                if (err) return console.log(err);\n            });\n        });\n    }\n\n}\n\nasync function initGit(options: InitOptions) {\n    const result = await execa(\"git\", [\"init\"], {\n        cwd: options.targetDirectory,\n    });\n    if (result.failed) {\n        return Promise.reject(new Error(\"Failed to initialize git\"));\n    }\n    return;\n}\n\nfunction writeWebAppConfig(options: InitOptions, webappConfig: object) {\n    fs.writeFile(options.targetDirectory + \"/src/firebase_config.ts\",\n        `export const firebaseConfig = ${JSON5.stringify(webappConfig, null, \"\\t\")};`,\n        function (err) {\n            if (err) return console.log(err);\n        });\n}\n\nasync function getProjects(env: \"prod\" | \"dev\", debug: boolean, onErr?: (e: any) => void) {\n\n    try {\n        const credentials = await getTokens(env, debug);\n        const tokens = await refreshCredentials(env, credentials, onErr);\n        if (!tokens) {\n            return null;\n        }\n        const server = env === \"prod\" ? DEFAULT_SERVER : DEFAULT_SERVER_DEV;\n        const response = await axios.get(server + \"/gcp_projects\", {\n            headers: {\n                [\"x-admin-authorization\"]: `Bearer ${tokens[\"access_token\"]}`\n            },\n        });\n\n        if (response.status >= 400) {\n            console.log(response.data.data?.message);\n            return null;\n        }\n        return response.data.data;\n    } catch (e) {\n        if (onErr) {\n            onErr(e);\n        }\n        console.error(\"Error getting projects\", e.response?.data);\n    }\n}\n\nasync function getProjectWebappConfig(env: \"prod\" | \"dev\", projectId: string, debug: boolean, onErr?: (e: any) => void) {\n\n    try {\n        const credentials = await getTokens(env, debug);\n        const tokens = await refreshCredentials(env, credentials, onErr);\n        if (!tokens) {\n            return null;\n        }\n        const server = env === \"prod\" ? DEFAULT_SERVER : DEFAULT_SERVER_DEV;\n        const response = await axios.get(server + `/projects/${projectId}/webapp_config`, {\n            headers: {\n                [\"x-admin-authorization\"]: `Bearer ${tokens[\"access_token\"]}`\n            },\n        });\n\n        if (response.status >= 400) {\n            console.log(response.data.data?.message);\n            return null;\n        }\n        return response.data.data;\n    } catch (e) {\n        if (onErr) {\n            onErr(e);\n        }\n        console.error(\"Error getting projects\", e.response?.data);\n    }\n}\n","import chalk from \"chalk\";\nimport { deploy } from \"./commands/deploy\";\nimport { getCurrentUser, login, logout } from \"./commands/auth\";\nimport arg from \"arg\";\nimport { createFireCMSApp } from \"./commands/init\";\n\nexport async function entry(args) {\n\n    if (args.length < 2) {\n        printHelp();\n        return;\n    }\n\n    const command = args[2];\n\n    if (command === \"init\") {\n        await createFireCMSApp(args);\n    } else if (command === \"login\") {\n        await loginArgs(args);\n    } else if (command === \"logout\") {\n        await logoutArgs(args);\n    } else if (command === \"deploy\") {\n        await deployArgs(args);\n    } else {\n        if (command)\n            console.log(\"Unknown command\", command)\n        printHelp();\n        return;\n    }\n}\n\nasync function loginArgs(rawArgs) {\n    const args = arg(\n        {\n            \"--env\": String,\n            \"--debug\": Boolean\n        },\n        {\n            argv: rawArgs.slice(2),\n        }\n    );\n    const env = args[\"--env\"] || \"prod\";\n    const debug = args[\"--debug\"] || false;\n    if (env !== \"prod\" && env !== \"dev\") {\n        console.log(\"Please specify a valid environment: dev or prod\");\n        console.log(\"firecms login --env=prod\");\n        return;\n    }\n    await login(env, debug);\n}\n\nasync function logoutArgs(rawArgs) {\n    const args = arg(\n        {\n            \"--env\": String,\n            \"--debug\": Boolean\n        },\n        {\n            argv: rawArgs.slice(2),\n        }\n    );\n    const env = args[\"--env\"] || \"prod\";\n    const debug = args[\"--debug\"] || false;\n    if (env !== \"prod\" && env !== \"dev\") {\n        console.log(\"Please specify a valid environment: dev or prod\");\n        console.log(\"firecms logout --env=prod\");\n        return;\n    }\n    await logout(env, debug);\n}\n\nasync function deployArgs(rawArgs) {\n    const args = arg(\n        {\n            \"--project\": String,\n            \"--env\": String,\n            \"--debug\": Boolean\n        },\n        {\n            argv: rawArgs.slice(2),\n        }\n    );\n    const project = args[\"--project\"];\n\n    if (!project) {\n        console.log(\"Please specify a project:\");\n        console.log(\"firecms deploy --project=your-project-id\");\n        return;\n    }\n    const env = args[\"--env\"] || \"prod\";\n    const debug = args[\"--debug\"] || false;\n    if (env !== \"prod\" && env !== \"dev\") {\n        console.log(\"Please specify a valid environment:\");\n        console.log(\"firecms deploy --project=your-project-id --env=dev\");\n        return;\n    }\n\n    const currentUser = await getCurrentUser(env, debug);\n    if (!currentUser) {\n        await login(env, debug);\n    }\n\n    await deploy(project, env, debug);\n}\n\nasync function printHelp(env: \"prod\" | \"dev\" = \"prod\", debug: boolean = false) {\n\n    console.log(`\n${chalk.red.bold(\"Welcome to the FireCMS CLI 🔥🔥🔥\")}\n\n${chalk.green.bold(\"Usage\")}\nfirecms ${chalk.blue.bold(\"<command>\")} [options]\n\n${chalk.green.bold(\"Commands\")}\n${chalk.blue.bold(\"login\")} - Login to FireCMS\n${chalk.blue.bold(\"logout\")} - Sign out\n${chalk.blue.bold(\"init\")} - Create a new CMS project\n${chalk.blue.bold(\"deploy\")} - Deploy an existing CMS project\n`);\n    const currentCredentials = await getCurrentUser(env, debug);\n    if (currentCredentials) {\n        console.log(`${chalk.green.bold(\"Current user\")}\n${currentCredentials[\"email\"]}\n`);\n    }\n\n}\n\n// function debugPaths() {\n//     // @ts-ignore\n//     const currentFileUrl = import.meta[\"url\"];\n//     console.log(\"currentFileUrl\", currentFileUrl)\n//     console.log(\"__dirname\", __dirname);\n//     console.log(\"process.cwd()\", process.cwd());\n//\n//     const templateDir = path.resolve(\n//         new URL(currentFileUrl).pathname,\n//         '../../template'\n//     );\n//\n//     console.log(\"templateDir\", templateDir);\n//\n//     const templateDir2 = path.resolve(\n//         __dirname,\n//         '../template'\n//     );\n//     console.log(\"templateDir2\", templateDir2);\n// }\n"],"names":["DEFAULT_SERVER_DEV","DEFAULT_SERVER","done_html","getCurrentUser","env","debug","userCredential","getTokens","parseJwt","login","emitter","EventEmitter","currentUser","chalk","activeConnections","server","http","req","res","authURL","getAuthURL","q","url","socket","open","resolve","reject","code","tokens","exchangeCodeForToken","saveTokens","dirPath","path","os","fs","filePath","data","error","logout","revokeToken","err","result","accessToken","postData","postOptions","postReq","https","d","token","base64","buffer","axios","refreshCredentials","credentials","onErr","expiryDate","now","newCredentials","deploy","projectId","zipFilePath","createZipFromBuild","uploadZip","build","exec","stdout","stderr","tmpdir","destFile","zipFolder","spinner","ora","form","FormData","response","access","promisify","copy","ncp","findSpecificParentDir","currentDir","targetDirName","rootDir","__filename","fileURLToPath","_documentCurrentScript","__dirname","targetDirPath","createFireCMSApp","rawArgs","options","parseArgumentsIntoOptions","inquirer","answers","promptForMissingOptions","createProject","args","arg","template","defaultName","questions","projects","getProjects","e","project","dir","targetDirectory","templateFolder","templateDir","Listr","ctx","copyTemplateFiles","initGit","webappConfig","_","writeWebAppConfig","firebaseConfig","getProjectWebappConfig","copyWebAppConfig","replaceProjectIdInTemplateFiles","fullFileName","files","file","execa","JSON5","entry","printHelp","command","loginArgs","logoutArgs","deployArgs","currentCredentials"],"mappings":"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"}