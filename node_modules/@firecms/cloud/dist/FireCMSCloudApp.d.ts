import React from "react";
import { FireCMSAppBarProps, ModeController } from "@firecms/core";
import { ProjectConfig } from "./hooks";
import { FireCMSCloudAppProps } from "./FireCMSCloudAppProps";
import { FireCMSAppConfig, FireCMSBackend, FireCMSCloudUserWithRoles } from "./types";
import { UserManagement } from "@firecms/user_management";
/**
 * This is the default implementation of a FireCMS app using the Firebase services
 * as a backend.
 * You can use this component as a full app, by specifying collections and
 * entity collections.
 *
 * This component is in charge of initialising Firebase, with the given
 * configuration object.
 *
 * @param props
 * @constructor
 * @group Firebase
 */
export declare function FireCMSCloudApp({ projectId, appConfig, backendApiHost, // TODO
onAnalyticsEvent, basePath, baseCollectionPath }: FireCMSCloudAppProps): import("react/jsx-runtime").JSX.Element;
export type FireCMSClientProps<ExtraAppbarProps = object> = {
    fireCMSBackend: FireCMSBackend;
    projectId: string;
    appConfig?: FireCMSAppConfig;
    modeController: ModeController;
    /**
     * A component that gets rendered on the upper side of the main toolbar.
     */
    FireCMSAppBarComponent?: React.ComponentType<FireCMSAppBarProps<ExtraAppbarProps>>;
    basePath?: string;
    baseCollectionPath?: string;
    onAnalyticsEvent?: (event: string, data?: object) => void;
};
export declare const FireCMSClient: ({ projectId, fireCMSBackend, ...props }: FireCMSClientProps) => import("react/jsx-runtime").JSX.Element;
export declare function FireCMSClientWithController({ projectConfig, userManagement, projectId, fireCMSBackend, appConfig, customizationLoading, ...props }: FireCMSClientProps & {
    userManagement: UserManagement<FireCMSCloudUserWithRoles>;
    projectConfig: ProjectConfig;
    projectId: string;
    customizationLoading: boolean;
}): import("react/jsx-runtime").JSX.Element;
