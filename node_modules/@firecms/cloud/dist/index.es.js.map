{"version":3,"file":"index.es.js","sources":["../src/utils/permissions.ts","../src/utils/admin_views.tsx","../src/utils/local_storage.ts","../src/utils/colors.ts","../src/hooks/useBuildProjectConfig.tsx","../src/hooks/useProjectConfig.tsx","../src/hooks/useDelegatedLogin.tsx","../src/hooks/useFireCMSBackend.tsx","../src/hooks/useSubscriptionsForUserController.tsx","../src/types/errors.ts","../src/api/common.ts","../src/api/projects.ts","../src/hooks/useBuildFireCMSBackend.tsx","../src/hooks/useBuildCloudUserManagement.tsx","../src/components/FireCMSCloudDrawer.tsx","../src/components/FireCMSDataEnhancementSubscriptionMessage.tsx","../src/components/SecurityRulesInstructions.tsx","../src/components/CloudErrorView.tsx","../src/components/settings/common.tsx","../src/components/subscriptions/PlanChip.tsx","../src/components/subscriptions/ProductView.tsx","../src/components/subscriptions/UpgradeToPlusButton.tsx","../src/components/subscriptions/PlansComparison.tsx","../src/components/subscriptions/StripeDisclaimer.tsx","../src/components/subscriptions/ProjectSubscriptionPlans.tsx","../src/components/subscriptions/SubscriptionPlanWidget.tsx","../src/components/settings/ActiveSubscriptions.tsx","../src/components/settings/ProjectSettings.tsx","../src/components/auth/social_icons.tsx","../src/components/auth/GoogleLoginButton.tsx","../src/components/auth/FireCMSLoginView.tsx","../src/components/FireCMSCloudHomePage.tsx","../src/components/subscriptions/TextSearchInfoDialog.tsx","../src/components/RootCollectionSuggestions.tsx","../src/hooks/useSaasPlugin.tsx","../src/FireCMSCloudApp.tsx","../src/FireCMSApp.tsx"],"sourcesContent":["import { Role, User } from \"@firecms/core\";\nimport { CollectionEditorPermissions, PersistedCollection } from \"@firecms/collection_editor\";\nimport { getUserRoles, UserManagement } from \"@firecms/user_management\";\n\nexport const RESERVED_GROUPS = [\"Admin\"];\n\nexport function resolveCollectionConfigPermissions<U extends User = User>({\n                                                                              user,\n                                                                              userManagement,\n                                                                              collection\n                                                                          }: {\n    user: User | null,\n    userManagement: UserManagement<U>,\n    collection?: PersistedCollection\n}): CollectionEditorPermissions {\n\n    const baseConfigPermissions = {\n        createCollections: false,\n        editCollections: false,\n        deleteCollections: false\n    };\n\n    const fireCMSUser = user && userManagement.users.find((u) => u.uid === user.uid);\n    const userRoles: Role[] | undefined = fireCMSUser ? getUserRoles(userManagement.roles, fireCMSUser) : undefined;\n    if (!fireCMSUser || !userRoles) {\n        return baseConfigPermissions;\n    }\n\n    return userRoles\n        .map(role => ({\n            createCollections: role.isAdmin || role.config?.createCollections === true,\n            editCollections: role.isAdmin || role.config?.editCollections === true || (role.config?.editCollections === \"own\" && collection?.ownerId === fireCMSUser?.uid),\n            deleteCollections: role.isAdmin || role.config?.deleteCollections === true || (role.config?.deleteCollections === \"own\" && collection?.ownerId === fireCMSUser?.uid)\n        }))\n        .reduce(mergeConfigPermissions, baseConfigPermissions);\n}\n\nconst mergeConfigPermissions = (permA: CollectionEditorPermissions, permB: CollectionEditorPermissions) => {\n    return {\n        createCollections: permA.createCollections || permB.createCollections,\n        editCollections: permA.editCollections || permB.editCollections,\n        deleteCollections: permA.deleteCollections || permB.deleteCollections\n    };\n}\n\nexport const areRolesEqual = (rolesA: string[], rolesB: string[]) => {\n    return rolesA.length === rolesB.length && rolesA.every((role) => rolesB.includes(role));\n}\n","export const ADMIN_VIEWS_CONFIG = [\n        {\n            path: \"users\",\n            name: \"CMS Users\",\n            group: \"Admin\",\n            icon: \"face\",\n        },\n        {\n            path: \"roles\",\n            name: \"Roles\",\n            group: \"Admin\",\n            icon: \"gpp_good\",\n        },\n        {\n            path: \"settings\",\n            name: \"Project settings\",\n            group: \"Admin\",\n            icon: \"settings\",\n        }\n    ] satisfies {\n        path: string;\n        name: string;\n        group: string;\n        icon?: string;\n    }[];\n\n","// const tokens = new Map<string, {\n//     token: string,\n//     expiry: Date\n// }>();\n\nexport function cacheDelegatedLoginToken(projectId: string, delegatedToken?: string) {\n    if (!delegatedToken) {\n        return;\n    }\n\n    const data = parseJwt(delegatedToken);\n    // @ts-ignore\n    const expiry = new Date(data.exp * 1000);\n    localStorage.setItem(`auth_token::${projectId}`, JSON.stringify({\n        token: delegatedToken,\n        expiry\n    }));\n\n}\n\nexport function getDelegatedLoginTokenFromCache(projectId: string) {\n    const entry = localStorage.getItem(`auth_token::${projectId}`);\n    if (entry) {\n        const data = JSON.parse(entry);\n        data.expiry = new Date(data.expiry);\n        if (data.expiry > new Date()) {\n            return data.token;\n        }\n    }\n    return undefined;\n}\n\nexport function clearDelegatedLoginTokensCache() {\n    for (let i = 0; i < localStorage.length; i++) {\n        const key = localStorage.key(i);\n        if (key?.startsWith(\"auth_token::\")) {\n            localStorage.removeItem(key);\n        }\n    }\n}\n\nfunction parseJwt(token?: string): object {\n    if (!token) {\n        throw new Error(\"No JWT token\");\n    }\n    const base64Url = token.split(\".\")[1];\n    const base64 = base64Url.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    const jsonPayload = decodeURIComponent(window.atob(base64).split(\"\").map(function (c) {\n        return \"%\" + (\"00\" + c.charCodeAt(0).toString(16)).slice(-2);\n    }).join(\"\"));\n\n    return JSON.parse(jsonPayload);\n}\n","export function darkenColor(hexColor: string, darkenBy = 10): string {\n    // Check input validity\n    if (!/^#([0-9A-Fa-f]{3}){1,2}$/.test(hexColor)) {\n        throw new Error(\"Invalid color format\");\n    }\n\n    // If shorthand form, convert to full form\n    let color = hexColor.substring(1).split(\"\");\n    if (color.length === 3) {\n        color = [color[0], color[0], color[1], color[1], color[2], color[2]];\n    }\n\n    // Convert to RGB values\n    let r = parseInt(color[0] + color[1], 16);\n    let g = parseInt(color[2] + color[3], 16);\n    let b = parseInt(color[4] + color[5], 16);\n\n    // Reduce each color component by the specified percentage (darkenBy)\n    r = Math.floor(r * (1 - darkenBy / 100));\n    g = Math.floor(g * (1 - darkenBy / 100));\n    b = Math.floor(b * (1 - darkenBy / 100));\n\n    // Recombine into hex and return\n    return \"#\" +\n        (r < 16 ? \"0\" : \"\") + r.toString(16) +\n        (g < 16 ? \"0\" : \"\") + g.toString(16) +\n        (b < 16 ? \"0\" : \"\") + b.toString(16);\n}\n\nexport function hexToRgbaWithOpacity(hexColor: string, opacity = 10): string {\n    // Check input validity\n    if (!/^#([0-9A-Fa-f]{3}){1,2}$/.test(hexColor)) {\n        throw new Error(\"Invalid color format\");\n    }\n\n    // If shorthand form, convert to full form\n    let color = hexColor.substring(1).split(\"\");\n    if (color.length === 3) {\n        color = [color[0], color[0], color[1], color[1], color[2], color[2]];\n    }\n\n    // Convert to RGB values\n    const r = parseInt(color[0] + color[1], 16);\n    const g = parseInt(color[2] + color[3], 16);\n    const b = parseInt(color[4] + color[5], 16);\n\n    // Convert opacity to a decimal for CSS\n    const alpha = opacity / 100;\n\n    // Construct and return the RGBA color\n    return `rgba(${r}, ${g}, ${b}, ${alpha})`;\n}\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { doc, getFirestore, onSnapshot, setDoc } from \"firebase/firestore\";\nimport { FirebaseApp } from \"firebase/app\";\nimport { ProjectSubscriptionPlan } from \"../types\";\nimport { UploadFileProps } from \"@firecms/core\";\nimport { FirebaseStorage, getDownloadURL, getStorage, ref, StorageReference, uploadBytes } from \"firebase/storage\";\nimport { darkenColor, hexToRgbaWithOpacity } from \"../utils\";\n\nconst DEFAULT_PRIMARY_COLOR = \"#0070F4\";\nconst DEFAULT_SECONDARY_COLOR = \"#FF5B79\";\n\nexport type ProjectConfig = {\n\n    projectId: string;\n\n    logo?: string;\n    uploadLogo: (file: File) => Promise<void>;\n\n    projectName?: string;\n    updateProjectName: (name: string) => Promise<void>;\n\n    configLoading: boolean;\n    configError?: Error;\n\n    clientFirebaseConfig?: Record<string, unknown>;\n    clientFirebaseMissing?: boolean;\n    serviceAccountMissing?: boolean;\n\n    subscriptionPlan?: ProjectSubscriptionPlan;\n    customizationRevision?: string;\n    usersLimit?: number;\n\n    canEditRoles: boolean;\n    canModifyTheme: boolean;\n    canExport: boolean;\n    canUseLocalTextSearch: boolean;\n\n    localTextSearchEnabled: boolean;\n    updateLocalTextSearchEnabled: (allow: boolean) => Promise<void>;\n\n    primaryColor?: string;\n    secondaryColor?: string;\n    updatePrimaryColor: (color?: string) => void;\n    updateSecondaryColor: (color?: string) => void;\n\n    creationType?: \"new\" | \"existing\";\n};\n\ninterface ProjectConfigParams {\n    backendFirebaseApp?: FirebaseApp;\n    projectId: string;\n}\n\nexport function useBuildProjectConfig({\n                                          backendFirebaseApp,\n                                          projectId,\n                                      }: ProjectConfigParams): ProjectConfig {\n\n    const [primaryColor, setPrimaryColor] = useState<string | undefined>(DEFAULT_PRIMARY_COLOR);\n    const [secondaryColor, setSecondaryColor] = useState<string | undefined>(DEFAULT_SECONDARY_COLOR);\n\n    const configPath = projectId ? `projects/${projectId}` : undefined;\n\n    const [clientProjectName, setClientProjectName] = useState<string | undefined>();\n    const [subscriptionPlan, setSubscriptionPlan] = useState<ProjectSubscriptionPlan>();\n    const [clientConfigLoading, setClientConfigLoading] = useState<boolean>(false);\n    const [clientFirebaseConfig, setClientFirebaseConfig] = useState<Record<string, unknown> | undefined>();\n    const [clientFirebaseMissing, setClientFirebaseMissing] = useState<boolean | undefined>();\n    const [serviceAccountMissing, setServiceAccountMissing] = useState<boolean | undefined>();\n    const [clientConfigError, setClientConfigError] = useState<Error | undefined>();\n    const [localTextSearchEnabled, setLocalTextSearchEnabled] = useState<boolean>(false);\n\n    const [customizationRevision, setCustomizationRevision] = useState<string | undefined>();\n    const [creationType, setCreationType] = useState<\"new\" | \"existing\" | undefined>();\n\n    const loadedProjectIdRef = useRef<string | undefined>(projectId);\n\n    const [logo, setLogo] = React.useState<string | undefined>();\n\n    useEffect(() => {\n        if (!backendFirebaseApp) throw Error(\"useBuildProjectConfig Firebase not initialised\");\n        const firestore = getFirestore(backendFirebaseApp);\n        if (!firestore || !configPath) return;\n\n        return onSnapshot(doc(firestore, configPath),\n            {\n                next: (snapshot) => {\n                    setLogo(snapshot.get(\"logo\"));\n                },\n                error: (e) => {\n                    console.error(e);\n                }\n            }\n        );\n    }, [configPath]);\n\n    // update css variables when colors change in :root\n    useEffect(() => {\n        if (primaryColor) {\n            document.documentElement.style.setProperty(\"--fcms-primary\", primaryColor);\n            document.documentElement.style.setProperty(\"--fcms-primary-dark\", darkenColor(primaryColor, 10));\n            document.documentElement.style.setProperty(\"--fcms-primary-bg\", hexToRgbaWithOpacity(primaryColor, 10));\n        } else {\n            document.documentElement.style.setProperty(\"--fcms-primary\", darkenColor(DEFAULT_PRIMARY_COLOR, 10));\n            document.documentElement.style.setProperty(\"--fcms-primary-dark\", darkenColor(DEFAULT_PRIMARY_COLOR, 10));\n            document.documentElement.style.setProperty(\"--fcms-primary-bg\", hexToRgbaWithOpacity(DEFAULT_PRIMARY_COLOR, 10));\n        }\n        if (secondaryColor) {\n            document.documentElement.style.setProperty(\"--fcms-secondary\", secondaryColor);\n        } else {\n            document.documentElement.style.setProperty(\"--fcms-secondary\", DEFAULT_SECONDARY_COLOR);\n        }\n\n    }, [primaryColor, secondaryColor]);\n\n    const uploadLogo = useCallback(async (file: File): Promise<void> => {\n        if (!backendFirebaseApp) throw Error(\"useBuildProjectConfig Firebase not initialised\");\n        const firestore = getFirestore(backendFirebaseApp);\n        if (!firestore || !configPath) throw Error(\"useFirestoreConfigurationPersistence Firestore not initialised\");\n        const storage = getStorage(backendFirebaseApp);\n        if (!storage) throw Error(\"useFirestoreConfigurationPersistence Storage not initialised\");\n        const fileRef = await uploadFile(storage, {\n            file,\n            path: `${configPath}/images`\n        });\n        const url = await getDownloadURL(fileRef);\n        setDoc(doc(firestore, configPath), { logo: url }, { merge: true });\n    }, [configPath]);\n\n    const updateProjectName = useCallback(async (name: string): Promise<void> => {\n        if (!backendFirebaseApp) throw Error(\"useBuildProjectConfig Firebase not initialised\");\n        const firestore = getFirestore(backendFirebaseApp);\n        if (!firestore || !configPath) throw Error(\"useFirestoreConfigurationPersistence Firestore not initialised\");\n        return setDoc(doc(firestore, configPath), { name }, { merge: true });\n    }, [configPath]);\n\n    const updateLocalTextSearchEnabled = useCallback(async (allowed: boolean): Promise<void> => {\n        if (!backendFirebaseApp) throw Error(\"useBuildProjectConfig Firebase not initialised\");\n        const firestore = getFirestore(backendFirebaseApp);\n        if (!firestore || !configPath) throw Error(\"useFirestoreConfigurationPersistence Firestore not initialised\");\n        return setDoc(doc(firestore, configPath), { local_text_search_enabled: allowed }, { merge: true });\n    }, [configPath]);\n\n    useEffect(() => {\n        if (!projectId || !backendFirebaseApp) {\n            setClientConfigLoading(false);\n            return;\n        }\n\n        if (loadedProjectIdRef.current !== projectId) {\n            setClientConfigLoading(true);\n            setClientFirebaseConfig(undefined);\n            loadedProjectIdRef.current = undefined;\n        }\n\n        const firestore = getFirestore(backendFirebaseApp);\n        return onSnapshot(doc(firestore, \"projects\", projectId),\n            {\n                next: (snapshot) => {\n\n                    console.log(\"Project config snapshot\", snapshot.data());\n                    setClientProjectName(snapshot.get(\"name\"));\n                    const plan = snapshot.get(\"subscription_plan\") ?? \"free\";\n                    setSubscriptionPlan(plan); // TODO: remove default value\n                    setLocalTextSearchEnabled(snapshot.get(\"local_text_search_enabled\") ?? false);\n                    if (plan === \"free\") {\n                        setPrimaryColor(DEFAULT_PRIMARY_COLOR);\n                        setSecondaryColor(DEFAULT_SECONDARY_COLOR);\n                    } else {\n                        setPrimaryColor(snapshot.get(\"primary_color\") ?? DEFAULT_PRIMARY_COLOR);\n                        setSecondaryColor(snapshot.get(\"secondary_color\") ?? DEFAULT_SECONDARY_COLOR);\n                    }\n\n                    const currentCustomizationRevision = snapshot.get(\"current_app_config_revision\");\n                    setCustomizationRevision(currentCustomizationRevision);\n                    setCreationType(snapshot.get(\"creation_type\"));\n\n                    const firebaseConfig = snapshot.get(\"firebase_config\");\n\n                    loadedProjectIdRef.current = projectId;\n                    if (firebaseConfig === \"loading\") {\n                        setClientConfigLoading(true);\n                        setClientFirebaseConfig(undefined);\n                        setClientFirebaseMissing(false);\n                    } else if (typeof firebaseConfig === \"object\") {\n                        setClientFirebaseConfig(firebaseConfig);\n                        setClientConfigLoading(false);\n                        setClientFirebaseMissing(false);\n                    } else if (firebaseConfig === undefined) {\n                        setClientConfigLoading(false);\n                        setClientFirebaseMissing(true);\n                    }\n                    setClientConfigError(undefined);\n\n                    setServiceAccountMissing(!snapshot.get(\"service_account\"));\n                },\n                error: (e) => {\n                    console.error(e);\n                    setClientConfigError(e);\n                    setClientConfigLoading(false);\n                }\n            }\n        );\n    }, [backendFirebaseApp, projectId]);\n\n    const usersLimit = subscriptionPlan === \"free\" ? 3 : undefined;\n    const canEditRoles = subscriptionPlan !== \"free\";\n    const canModifyTheme = subscriptionPlan !== \"free\";\n    const canExport = subscriptionPlan !== \"free\";\n    const canUseLocalTextSearch = subscriptionPlan !== \"free\";\n\n    const updatePrimaryColor = useCallback(async (color?: string): Promise<void> => {\n        if (!backendFirebaseApp) throw Error(\"useBuildProjectConfig Firebase not initialised\");\n        const firestore = getFirestore(backendFirebaseApp);\n        if (!firestore || !configPath) throw Error(\"useFirestoreConfigurationPersistence Firestore not initialised\");\n        setPrimaryColor(color);\n        if (canModifyTheme)\n            setDoc(doc(firestore, configPath), { primary_color: color }, { merge: true });\n    }, [configPath, canModifyTheme]);\n\n    const updateSecondaryColor = useCallback(async (color?: string): Promise<void> => {\n        if (!backendFirebaseApp) throw Error(\"useBuildProjectConfig Firebase not initialised\");\n        const firestore = getFirestore(backendFirebaseApp);\n        if (!firestore || !configPath) throw Error(\"useFirestoreConfigurationPersistence Firestore not initialised\");\n        setSecondaryColor(color);\n        if (canModifyTheme)\n            setDoc(doc(firestore, configPath), { secondary_color: color }, { merge: true });\n    }, [configPath, canModifyTheme]);\n\n    return {\n\n        projectId,\n        logo: canModifyTheme ? logo : undefined,\n        uploadLogo,\n        updateProjectName,\n\n        projectName: clientProjectName,\n        subscriptionPlan: loadedProjectIdRef.current !== projectId ? undefined : subscriptionPlan,\n        customizationRevision: loadedProjectIdRef.current !== projectId ? undefined : customizationRevision,\n        configLoading: loadedProjectIdRef.current !== projectId || clientConfigLoading,\n        configError: loadedProjectIdRef.current !== projectId ? undefined : clientConfigError,\n        clientFirebaseConfig: loadedProjectIdRef.current !== projectId ? undefined : clientFirebaseConfig,\n        clientFirebaseMissing: loadedProjectIdRef.current !== projectId ? undefined : clientFirebaseMissing,\n        serviceAccountMissing: loadedProjectIdRef.current !== projectId ? undefined : serviceAccountMissing,\n        usersLimit,\n        canEditRoles,\n        canModifyTheme,\n        canExport,\n        canUseLocalTextSearch,\n        localTextSearchEnabled,\n        updateLocalTextSearchEnabled,\n        primaryColor,\n        secondaryColor,\n        updatePrimaryColor,\n        updateSecondaryColor\n    }\n}\n\nconst uploadFile = (storage: FirebaseStorage, {\n    file,\n    fileName,\n    path,\n    metadata\n}: UploadFileProps): Promise<StorageReference> => {\n    const usedFilename = fileName ?? file.name;\n    console.debug(\"Uploading file\", usedFilename, file, path, metadata);\n    return uploadBytes(ref(storage, `${path}/${usedFilename}`), file, metadata)\n        .then(snapshot => snapshot.ref);\n}\n","import React, { useContext } from \"react\";\nimport { ProjectConfig } from \"./useBuildProjectConfig\";\n\nexport const ProjectConfigContext = React.createContext({} as ProjectConfig);\n\nexport const useProjectConfig = () => useContext<ProjectConfig>(ProjectConfigContext);\n\nexport function ProjectConfigProvider({ children, config }: { children: React.ReactNode, config: ProjectConfig }) {\n    return <ProjectConfigContext.Provider value={config}>\n        {children}\n    </ProjectConfigContext.Provider>;\n}\n","import { FirebaseApp } from \"firebase/app\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { getAuth, signInWithCustomToken, User as FirebaseUser } from \"firebase/auth\";\nimport { ProjectsApi } from \"../api/projects\";\nimport { cacheDelegatedLoginToken, getDelegatedLoginTokenFromCache } from \"../utils\";\nimport { ApiError } from \"../types\";\n\nexport type DelegatedLoginProps = {\n    projectsApi: ProjectsApi;\n    firebaseApp?: FirebaseApp,\n    projectId: string,\n    onUserChanged?: (user?: FirebaseUser) => void,\n    onAnalyticsEvent?: (event: string, data?: object) => void;\n};\n\nexport function useDelegatedLogin({\n                                      projectsApi,\n                                      firebaseApp,\n                                      projectId,\n                                      onUserChanged,\n                                  }: DelegatedLoginProps) {\n\n    const [loginSuccessful, setLoginSuccessful] = useState(false);\n    const [delegatedLoginLoading, setDelegatedLoginLoading] = useState(false);\n    const [delegatedLoginError, setDelegatedLoginError] = useState<Error | ApiError | undefined>(undefined);\n\n    const checkLogin = useCallback(async (skipCache = false) => {\n        console.debug(\"Checking delegated login\", {skipCache, projectId})\n        if (firebaseApp && projectId) {\n            setDelegatedLoginError(undefined);\n            setDelegatedLoginLoading(true);\n            setLoginSuccessful(false);\n            try {\n                let usedCachedToken = false;\n                let delegatedToken = !skipCache && getDelegatedLoginTokenFromCache(projectId);\n                if (!delegatedToken) {\n                    try {\n                        console.debug(\"Delegating login\", projectId);\n                        delegatedToken = await projectsApi.doDelegatedLogin(projectId);\n                    } catch (e) {\n                        console.error(\"Error delegating login\", JSON.stringify(e));\n                        setDelegatedLoginError(e as any);\n                    }\n                } else {\n                    console.debug(\"Using cached token\", projectId);\n                    usedCachedToken = true;\n                }\n\n                if (!delegatedToken) {\n                    return;\n                }\n\n                const auth = getAuth(firebaseApp);\n                signInWithCustomToken(auth, delegatedToken)\n                    .then(async (userCredential) => {\n                        console.log(\"Delegated user signed in\", userCredential);\n                        onUserChanged?.(userCredential.user);\n                        setLoginSuccessful(true);\n                        try {\n                            cacheDelegatedLoginToken(projectId, delegatedToken);\n                        } catch (e) {\n                            console.error(\"Error caching token\", e);\n                        }\n                    })\n                    .catch(async (error) => {\n                        if (usedCachedToken) {\n                            return await checkLogin(true);\n                        } else {\n                            console.error(\"Error signing in with delegated token\", error);\n                            setLoginSuccessful(false);\n                            setDelegatedLoginError(error);\n\n                        }\n                    }).finally(() => setDelegatedLoginLoading(false));\n            } catch (e) {\n                setLoginSuccessful(false);\n                setDelegatedLoginError(e as any);\n                setDelegatedLoginLoading(false);\n            }\n        }\n    }, [firebaseApp, projectId]);\n\n    useEffect(() => {\n        checkLogin();\n    }, [checkLogin]);\n\n    return {\n        loginSuccessful,\n        delegatedLoginLoading,\n        delegatedLoginError\n    };\n\n}\n","import React from \"react\";\nimport { FireCMSBackend } from \"../types\";\n\nexport const FireCMSBackendContext = React.createContext({} as FireCMSBackend);\n//\nexport function FireCMSBackEndProvider({\n                                           children,\n                                           ...backend\n                                       }: React.PropsWithChildren<FireCMSBackend>) {\n    return <FireCMSBackendContext.Provider value={backend}>\n        {children}\n    </FireCMSBackendContext.Provider>\n}\n\nexport function useFireCMSBackend(): FireCMSBackend {\n    return React.useContext(FireCMSBackendContext);\n}\n","import { FirebaseApp } from \"firebase/app\";\nimport {\n    addDoc,\n    collection,\n    DocumentReference,\n    Firestore,\n    getDoc,\n    getDocs,\n    getFirestore,\n    onSnapshot,\n    query,\n    where\n} from \"firebase/firestore\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { Product, ProductPrice, ProductWithPrices, Subscription, SubscriptionType } from \"../types/subscriptions\";\nimport { useFireCMSBackend } from \"./useFireCMSBackend\";\n\nexport const SUBSCRIPTIONS_COLLECTION = \"subscriptions\";\nexport const PRODUCTS_COLLECTION = \"products\";\nexport const CUSTOMERS_COLLECTION = \"customers\";\nexport const CHECKOUT_SESSION_COLLECTION = \"checkout_sessions\";\n\n/**\n * @group Firebase\n */\nexport interface SubscriptionsForUserControllerProps {\n    firebaseApp?: FirebaseApp;\n}\n\nexport interface SubscriptionsController {\n    activeSubscriptions?: Subscription[];\n    activeSubscriptionsLoading: boolean;\n    activeSubscriptionsLoadingError?: Error;\n    getSubscriptionsForProject: (projectId: string) => Subscription[];\n    subscribe: (projectId: string,\n                productPrice: ProductPrice,\n                onCheckoutSessionReady: (url: string, error: Error) => void,\n                type: SubscriptionType\n    ) => Promise<() => void>;\n    products?: ProductWithPrices[];\n    productsLoading: boolean;\n    productsLoadingError?: Error;\n}\n\nexport function useSubscriptionsForUserController({\n                                                      firebaseApp\n                                                  }: SubscriptionsForUserControllerProps): SubscriptionsController {\n\n    const { backendUid: userId } = useFireCMSBackend();\n\n    const firestoreRef = useRef<Firestore>();\n\n    const [products, setProducts] = useState<ProductWithPrices[] | undefined>();\n    const [productsLoading, setProductsLoading] = useState<boolean>(true);\n    const [productsLoadingError, setProductsLoadingError] = useState<Error | undefined>();\n\n    const [activeSubscriptions, setActiveSubscriptions] = useState<Subscription[]>([]);\n    const [activeSubscriptionsLoading, setActiveSubscriptionsLoading] = useState<boolean>(true);\n    const [activeSubscriptionsLoadingError, setActiveSubscriptionsLoadingError] = useState<Error | undefined>();\n\n    useEffect(() => {\n        if (!firebaseApp) return;\n        firestoreRef.current = getFirestore(firebaseApp);\n    }, [firebaseApp]);\n\n    /**\n     * Keep products and prices in sync\n     */\n    useEffect(() => {\n        const firestore = firestoreRef.current;\n        if (!firestore) return;\n        // Get docs from products collection where active is true\n        const productsRef = collection(firestore, PRODUCTS_COLLECTION);\n\n        return onSnapshot(query(productsRef, where(\"active\", \"==\", true)), {\n            next:\n                async (querySnapshot) => {\n                    const updatedProducts: ProductWithPrices[] = await Promise.all(querySnapshot.docs.map(async (productDoc) => {\n                        const pricesRef = collection(firestore, PRODUCTS_COLLECTION, productDoc.id, \"prices\")\n                        return getDocs(query(pricesRef, where(\"active\", \"==\", true)))\n                            .then(async (pricesQuery) => {\n                                const prices: ProductPrice[] = pricesQuery.docs.map((priceDoc) => ({\n                                    ...priceDoc.data(),\n                                    id: priceDoc.id\n                                } as ProductPrice));\n                                prices.sort((a, b) => (b.default ? 1 : 0) - (a.default ? 1 : 0));\n                                return {\n                                    id: productDoc.id,\n                                    ...productDoc.data(),\n                                    prices\n                                } as ProductWithPrices;\n                            })\n                    }));\n                    setProductsLoadingError(undefined);\n                    setProducts(updatedProducts);\n                    setProductsLoading(false);\n                },\n            error: (error) => {\n                setProductsLoadingError(error);\n            }\n        });\n\n    }, [firestoreRef]);\n\n    function fetchPrice(ref: DocumentReference): Promise<ProductPrice | undefined> {\n        return getDoc(ref)\n            .then((priceDoc) => {\n                if (!priceDoc.exists()) {\n                    return undefined;\n                }\n                return {\n                    id: priceDoc.id,\n                    ...(priceDoc.data() ?? {})\n                } as ProductPrice;\n            });\n    }\n\n    function fetchProduct(ref: DocumentReference): Promise<Product | undefined> {\n        return getDoc(ref)\n            .then((priceDoc) => {\n                if (!priceDoc.exists()) {\n                    return undefined;\n                }\n                return {\n                    id: priceDoc.id,\n                    ...(priceDoc.data() ?? {})\n                } as Product;\n            });\n    }\n\n    /**\n     * Keep active subscriptions in sync\n     */\n    useEffect(() => {\n        const firestore = firestoreRef.current;\n        if (!firestore || !userId) return;\n        const subscriptionsRef = collection(firestore, CUSTOMERS_COLLECTION, userId, SUBSCRIPTIONS_COLLECTION);\n\n        return onSnapshot(query(subscriptionsRef, where(\"ended_at\", \"==\", null)),\n            {\n                next:\n                    async (snapshot) => {\n                        const updatedSubscriptions = (\n                            await Promise.all(snapshot.docs.map(async (doc) => {\n                                const [price, product] = await Promise.all([fetchPrice(doc.data().price), fetchProduct(doc.data().product)]);\n                                if (!price) {\n                                    console.warn(\"Price not found for subscription\", doc.id);\n                                    return undefined;\n                                }\n                                return ({\n                                    id: doc.id,\n                                    ...doc.data(),\n                                    price,\n                                    product\n                                } as Subscription);\n                            }))\n                        )\n                            .filter(Boolean) as Subscription[];\n\n                        setActiveSubscriptionsLoading(false);\n                        setActiveSubscriptionsLoadingError(undefined);\n                        setActiveSubscriptions(updatedSubscriptions);\n                    },\n                error: (error) => {\n                    setActiveSubscriptionsLoadingError(error);\n                }\n            });\n    }, [firestoreRef, userId]);\n\n    const subscribe = async (projectId: string,\n                             productPrice: ProductPrice,\n                             onCheckoutSessionReady: (url: string, error: Error) => void,\n                             type: SubscriptionType\n    ): Promise<() => void> => {\n\n        const firestore = firestoreRef.current;\n        if (!firestore) throw new Error(\"Firestore not initialized\");\n        if (!userId) throw new Error(\"User not logged in\");\n        if (!type) throw new Error(\"subscription type not provided. Make sure to assign the metadata.type field in the Stripe dashboard to a product.\");\n\n        const subscriptionPricesRequest: any = {\n            price: productPrice.id\n        };\n\n        // For prices with metered billing we need to omit the quantity parameter.\n        // For all other prices we set quantity to 1.\n        if (productPrice.recurring?.usage_type !== \"metered\")\n            subscriptionPricesRequest.quantity = 1;\n\n        const checkoutSession: any = {\n            automatic_tax: true,\n            tax_id_collection: true,\n            collect_shipping_address: false,\n            allow_promotion_codes: true,\n            line_items: [subscriptionPricesRequest],\n            success_url: `${window.location.origin}${window.location.pathname}`,\n            cancel_url: `${window.location.origin}${window.location.pathname}`,\n            metadata: {\n                projectId,\n                type\n            }\n        };\n\n        // For one time payments set mode to payment.\n        if (productPrice.type === \"one_time\") {\n            checkoutSession.mode = \"payment\";\n            checkoutSession.payment_method_types = [\"card\", \"sepa_debit\", \"sofort\"];\n        }\n\n        // Save checkout session to Firestore\n        const checkoutSessionRef = collection(firestore, CUSTOMERS_COLLECTION, userId, CHECKOUT_SESSION_COLLECTION);\n\n        const docRef = await addDoc(checkoutSessionRef, checkoutSession);\n\n        return onSnapshot(docRef, (snap) => {\n            const {\n                error,\n                url\n            } = snap.data();\n            onCheckoutSessionReady(url, error);\n        })\n    }\n\n    const getSubscriptionsForProject = (projectId: string): Subscription[] => {\n        return activeSubscriptions?.filter((subscription) => subscription.metadata.projectId === projectId);\n    }\n\n    return {\n        products,\n        subscribe,\n        getSubscriptionsForProject,\n        activeSubscriptions,\n        productsLoading,\n        productsLoadingError,\n        activeSubscriptionsLoading,\n        activeSubscriptionsLoadingError\n    }\n}\n","type ApiErrorAdditional = {\n    missingPermissions?: string[];\n};\n\nexport class ApiError extends Error {\n\n    public code?: string;\n    public projectId?: string;\n    public data?: ApiErrorAdditional;\n\n    constructor(message: string, code?: string, projectId?: string, data?: ApiErrorAdditional) {\n        super(message);\n        this.code = code;\n        this.projectId = projectId;\n        this.data = data;\n    }\n}\n","import { ApiError } from \"../types/errors\";\n\nexport async function handleApiResponse<T>(res: Response, projectId: string): Promise<T> {\n    const jsonResponse = await res.json();\n    if (res.ok) {\n        return jsonResponse.data as T;\n    } else {\n        if (res.status === 409) // already exists\n            throw new ApiError(jsonResponse.message ?? jsonResponse.error ?? \"This already exists.\", jsonResponse.code ?? \"already-exists\", projectId);\n        throw new ApiError(jsonResponse.message ?? jsonResponse.error, jsonResponse.code, projectId, jsonResponse.data);\n    }\n}\n","import { ApiError, FireCMSCloudUser, FireCMSCloudUserWithRoles } from \"../types\";\nimport { handleApiResponse } from \"./common\";\n\nexport type ProjectsApi = ReturnType<typeof buildProjectsApi>;\n\nconst rootCollectionsCache: { [key: string]: string[] } = {};\n\nexport function buildProjectsApi(host: string, getBackendAuthToken: () => Promise<string>) {\n\n    async function createNewFireCMSProject(projectId: string, googleAccessToken: string | undefined, serviceAccount: object | undefined, creationType: \"new\" | \"existing\" | \"existing_sa\") {\n\n        const firebaseAccessToken = await getBackendAuthToken();\n        return fetch(host + \"/projects\",\n            {\n                method: \"POST\",\n                headers: buildHeaders({ firebaseAccessToken, googleAccessToken, serviceAccount }),\n                body: JSON.stringify({\n                    projectId,\n                    creationType,\n                    serviceAccount: serviceAccount ?? null\n                })\n            })\n            .then(async (res) => {\n                return handleApiResponse(res, projectId).then((_) => true);\n            });\n    }\n\n    async function createFirebaseWebapp(projectId: string) {\n\n        const firebaseAccessToken = await getBackendAuthToken();\n        return fetch(host + `/projects/${projectId}/firebase_webapp`,\n            {\n                method: \"POST\",\n                headers: buildHeaders({ firebaseAccessToken }),\n                body: JSON.stringify({\n                    projectId\n                })\n            })\n            .then(async (res) => {\n                return handleApiResponse(res, projectId).then((_) => true);\n            });\n    }\n\n    async function addSecurityRules(projectId: string, googleAccessToken?: string, serviceAccount?: object) {\n\n        const firebaseAccessToken = await getBackendAuthToken();\n        return fetch(host + `/projects/${projectId}/firestore_security_rules`,\n            {\n                method: \"PATCH\",\n                headers: buildHeaders({ firebaseAccessToken, googleAccessToken, serviceAccount }),\n            })\n            .then(async (res) => {\n                return handleApiResponse(res, projectId).then((_) => true);\n            });\n    }\n\n    async function createNewUser(projectId: string,\n                                 user: FireCMSCloudUserWithRoles): Promise<FireCMSCloudUserWithRoles> {\n\n        const firebaseAccessToken = await getBackendAuthToken();\n        const persistedUserData = {\n            ...user,\n            roles: user.roles.map(r => r.id),\n            updated_on: new Date()\n        }\n        return fetch(host + \"/projects/\" + projectId + \"/users\",\n            {\n                method: \"POST\",\n                headers: buildHeaders({ firebaseAccessToken }),\n                body: JSON.stringify(persistedUserData)\n            })\n            .then((res) => {\n                return handleApiResponse<FireCMSCloudUserWithRoles>(res, projectId);\n            });\n    }\n\n    async function updateUser(projectId: string,\n                              uid: string,\n                              user: FireCMSCloudUserWithRoles): Promise<FireCMSCloudUserWithRoles> {\n        const firebaseAccessToken = await getBackendAuthToken();\n        const persistedUserData = {\n            ...user,\n            roles: user.roles.map(r => r.id),\n            updated_on: new Date()\n        }\n        console.log(\"Updating user\", persistedUserData);\n        return fetch(host + \"/projects/\" + projectId + \"/users/\" + uid,\n            {\n                method: \"PATCH\",\n                headers: buildHeaders({ firebaseAccessToken }),\n                body: JSON.stringify(persistedUserData)\n            })\n            .then((res) => {\n                return handleApiResponse<FireCMSCloudUserWithRoles>(res, projectId);\n            });\n    }\n\n    async function deleteUser(projectId: string,\n                              uid: string): Promise<void> {\n        const firebaseAccessToken = await getBackendAuthToken();\n        return fetch(host + \"/projects/\" + projectId + \"/users/\" + uid,\n            {\n                method: \"DELETE\",\n                headers: buildHeaders({ firebaseAccessToken })\n            })\n            .then((res) => {\n                return handleApiResponse<void>(res, projectId);\n            });\n    }\n\n    async function getRootCollections(projectId: string,\n                                      googleAccessToken?: string,\n                                      serviceAccount?: object,\n                                      retries = 10): Promise<string[]> {\n        if (rootCollectionsCache[projectId]) {\n            return rootCollectionsCache[projectId];\n        }\n\n        const firebaseAccessToken = await getBackendAuthToken();\n\n        async function retry() {\n            // wait 2 seconds\n            await new Promise(resolve => setTimeout(resolve, 5000));\n            console.debug(\"Retrying getRootCollections\", retries);\n            return getRootCollections(projectId, googleAccessToken, serviceAccount,retries - 1);\n        }\n\n        return fetch(host + \"/projects/\" + projectId + \"/firestore_root_collections\",\n            {\n                method: \"GET\",\n                headers: buildHeaders({ firebaseAccessToken, googleAccessToken, serviceAccount }),\n            })\n            .then(async (res) => {\n                if (res.status >= 300) {\n                    return await retry();\n                }\n                const result = await handleApiResponse<string[]>(res, projectId);\n                rootCollectionsCache[projectId] = result;\n                return result;\n            })\n            .catch(async (error) => {\n                if (retries > 0) {\n                    return await retry();\n                } else {\n                    throw error;\n                }\n            });\n    }\n\n    async function createServiceAccount(googleAccessToken: string,\n                                        projectId: string): Promise<FireCMSCloudUserWithRoles> {\n        const firebaseAccessToken = await getBackendAuthToken();\n        return fetch(host + \"/projects/\" + projectId + \"/service_accounts\",\n            {\n                method: \"POST\",\n                headers: buildHeaders({ firebaseAccessToken, googleAccessToken }),\n            })\n            .then(async (res) => {\n                if (res.status === 409) // already exists\n                    throw Error(\"The service account already exists for this project.\")\n                const data = await res.json();\n                return data.user as FireCMSCloudUserWithRoles;\n            });\n    }\n\n    async function doDelegatedLogin(projectId: string): Promise<string> {\n        const firebaseAccessToken = await getBackendAuthToken();\n        return fetch(host + \"/projects/\" + projectId + \"/delegated_login\",\n            {\n                method: \"POST\",\n                headers: buildHeaders({ firebaseAccessToken }),\n                body: JSON.stringify({\n                    projectId\n                })\n            })\n            .then(async (res) => {\n                const data = await res.json();\n                if (!res.ok) {\n                    throw new ApiError(data.message, data.code, projectId, data.data);\n                }\n                return data.data as string;\n            });\n    }\n\n    async function getStripePortalLink(projectId: string): Promise<string> {\n        const firebaseAccessToken = await getBackendAuthToken();\n        return fetch(`${host}/customer/stripe_portal_link?return_url=${encodeURIComponent(window.location.href)}&project_id=${projectId}`,\n            {\n                method: \"GET\",\n                headers: buildHeaders({ firebaseAccessToken }),\n            })\n            .then(async (res) => {\n                const data = await res.json();\n                return data.url as string;\n            });\n    }\n\n    async function getRemoteConfigUrl(projectId: string, revisionId?: string) {\n        return `${host}/projects/${projectId}/app_config/${revisionId}/${await getBackendAuthToken()}/remoteEntry.js`;\n    }\n\n    return {\n        createNewFireCMSProject,\n        createFirebaseWebapp,\n        addSecurityRules,\n        createServiceAccount,\n\n        createNewUser,\n        updateUser,\n        deleteUser,\n        getRootCollections,\n        doDelegatedLogin,\n        getStripePortalLink,\n\n        getRemoteConfigUrl\n    }\n}\n\nfunction buildHeaders({\n                          firebaseAccessToken,\n                          googleAccessToken,\n                          serviceAccount\n                      }: {\n    firebaseAccessToken: string,\n    googleAccessToken?: string,\n    serviceAccount?: object\n}): Record<string, string> {\n    const headers: Record<string, string> = {\n        \"Content-Type\": \"application/json\",\n    };\n    if (firebaseAccessToken) {\n        headers.Authorization = `Bearer ${firebaseAccessToken}`;\n    }\n    if (googleAccessToken) {\n        headers[\"x-admin-authorization\"] = `Bearer ${googleAccessToken}`;\n    }\n    if (serviceAccount) {\n        headers[\"x-admin-service-account\"] = `Bearer ${btoa(JSON.stringify(serviceAccount))}`;\n    }\n    return headers;\n}\n","import { doc, Firestore, getDoc, getFirestore, onSnapshot } from \"firebase/firestore\";\n\nimport { FireCMSBackend, FireCMSProject } from \"../types\";\nimport { FirebaseApp } from \"firebase/app\";\nimport {\n    getAuth,\n    GoogleAuthProvider,\n    OAuthCredential,\n    onAuthStateChanged,\n    signInWithPopup,\n    signOut,\n    User as FirebaseUser\n} from \"firebase/auth\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport { buildProjectsApi } from \"../api/projects\";\nimport { clearDelegatedLoginTokensCache } from \"../utils\";\n\nconst AUTH_SCOPES = [\n    \"https://www.googleapis.com/auth/cloud-platform\"\n];\n\nexport interface FireCMSBackendProps {\n    backendApiHost: string;\n    backendFirebaseApp?: FirebaseApp;\n    onUserChange?: (user: FirebaseUser | null) => void;\n}\n\nexport function useBuildFireCMSBackend({\n                                           backendApiHost,\n                                           backendFirebaseApp,\n                                           onUserChange\n                                       }: FireCMSBackendProps): FireCMSBackend {\n\n    const [loggedUser, setLoggedUser] = useState<FirebaseUser | null | undefined>(undefined); // logged user, anonymous or logged out\n\n    const [authLoading, setAuthLoading] = useState(true);\n    const [googleCredential, setGoogleCredential] = useState<OAuthCredential | null>(loadCredentialFromStorage());\n    const [authProviderError, setAuthProviderError] = useState<any>();\n    const [permissionsNotGrantedError, setPermissionsNotGrantedError] = useState<boolean>(false);\n\n    const [availableProjectIds, setAvailableProjectIds] = useState<string[] | undefined>();\n    const [availableProjectsLoading, setAvailableProjectsLoading] = useState<boolean>(true);\n    const [availableProjectsLoaded, setAvailableProjectsLoaded] = useState<boolean>(false);\n    const [availableProjectsError, setAvailableProjectsError] = useState<Error | undefined>();\n\n    const [projects, setProjects] = useState<FireCMSProject[]>();\n\n    const firestoreRef = useRef<Firestore>();\n\n    const updateFirebaseUser = useCallback(async (firebaseUser: FirebaseUser | null) => {\n        onUserChange?.(firebaseUser);\n        setLoggedUser(firebaseUser);\n    }, []);\n\n    useEffect(() => {\n        if (availableProjectsLoaded && availableProjectIds) {\n            Promise.all(availableProjectIds.map((projectId) => getProject(projectId)))\n                .then((projectsRes) => {\n                    setProjects(projectsRes.filter(Boolean) as FireCMSProject[])\n                })\n        }\n    }, [availableProjectIds, availableProjectsLoaded]);\n\n    useEffect(() => {\n        if (!backendFirebaseApp) return;\n        firestoreRef.current = getFirestore(backendFirebaseApp);\n    }, [backendFirebaseApp]);\n\n    useEffect(() => {\n        if (!backendFirebaseApp) return;\n        const auth = getAuth(backendFirebaseApp);\n        updateFirebaseUser(auth.currentUser);\n        return onAuthStateChanged(\n            auth,\n            (firebaseUser: FirebaseUser | null) => {\n                setAuthLoading(false);\n                updateFirebaseUser(firebaseUser);\n            },\n            error => setAuthProviderError(error)\n        );\n    }, [backendFirebaseApp, updateFirebaseUser]);\n\n    useEffect(() => {\n\n        const firestore = firestoreRef.current;\n        if (!firestore) {\n            return;\n        }\n        if (!loggedUser) {\n            setAvailableProjectIds(undefined);\n            setAvailableProjectsLoading(false);\n            setAvailableProjectsLoaded(false);\n            return;\n        }\n        return onSnapshot(doc(firestore, \"users\", loggedUser.uid),\n            {\n                next: (snapshot) => {\n                    const projectIds = snapshot.get(\"projects\") ?? [];\n                    setAvailableProjectsError(undefined);\n                    setAvailableProjectIds(projectIds);\n                    setAvailableProjectsLoaded(true);\n                    setAvailableProjectsLoading(false);\n                },\n                error: (e) => {\n                    // console.error(e);\n                    setAvailableProjectsError(e);\n                    setAvailableProjectsLoading(false);\n                }\n            }\n        );\n    }, [loggedUser]);\n\n    const googleLogin = useCallback((includeGoogleAdminScopes?: boolean): Promise<FirebaseUser | null> => {\n        if (!backendFirebaseApp)\n            throw Error(\"useBuildFireCMSBackend googleLogin error\");\n        const provider = new GoogleAuthProvider();\n        provider.setCustomParameters({\n            access_type: \"offline\"\n        });\n        if (includeGoogleAdminScopes)\n            AUTH_SCOPES.forEach((scope) => provider.addScope(scope));\n        const auth = getAuth(backendFirebaseApp);\n        return signInWithPopup(auth, provider)\n            .then(credential => {\n                if (includeGoogleAdminScopes) {\n                    // @ts-ignore\n                    const userInfo = JSON.parse(credential._tokenResponse.rawUserInfo);\n                    const grantedScopes = userInfo.granted_scopes.split(\" \");\n                    if (includeGoogleAdminScopes && !grantedScopes.includes(AUTH_SCOPES[0])) {\n                        setPermissionsNotGrantedError(true);\n                    } else {\n                        const credentialFromResult = GoogleAuthProvider.credentialFromResult(credential);\n                        setGoogleCredential(credentialFromResult);\n                        saveCredentialInStorage(credentialFromResult);\n                        setPermissionsNotGrantedError(false);\n                    }\n                }\n                return credential.user;\n            })\n            .catch((e) => {\n                setAuthProviderError(e);\n                return null;\n            });\n    }, [backendFirebaseApp]);\n\n    const onSignOut = useCallback(() => {\n        const auth = getAuth(backendFirebaseApp);\n        clearDelegatedLoginTokensCache()\n        signOut(auth)\n            .then(_ => {\n                setLoggedUser(null);\n                setGoogleCredential(null);\n                setAuthProviderError(null);\n                saveCredentialInStorage(null);\n            });\n    }, [backendFirebaseApp]);\n\n    const getBackendAuthToken = useCallback(() => {\n        if (!loggedUser)\n            throw Error(\"Trying to get Firebase token \");\n        return loggedUser.getIdToken();\n    }, [loggedUser]);\n\n    const getProject = useCallback((projectId: string) => {\n        const firestore = firestoreRef.current;\n        if (!firestore)\n            throw Error(\"useFireCMSProjectsRepository error\");\n        return getDoc(doc(firestore, \"projects\", projectId))\n            .then(doc => doc.exists() ? { projectId: doc.id, ...doc.data() } as FireCMSProject : null)\n            .catch((error) => {\n                console.error(\"Error getting project:\", error);\n                return null;\n            });\n    }, []);\n\n    const projectsApi = buildProjectsApi(backendApiHost, getBackendAuthToken);\n\n    return {\n        backendApiHost,\n        user: loggedUser ?? null,\n        signOut: onSignOut,\n        googleLogin,\n        getBackendAuthToken,\n        googleCredential,\n        availableProjectIds,\n        availableProjectsLoaded,\n        availableProjectsLoading,\n        availableProjectsError,\n        permissionsNotGrantedError,\n        authLoading,\n        authProviderError,\n        backendFirebaseApp,\n        backendUid: loggedUser?.uid,\n        projectsApi,\n        getProject,\n        projects\n    }\n\n}\n\nfunction saveCredentialInStorage(credential: OAuthCredential | null) {\n    if (!credential) {\n        localStorage.removeItem(\"googleCredential\");\n        return;\n    }\n    const credentialString = JSON.stringify({\n        created_on: new Date(),\n        credential: credential.toJSON()\n    });\n    localStorage.setItem(\"googleCredential\", credentialString);\n}\n\nfunction loadCredentialFromStorage(): OAuthCredential | null {\n    try {\n        const credentialString = localStorage.getItem(\"googleCredential\");\n        if (!credentialString)\n            return null;\n        const credentialJSON = JSON.parse(credentialString) satisfies {\n            created_on: string,\n            credential: any\n        };\n        const credential = OAuthCredential.fromJSON(credentialJSON.credential);\n        const createdOn = new Date(credentialJSON.created_on);\n        const now = new Date();\n        const diff = now.getTime() - createdOn.getTime();\n        // check the credential is valid\n        if (diff > 1000 * 60 * 60) {\n            console.debug(\"Google credential expired credential expired\");\n            saveCredentialInStorage(null);\n            return null;\n        }\n        return credential;\n    } catch (e) {\n        console.error(e);\n        return null;\n    }\n}\n","import React, { useCallback, useEffect, useRef } from \"react\";\nimport {\n    collection,\n    deleteDoc,\n    doc,\n    DocumentSnapshot,\n    Firestore,\n    getFirestore,\n    onSnapshot,\n    setDoc\n} from \"firebase/firestore\";\nimport { FirebaseApp } from \"firebase/app\";\nimport { FireCMSBackend, FireCMSCloudUserWithRoles } from \"../types\";\nimport { CMSType, PermissionsBuilder, Role, User } from \"@firecms/core\";\nimport { ProjectsApi } from \"../api/projects\";\nimport { resolveUserRolePermissions, UserManagement } from \"@firecms/user_management\";\n\ntype UserWithRoleIds = User & { roles: string[] };\n\ninterface UserManagementParams {\n    backendFirebaseApp?: FirebaseApp;\n    projectId: string;\n    projectsApi: ProjectsApi;\n    usersLimit?: number;\n    canEditRoles?: boolean;\n    fireCMSBackend: FireCMSBackend\n}\n\nexport function useBuildCloudUserManagement({\n                                                backendFirebaseApp,\n                                                projectId,\n                                                projectsApi,\n                                                usersLimit,\n                                                canEditRoles,\n                                                fireCMSBackend\n                                            }: UserManagementParams): UserManagement<FireCMSCloudUserWithRoles> {\n\n    const configPath = projectId ? `projects/${projectId}` : undefined;\n\n    const firestoreRef = useRef<Firestore>();\n\n    const [rolesLoading, setRolesLoading] = React.useState<boolean>(true);\n    const [usersLoading, setUsersLoading] = React.useState<boolean>(true);\n    const [roles, setRoles] = React.useState<Role[]>([]);\n    const [usersWithRoleIds, setUsersWithRoleIds] = React.useState<UserWithRoleIds[]>([]);\n    const users = usersWithRoleIds.map(u => ({\n        ...u,\n        roles: roles.filter(r => u.roles.includes(r.id))\n    } as FireCMSCloudUserWithRoles));\n\n    const [rolesError, setRolesError] = React.useState<Error | undefined>();\n    const [usersError, setUsersError] = React.useState<Error | undefined>();\n\n    useEffect(() => {\n        if (!backendFirebaseApp) return;\n        firestoreRef.current = getFirestore(backendFirebaseApp);\n    }, [backendFirebaseApp]);\n\n    useEffect(() => {\n        const firestore = firestoreRef.current;\n        if (!firestore || !configPath) return;\n\n        return onSnapshot(collection(firestore, configPath, \"roles\"),\n            {\n                next: (snapshot) => {\n                    setRolesError(undefined);\n                    try {\n                        const newRoles = docsToRoles(snapshot.docs);\n                        setRoles(newRoles);\n                    } catch (e) {\n                        // console.error(e);\n                        setRolesError(e as Error);\n                    }\n                    setRolesLoading(false);\n                },\n                error: (e) => {\n                    setRolesError(e);\n                    setRolesLoading(false);\n                }\n            }\n        );\n    }, [configPath]);\n\n    useEffect(() => {\n        const firestore = firestoreRef.current;\n        if (!firestore || !configPath) return;\n\n        return onSnapshot(collection(firestore, configPath, \"users\"),\n            {\n                next: (snapshot) => {\n                    setUsersError(undefined);\n                    try {\n                        const newUsers = docsToUsers(snapshot.docs);\n                        setUsersWithRoleIds(newUsers);\n                    } catch (e) {\n                        // console.error(e);\n                        setUsersError(e as Error);\n                    }\n                    setUsersLoading(false);\n                },\n                error: (e) => {\n                    setUsersError(e);\n                    setUsersLoading(false);\n                }\n            }\n        );\n    }, [configPath]);\n\n    const saveUser = useCallback(async (user: FireCMSCloudUserWithRoles): Promise<FireCMSCloudUserWithRoles> => {\n\n        const firestore = firestoreRef.current;\n        if (!firestore || !configPath) throw Error(\"useFirestoreConfigurationPersistence Firestore not initialised\");\n        console.debug(\"Persisting\", user);\n        const {\n            uid,\n            ...userData\n        } = user;\n        if (uid) {\n            return projectsApi.updateUser(projectId, uid, user);\n        } else {\n            return projectsApi.createNewUser(projectId, user);\n        }\n    }, [configPath, projectId]);\n\n    const saveRole = useCallback(<M extends { [Key: string]: CMSType }>(role: Role): Promise<void> => {\n        const firestore = firestoreRef.current;\n        if (!firestore || !configPath) throw Error(\"useFirestoreConfigurationPersistence Firestore not initialised\");\n        console.debug(\"Persisting\", role);\n        const {\n            id,\n            ...roleData\n        } = role;\n        const ref = doc(firestore, configPath, \"roles\", id);\n        return setDoc(ref, roleData, { merge: true });\n    }, [configPath]);\n\n    const removeUser = useCallback(async (user: FireCMSCloudUserWithRoles): Promise<void> => {\n        const firestore = firestoreRef.current;\n        if (!firestore || !configPath) throw Error(\"useFirestoreConfigurationPersistence Firestore not initialised\");\n        console.debug(\"Deleting\", user);\n        const { uid } = user;\n        return projectsApi.deleteUser(projectId, uid);\n    }, [configPath]);\n\n    const deleteRole = useCallback((role: Role): Promise<void> => {\n\n        const firestore = firestoreRef.current;\n        if (!firestore || !configPath) throw Error(\"useFirestoreConfigurationPersistence Firestore not initialised\");\n        console.debug(\"Deleting\", role);\n        const { id } = role;\n        const ref = doc(firestore, configPath, \"roles\", id);\n        return deleteDoc(ref);\n    }, [configPath]);\n\n    const loggedInUser = users.find((u) => u.email.toLowerCase() === fireCMSBackend.user?.email?.toLowerCase());\n\n    const collectionPermissions: PermissionsBuilder = useCallback(({\n                                                                       collection,\n                                                                   }) => resolveUserRolePermissions({\n        collection,\n        user: loggedInUser ?? null\n    }), [loggedInUser?.uid]);\n\n    const userIds = users.map(u => u.uid);\n    const defineRolesFor: ((user: User) => Role[] | undefined) = useCallback((user) => {\n        if (!users) throw Error(\"Users not loaded\");\n        const mgmtUser = users.find(u => u.email?.toLowerCase() === user?.email?.toLowerCase());\n        return mgmtUser?.roles;\n    }, [userIds]);\n\n    return {\n        allowDefaultRolesCreation: false,\n        includeCollectionConfigPermissions: true,\n        loading: rolesLoading || usersLoading,\n        roles,\n        users,\n        saveUser,\n        saveRole,\n        defineRolesFor,\n        deleteUser: removeUser,\n        deleteRole,\n        usersLimit,\n        canEditRoles: canEditRoles === undefined ? true : canEditRoles,\n        collectionPermissions\n    }\n}\n\nconst docsToUsers = (docs: DocumentSnapshot[]): UserWithRoleIds[] => {\n    return docs.map((doc) => ({\n        uid: doc.id,\n        ...doc.data(),\n        created_on: doc.data()?.created_on?.toDate(),\n        updated_on: doc.data()?.updated_on?.toDate()\n    } as unknown as UserWithRoleIds));\n}\n\nconst docsToRoles = (docs: DocumentSnapshot[]): Role[] => {\n    return docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data()\n    } as Role));\n}\n","import React, { useCallback } from \"react\";\nimport {\n    DrawerNavigationItem,\n    DrawerProps,\n    IconForView,\n    TopNavigationResult,\n    useAuthController,\n    useNavigationController\n} from \"@firecms/core\";\nimport { AddIcon, Button, cn, IconButton, Menu, MenuItem, MoreVertIcon, Tooltip, Typography, } from \"@firecms/ui\";\nimport { useCollectionEditorController } from \"@firecms/collection_editor\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ADMIN_VIEWS_CONFIG, RESERVED_GROUPS } from \"../utils\";\n\n/**\n * Default drawer used in FireCMS Cloud\n * @group Core\n */\nexport function FireCMSCloudDrawer({\n                                       hovered,\n                                       drawerOpen,\n                                       closeDrawer\n                                   }: DrawerProps) {\n\n    const navigate = useNavigate();\n\n    const navigation = useNavigationController();\n    const collectionEditorController = useCollectionEditorController();\n    const { user } = useAuthController();\n\n    const [adminMenuOpen, setAdminMenuOpen] = React.useState(false);\n\n    const tooltipsOpen = hovered && !drawerOpen && !adminMenuOpen;\n\n    if (!navigation.topLevelNavigation)\n        throw Error(\"Navigation not ready in Drawer\");\n\n    const {\n        navigationEntries,\n        groups\n    }: TopNavigationResult = navigation.topLevelNavigation;\n\n    const buildGroupHeader = useCallback((group?: string) => {\n        if (!drawerOpen) return <div style={{ height: 16 }}/>;\n        const reservedGroup = group && RESERVED_GROUPS.includes(group);\n        const canCreateCollections = collectionEditorController.configPermissions({ user }).createCollections && !reservedGroup;\n        return <div className=\"flex flex-row items-center pt-8 pl-8 pr-0 pb-2\">\n            <Typography variant={\"caption\"}\n                        color={\"secondary\"}\n                        className=\"flex-grow font-medium\">\n                {group ? group.toUpperCase() : \"Views\".toUpperCase()}\n            </Typography>\n            {canCreateCollections && <Tooltip\n                title={group ? `Create new collection in ${group}` : \"Create new collection\"}>\n                <Button\n                    size={\"small\"}\n                    variant={\"text\"}\n                    onClick={() => {\n                        collectionEditorController?.createCollection({\n                            initialValues: {\n                                group,\n                            },\n                            parentCollectionIds: [],\n                            redirect: true,\n                            sourceClick: \"drawer_new_collection\"\n                        });\n                    }}>\n                    <AddIcon size={\"small\"}/>\n                </Button>\n            </Tooltip>}\n        </div>;\n    }, [collectionEditorController, drawerOpen]);\n\n    return (\n\n        <>\n            <div className={\"flex-grow overflow-scroll no-scrollbar\"}>\n\n                {groups.map((group) => (\n                    <React.Fragment\n                        key={`drawer_group_${group}`}>\n                        {buildGroupHeader(group)}\n                        {Object.values(navigationEntries)\n                            .filter(e => e.group === group)\n                            .map((view, index) => <DrawerNavigationItem\n                                key={`navigation_${index}`}\n                                icon={<IconForView collectionOrView={view.collection ?? view.view}/>}\n                                tooltipsOpen={tooltipsOpen}\n                                drawerOpen={drawerOpen}\n                                url={view.url}\n                                name={view.name}/>)}\n                    </React.Fragment>\n                ))}\n\n            </div>\n\n            <Menu\n                open={adminMenuOpen}\n                onOpenChange={setAdminMenuOpen}\n                trigger={\n                    <IconButton\n                        shape={\"square\"}\n                        className={\"m-4 text-gray-900 dark:text-white w-fit\"}>\n                        <Tooltip title={\"Admin\"}\n                                 open={tooltipsOpen}\n                                 side={\"right\"} sideOffset={28}>\n                            <MoreVertIcon/>\n                        </Tooltip>\n                        {drawerOpen && <div\n                            className={cn(\n                                drawerOpen ? \"opacity-100\" : \"opacity-0 hidden\",\n                                \"mx-4 font-inherit text-inherit\"\n                            )}>\n                            ADMIN\n                        </div>}\n                    </IconButton>}\n            >\n                {ADMIN_VIEWS_CONFIG.map((view, index) =>\n                    <MenuItem\n                        onClick={(event) => {\n                            event.preventDefault();\n                            navigate(view.path);\n                        }}\n                        key={`navigation_${index}`}>\n                        {<IconForView collectionOrView={view}/>}\n                        {view.name}\n                    </MenuItem>)}\n\n            </Menu>\n        </>\n    );\n}\n","import React from \"react\";\nimport { Button, Typography } from \"@firecms/ui\";\nimport { SubscriptionMessageProps } from \"@firecms/data_enhancement\";\n\nexport function FireCMSDataEnhancementSubscriptionMessage({ projectId, context }: SubscriptionMessageProps) {\n\n    return (\n        <div className=\"flex flex-col gap-1 p-1\">\n            <Typography variant={\"h6\"}>Subscription required</Typography>\n            <Typography>You have finished your free usage quota.</Typography>\n            <Typography>Please upgrade plans to continue using this feature in this project</Typography>\n            <Button\n                color={\"primary\"}\n                component={\"a\"}\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n                href={`/p/${projectId}/settings`}>\n                Upgrade plan\n            </Button>\n        </div>\n    )\n}\n","import { Paper, Typography } from \"@firecms/ui\";\n\nexport function SecurityRulesInstructions({}: {}) {\n\n    return <>\n        <Typography variant={\"h4\"}>Security rules</Typography>\n\n        <Typography>\n            FireCMS uses Firebase security rules to restrict access to data.\n            When creating a new user through FireCMS, the custom claim <Typography\n            className={\"inline-block bg-white dark:bg-gray-950 px-1 rounded-md\"}\n            component={\"pre\"}>fireCMSUser</Typography> is added to the user\n            in the client project. By adding the following security rules to your project, you\n            ensure FireCMS users can access data through FireCMS.\n        </Typography>\n\n        <Paper>\n            <Typography component={\"pre\"}\n                        className=\"m-0 p-4 text-sm font-mono\">\n                {\n                    `match /{document=**} {\n    allow read, write: if request.auth.token.fireCMSUser;\n}`\n                }\n            </Typography>\n        </Paper>\n        <Typography variant={\"caption\"}>\n            This rules restrict access to data\n            to FireCMS users only, but does <strong>not</strong> enforce the\n            permissions at the database level.\n        </Typography>\n        <Typography variant={\"caption\"}>\n            The permissions are enforced in the frontend though, which will\n            work fine for most users. If you need to enforce the permissions\n            at the database level, you can modify these security rules\n            yourself to suit your needs.\n            The roles assigned to a user are set as a custom claim in the\n            Firebase auth token, so you can use them in your security rules.\n        </Typography>\n\n    </>\n\n}\n","import { useEffect, useState } from \"react\";\nimport { useSnackbarController } from \"@firecms/core\";\nimport { BuildIcon, Button, LoadingButton, Typography } from \"@firecms/ui\";\nimport { FireCMSBackend } from \"../types\";\nimport { useFireCMSBackend } from \"../hooks\";\n\nexport type CloudError = {\n    code?: string,\n    message: string,\n    projectId?: string,\n    data?:{\n        missingPermissions?: string[]\n    }\n};\n\nexport function CloudErrorView({\n                                   error,\n                                   fireCMSBackend,\n                                   onFixed,\n                                   onRetry\n                               }: {\n    error: CloudError,\n    fireCMSBackend?: FireCMSBackend,\n    onFixed?: () => void,\n    onRetry?: () => void,\n}) {\n    const {\n        code,\n        message,\n        projectId\n    } = error;\n\n    if (code === \"service-account-missing\" && projectId && fireCMSBackend) {\n        return <CloudMissingServiceAccountErrorView projectId={projectId}\n                                                    fireCMSBackend={fireCMSBackend}\n                                                    onFixed={onFixed}/>;\n    } else if (code === \"user-has-to-accept-googles-terms-of-service\" && projectId) {\n        return <CloudNeedsToAcceptTermsErrorView projectId={projectId}\n                                                 onFixed={onFixed}/>;\n    } else if (code === \"user-has-no-previous-firebase-projects\" && projectId) {\n        return <CloudNoPreviousFirebaseProjectsErrorView projectId={projectId}\n                                                         onFixed={onFixed}/>;\n    } else if (code === \"firecms-user-not-found\") {\n        return <div className=\"flex flex-col items-center space-y-2 py-4\">\n            <Typography>\n                The user trying to log in is not registered in the client project.\n            </Typography>\n            <Typography>\n                Make sure the user exists in the client project and try again.\n                If the problem persists, reach us at <a href=\"mailto:hello@firecms.co?subject=FireCMS%20login%20error\"\n                                                        rel=\"noopener noreferrer\"\n                                                        target=\"_blank\">\n                hello@firecms.co </a>, or in our <a\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n                href={\"https://discord.gg/fxy7xsQm3m\"}>Discord channel</a>.\n            </Typography>\n        </div>;\n    } else if (code === \"service-account-missing-permissions\") {\n        return <ServiceAccountMissingPermissions missingPermissions={error.data?.missingPermissions}/>;\n    }\n    return (<div className=\"flex flex-col items-center space-y-2 py-4\">\n            <Typography className=\"text-center text-red-300\">\n                {message}\n            </Typography>\n\n            {onRetry && <Button\n                variant=\"outlined\"\n                color=\"error\"\n                onClick={() => onRetry()}\n            >\n                Retry\n            </Button>}\n        </div>\n    );\n}\n\nfunction CloudMissingServiceAccountErrorView({\n                                                 fireCMSBackend,\n                                                 projectId,\n                                                 onFixed\n                                             }: {\n    fireCMSBackend: FireCMSBackend,\n    projectId: string,\n    onFixed?: () => void,\n}) {\n\n    const { projectsApi } = useFireCMSBackend();\n\n    const snackbarController = useSnackbarController();\n\n    const [isSubmitting, setIsSubmitting] = useState(false);\n    const [pendingLogin, setPendingLogin] = useState(false);\n\n    const doCreateServiceAccount = async () => {\n        if (!fireCMSBackend.googleCredential?.accessToken) {\n            throw new Error(\"SassMissingServiceAccountErrorView: No access token found\");\n        }\n        setIsSubmitting(true);\n        return projectsApi.createServiceAccount(fireCMSBackend.googleCredential.accessToken, projectId)\n            .finally(() => setIsSubmitting(false))\n    };\n\n    useEffect(() => {\n        if (pendingLogin && fireCMSBackend.googleCredential?.accessToken) {\n            doCreateServiceAccount().then(() => {\n                snackbarController.open({\n                    type: \"success\",\n                    message: \"Service account created successfully\"\n                });\n                if (onFixed)\n                    onFixed();\n            }).catch(e => {\n                snackbarController.open({\n                    type: \"error\",\n                    message: \"Service account creation error: \" + e.message\n                });\n            });\n            setPendingLogin(false);\n        }\n    }, [pendingLogin, fireCMSBackend.googleCredential?.accessToken]);\n\n    const onClick = async () => {\n        const accessToken = fireCMSBackend.googleCredential?.accessToken;\n        if (!accessToken) {\n            setPendingLogin(true);\n            fireCMSBackend.googleLogin(true);\n        } else {\n            await doCreateServiceAccount();\n        }\n    };\n    return <div\n        className=\"flex flex-col items-center space-y-2 py-4\">\n        <Typography color={\"error\"}>\n            Service account missing\n        </Typography>\n        <LoadingButton\n            variant=\"outlined\"\n            color=\"error\"\n            onClick={onClick}\n            loading={isSubmitting}\n            startIcon={<BuildIcon/>}\n        >\n            Fix\n        </LoadingButton>\n    </div>\n}\n\nfunction CloudNeedsToAcceptTermsErrorView({\n                                              projectId,\n                                              onFixed\n                                          }: {\n    projectId: string,\n    onFixed?: () => void,\n}) {\n\n    return <div\n        className=\"flex flex-col items-center space-y-2 py-4\">\n        <Typography color={\"error\"}>\n            You need to accept Google&apos;s terms of service\n            before you can use this service.\n        </Typography>\n\n        <Typography color={\"error\"}>\n            You can do so by visiting the following link:\n            <a\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n                href={\"https://console.cloud.google.com/welcome?project=\" + projectId}>\n                {`https://console.cloud.google.com/welcome?project=${projectId}`}\n            </a>\n        </Typography>\n        <Button\n            variant=\"outlined\"\n            color=\"error\"\n            onClick={onFixed}\n            startIcon={<BuildIcon/>}\n        >\n            I have accepted the terms\n        </Button>\n    </div>\n}\n\nfunction CloudNoPreviousFirebaseProjectsErrorView({\n                                                      projectId,\n                                                      onFixed\n                                                  }: {\n    projectId: string,\n    onFixed?: () => void,\n}) {\n\n    return <div\n        className=\"flex flex-col items-center space-y-2 py-4\">\n        <Typography color={\"error\"}>\n            You need to accept Firebase&apos;s terms of service\n            before you can use this service.\n        </Typography>\n\n        <Typography color={\"error\"}>\n            You can do so by visiting the following link:\n            <a\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n                href={\"https://console.firebase.google.com/\"}>\n                {\"https://console.firebase.google.com/\"}\n            </a>\n        </Typography>\n\n        <Button\n            variant=\"outlined\"\n            color=\"error\"\n            onClick={onFixed}\n            startIcon={<BuildIcon/>}\n        >\n            I have accepted the terms\n        </Button>\n    </div>\n}\n\nfunction ServiceAccountMissingPermissions(props: {\n    missingPermissions: string[] | undefined,\n}) {\n\n    return <div\n        className=\"flex flex-col space-y-2 py-4\">\n\n        <Typography color={\"error\"}>\n            Missing permissions\n        </Typography>\n\n        {props.missingPermissions && <>\n            <Typography variant={\"body2\"}>\n                This service account is missing the following permissions:\n            </Typography>\n\n            <Typography variant={\"caption\"} component={\"ul\"}>\n                {props.missingPermissions.map((permission) => <li key={permission}>\n                    <code>{permission}</code>\n                </li>)}\n            </Typography>\n        </>}\n\n    </div>;\n}\n","import { ProductPrice, Subscription } from \"../../types/subscriptions\";\nimport { ProjectSubscriptionPlan } from \"../../types/projects\";\n\nexport function getPriceString(price: ProductPrice) {\n\n    if(price.currency === \"usd\") {\n        return new Intl.NumberFormat(\"en-US\", {\n            style: \"currency\",\n            currency: price.currency\n        }).format(price.unit_amount / 100) + \" user/\" + price.interval;\n    }\n\n    return new Intl.NumberFormat(\"es-ES\", {\n        style: \"currency\",\n        currency: price.currency\n    }).format(price.unit_amount / 100) + \" user/\" + price.interval;\n}\n\n\nexport function getStatusText(subscription: Subscription) {\n    if (subscription.status === \"active\") return \"Active\";\n    if (subscription.status === \"trialing\") return \"Trialing\";\n    if (subscription.status === \"past_due\") return \"Past due\";\n    if (subscription.status === \"canceled\") return \"Canceled\";\n    if (subscription.status === \"unpaid\") return \"Unpaid\";\n    if (subscription.status === \"incomplete\") return \"Incomplete\";\n    if (subscription.status === \"incomplete_expired\") return \"Incomplete expired\";\n    return \"Unknown\";\n}\n\nexport function getSubscriptionPlanName(subscriptionPlan: ProjectSubscriptionPlan) {\n    switch (subscriptionPlan) {\n        case \"free\":\n            return \"Free\";\n        case \"cloud_plus\":\n            return \"Plus\";\n        case \"cloud_pro\":\n            return \"Pro\";\n    }\n}\n","import { Chip } from \"@firecms/ui\";\nimport { ProjectSubscriptionPlan } from \"../../types\";\nimport { getSubscriptionPlanName } from \"../settings/common\";\n\nexport function PlanChip({ subscriptionPlan }: { subscriptionPlan: ProjectSubscriptionPlan }) {\n\n    const planName = getSubscriptionPlanName(subscriptionPlan);\n    return <Chip className=\"uppercase font-medium\"\n                 colorScheme={\"tealDarker\"}\n                 size={\"small\"}>\n        {planName + \" plan\"}\n    </Chip>\n}\n","import { useEffect, useState } from \"react\";\nimport { Alert, Chip, LoadingButton, RocketLaunchIcon, Select, SelectItem } from \"@firecms/ui\";\nimport { ProductPrice, ProductWithPrices, SubscriptionType } from \"../../types\";\nimport { getPriceString, getSubscriptionPlanName } from \"../settings/common\";\n\nexport function ProductView({\n                                product,\n                                includePriceSelect = true,\n                                includePriceLabel = true,\n                                largePriceLabel = false,\n                                subscribe,\n                                projectId\n                            }: {\n    product: ProductWithPrices,\n    projectId?: string,\n    includePriceSelect?: boolean,\n    includePriceLabel?: boolean,\n    largePriceLabel?: boolean,\n    subscribe: (projectId: string,\n                productPrice: ProductPrice,\n                onCheckoutSessionReady: (url: string, error: Error) => void,\n                type: SubscriptionType) => Promise<() => void>\n}) {\n\n    const [error, setError] = useState<Error>();\n\n    const [selectedPrice, setSelectedPrice] = useState<ProductPrice>();\n    const productPrices: ProductPrice[] = product.prices;\n    useEffect(() => {\n        if (productPrices.length > 0) {\n            setSelectedPrice(productPrices[0]);\n        }\n    }, [productPrices]);\n\n    if (product.metadata.type !== \"cloud_pro\" && product.metadata.type !== \"cloud_plus\") {\n        throw new Error(\"Error: Unmapped product type in ProductView\");\n    }\n\n    const planName = getSubscriptionPlanName(product.metadata.type);\n\n    const priceSelect = productPrices?.length > 1\n        ? <>\n            <Select\n                size={\"small\"}\n                invisible={true}\n                padding={false}\n                onChange={(e) => {\n                    setSelectedPrice(productPrices.find(price => price.id === e.target.value));\n                }}\n                position={\"item-aligned\"}\n                // label={\"Choose pricing plan\"}\n                renderValue={(value) => {\n                    const price = productPrices.find(price => price.id === value);\n                    if (!price) return null;\n                    if (largePriceLabel) {\n                        return <span\n                            className={\"ml-4 mb-4 text-2xl font-bold text-primary text-center my-8\"}>{getPriceString(price)}</span>\n                    }\n                    return <Chip>\n                        {price ? getPriceString(price) : \"\"}\n                    </Chip>;\n                }}\n                value={selectedPrice?.id ?? \"\"}>\n                {productPrices && productPrices.map(price =>\n                    <SelectItem key={price.id} value={price.id}>\n                        {getPriceString(price)}\n                    </SelectItem>\n                )}\n            </Select>\n        </>\n        : productPrices ?\n            (largePriceLabel ? <span\n                    className={\"ml-4 mb-4 text-2xl font-bold text-primary text-center my-8\"}>{getPriceString(productPrices[0])}</span>\n                : <Chip\n                    size={\"small\"}>\n                    {getPriceString(productPrices[0])}\n                </Chip>)\n            : null;\n\n    const [linkLoading, setLinkLoading] = useState<boolean>(false);\n\n    const doSubscribe = () => {\n        if (!projectId || selectedPrice === undefined) return;\n        setLinkLoading(true);\n        return subscribe(\n            projectId,\n            selectedPrice,\n            (url, error) => {\n                if (!url && !error)\n                    return;\n                if (error) {\n                    setError(error);\n                }\n                if (url) {\n                    if (typeof window !== \"undefined\")\n                        window.open(url, \"_blank\"); // Open a new tab\n                    // window.location.assign(url);\n                }\n                setLinkLoading(false);\n            },\n            product.metadata.type);\n    }\n\n    return <>\n\n        {includePriceSelect && <>\n            {includePriceLabel && <div className={\"my-2 flex items-center gap-2\"}>\n                You can upgrade your project for {priceSelect}\n            </div>}\n            {!includePriceLabel && priceSelect}\n        </>}\n\n        <LoadingButton\n            variant={\"filled\"}\n            loading={linkLoading}\n            onClick={doSubscribe}\n            startIcon={<RocketLaunchIcon/>}>\n            Upgrade to {planName}\n        </LoadingButton>\n\n        {error &&\n            <Alert color=\"error\" className={\"my-4\"}>{error.message}</Alert>\n        }\n\n    </>;\n}\n","import { ProductView } from \"./ProductView\";\nimport { useFireCMSBackend, useProjectConfig, useSubscriptionsForUserController } from \"../../hooks\";\nimport { LoadingButton, RocketLaunchIcon } from \"@firecms/ui\";\nimport { ProductPrice } from \"../../types\";\n\nexport function UpgradeToPlusButton({\n                                        includePriceSelect,\n                                        includePriceLabel,\n                                        largePriceLabel\n                                    }: {\n    includePriceSelect: boolean,\n    includePriceLabel: boolean,\n    largePriceLabel: boolean\n}) {\n    const { backendFirebaseApp } = useFireCMSBackend();\n    const {\n        subscriptionPlan,\n        projectId\n    } = useProjectConfig();\n    if (!subscriptionPlan)\n        throw new Error(\"No subscription plan\");\n    const {\n        products,\n        subscribe,\n        getSubscriptionsForProject\n    } = useSubscriptionsForUserController({\n        firebaseApp: backendFirebaseApp,\n    });\n\n    const plusProduct = products?.find(p => p.metadata?.type === \"cloud_plus\");\n\n    if (!plusProduct) {\n        return <LoadingButton\n            variant={\"filled\"}\n            loading={true}\n            startIcon={<RocketLaunchIcon/>}>\n            Upgrade to PLUS\n        </LoadingButton>\n    }\n\n    return <ProductView\n        includePriceSelect={includePriceSelect}\n        includePriceLabel={includePriceLabel}\n        largePriceLabel={largePriceLabel}\n        product={plusProduct}\n        projectId={projectId}\n        subscribe={subscribe}/>\n}\n\nfunction getPriceString(price: ProductPrice) {\n    return new Intl.NumberFormat(\"es-ES\", {\n        style: \"currency\",\n        currency: price.currency\n    }).format(price.unit_amount / 100) + \" per \" + price.interval;\n}\n","import React from \"react\";\nimport { useNavigationController } from \"@firecms/core\";\nimport { Button, CloseIcon, Container, Dialog, DialogContent, IconButton, } from \"@firecms/ui\";\nimport { useNavigate } from \"react-router-dom\";\nimport { UpgradeToPlusButton } from \"./UpgradeToPlusButton\";\n\nexport function PlansComparisonDialog({\n                                          open,\n                                          onClose,\n                                      }: {\n    open: boolean,\n    onClose: () => void\n}) {\n\n    const navigationController = useNavigationController();\n    const navigate = useNavigate();\n    const goToSettings = () => {\n        onClose();\n        navigate(navigationController.basePath + \"/settings\");\n    }\n\n    return <Dialog\n        fullScreen={true}\n        open={open}\n        onOpenChange={(open) => !open ? onClose() : undefined}\n    >\n        <DialogContent fullHeight={true}>\n            <PlansComparison/>\n        </DialogContent>\n        <IconButton className={\"absolute top-4 right-4\"}\n                    onClick={onClose}>\n            <CloseIcon/>\n        </IconButton>\n    </Dialog>;\n}\n\nexport function PlansComparison() {\n\n    const freeTier = (\n        <div\n            className=\"h-full max-w-sm p-6 border border-solid border-gray-200 rounded-lg shadow dark:border-gray-700 flex flex-col\">\n\n            <h3 className={\"text-2xl md:text-4xl font-bold text-center text-gray-800 dark:text-gray-200 uppercase my-4\"}>\n                Free\n            </h3>\n            <div className={\"grow\"}>\n                <p className={\"text-lg mb-4 text-center font-semibold\"}>\n                    Try FireCMS and upgrade to a paid plan when you\n                    need more features.\n                </p>\n                <ul>\n                    <li className={\"ml-8 list-disc\"}>Unlimited projects</li>\n                    <li className={\"ml-8 list-disc\"}>Unlimited collections</li>\n                    <li className={\"ml-8 list-disc\"}>All available form fields</li>\n                    <li className={\"ml-8 list-disc\"}>Schema editor and data inference</li>\n                    <li className={\"ml-8 list-disc\"}>Advanced data import and export</li>\n                    <li className={\"ml-8 list-disc\"}>Default roles</li>\n                    <li className={\"ml-8 list-disc\"}>3 users</li>\n                </ul>\n            </div>\n            <div className={\"text-center mt-4 text-gray-600 dark:text-gray-400 w-full\"}>\n                <span className={\"text-2xl font-bold \"}>€0 user/month</span>\n            </div>\n\n        </div>\n    );\n\n    const plusTier = (\n        <div\n            className=\"h-full max-w-sm p-6 rounded-lg flex flex-col outline-none ring-2 ring-primary ring-opacity-75 ring-offset-2 ring-offset-transparent\">\n\n            <h3 className={\"text-2xl md:text-4xl font-bold text-center dark:text-primary text-primary uppercase my-4\"}>\n                Plus\n            </h3>\n            <div className={\"grow\"}>\n                <p className={\"text-lg mb-4 text-center font-semibold\"}>\n                    Perfect for startups\n                </p>\n                <ul>\n                    <li className={\"ml-8 list-disc\"}>Everything in the free tier</li>\n                    <li className={\"ml-8 list-disc\"}>Local text search</li>\n                    <li className={\"ml-8 list-disc\"}>Custom fields and custom views</li>\n                    <li className={\"ml-8 list-disc\"}>Unlimited users and roles</li>\n                    <li className={\"ml-8 list-disc\"}>Unlimited data export</li>\n                    <li className={\"ml-8 list-disc\"}>Theme and logo customization</li>\n                    <li className={\"ml-8 list-disc\"}>Custom user roles</li>\n                    <li className={\"ml-8 list-disc\"}>GPT-4 content generation</li>\n                </ul>\n            </div>\n\n            <div className={\"flex flex-col gap-4 items-center justify-center mt-8\"}>\n                <UpgradeToPlusButton includePriceSelect={true}\n                                     includePriceLabel={false}\n                                     largePriceLabel={true}/>\n            </div>\n\n        </div>\n    );\n\n    const proTier = (\n        <div\n            className=\"h-full max-w-sm p-6 border border-solid border-gray-200 rounded-lg shadow dark:border-gray-700 flex flex-col\">\n\n            <h3 className={\"text-2xl md:text-4xl font-bold text-center text-gray-800 dark:text-gray-200 uppercase my-4\"}>\n                Pro\n            </h3>\n            <div className={\"grow\"}>\n                <p className={\"text-lg mb-4 text-center font-semibold\"}>\n                    Perfect for agencies and larger organizations\n                </p>\n                <ul>\n                    <li className={\"ml-8 list-disc\"}>Everything in PLUS</li>\n                    <li className={\"ml-8 list-disc\"}>Self-hosted</li>\n                    <li className={\"ml-8 list-disc\"}>SAML SSO</li>\n                    <li className={\"ml-8 list-disc\"}>Custom domain</li>\n                    <li className={\"ml-8 list-disc\"}>Full CMS components customization</li>\n                    <li className={\"ml-8 list-disc\"}>Priority support</li>\n                    <li className={\"ml-8 list-disc\"}>Roadmap prioritization</li>\n                </ul>\n            </div>\n            <div className={\"text-center mt-4 text-primary w-full\"}>\n                <Button\n                    component={\"a\"}\n                    size={\"large\"}\n                    variant={\"outlined\"}\n                    href=\"https://firecms.co/pro\"\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\"\n                >\n                    More info\n                </Button>\n            </div>\n\n        </div>\n    );\n\n    return <div className={\"overflow-auto my-auto\"}>\n        <Container className={\"flex flex-col gap-4 p-8 m-auto\"}>\n\n            <h2 className={\"text-3xl md:text-4xl font-bold my-4 text-center\"}>\n                Full no-code/low-code solution\n            </h2>\n\n            <p>\n                <strong>FireCMS Cloud</strong> offers a complete, end-to-end\n                solution for businesses that require the highest level of\n                support and security. With dedicated hosting, advanced features, and\n                expert support, you will have everything you need to take your project\n                to the next level.\n            </p>\n\n            {/*three columns layout*/}\n            <div\n                className=\"flex flex-col items-center lg:grid lg:grid-cols-3 gap-4 mt-8 w-full mx-auto\"\n            >\n                {freeTier}\n                {plusTier}\n                {proTier}\n            </div>\n\n        </Container>\n    </div>;\n\n}\n","import { Typography } from \"@firecms/ui\";\n\nexport function StripeDisclaimer() {\n    return <Typography variant={\"caption\"} className={\"mt-4\"}>\n        You will be redirected to <b>Stripe</b> to manage the subscription.\n        You will be charged every month per the maximum concurrent of users.\n        You can cancel your subscription at any time, and enjoy the benefits\n        until the end of the current billing period.\n    </Typography>;\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useBrowserTitleAndIcon } from \"@firecms/core\";\nimport { AutoAwesomeIcon, Card, Chip, CircularProgress, cn, Typography, } from \"@firecms/ui\";\nimport { useSubscriptionsForUserController } from \"../../hooks/useSubscriptionsForUserController\";\nimport { ProductView } from \"./ProductView\";\nimport { getPriceString, getStatusText } from \"../settings/common\";\nimport { Subscription } from \"../../types\";\nimport { StripeDisclaimer } from \"./StripeDisclaimer\";\nimport { useFireCMSBackend, useProjectConfig } from \"../../hooks\";\nimport { PlanChip } from \"./PlanChip\";\n\nexport function ProjectSubscriptionPlans({ uid }: {\n    uid: string\n}) {\n\n    const { backendFirebaseApp } = useFireCMSBackend();\n    const {\n        subscriptionPlan,\n        projectId\n    } = useProjectConfig();\n    if (!subscriptionPlan)\n        throw new Error(\"No subscription plan\");\n\n    useBrowserTitleAndIcon(\"Plans\")\n\n    const {\n        products,\n        subscribe,\n        getSubscriptionsForProject\n    } = useSubscriptionsForUserController({\n        firebaseApp: backendFirebaseApp,\n    });\n\n    const projectSubscriptions = getSubscriptionsForProject(projectId);\n\n    const loading = projectSubscriptions === undefined || products === undefined;\n\n    const cloudProducts = (products ?? []).filter(p => p.metadata?.type === \"cloud_plus\" || p.metadata?.type === \"cloud_pro\");\n\n    const plusProduct = cloudProducts.find(p => p.metadata?.type === \"cloud_plus\");\n    const plusSubscription = projectSubscriptions.find(s => s.product.metadata?.type === \"cloud_plus\");\n\n    return (\n        <div className={\"relative\"}>\n\n            {loading &&\n                <div className={\"absolute w-full h-full flex items-center justify-center\"}><CircularProgress/></div>}\n\n            <div className={cn(\"grid grid-cols-12 gap-4 items-center\", loading ? \"collapse\" : \"\")}>\n\n                <div className={\"col-span-12 md:col-span-7 flex flex-col gap-2\"}>\n\n                    <Typography variant={\"h4\"} className=\"mt-4 mb-2\">Subscription Plan</Typography>\n\n                    <Typography\n                        variant={\"subtitle1\"}\n                        className=\"my-2\">\n                        This project is on the <PlanChip subscriptionPlan={subscriptionPlan}/>\n\n                    </Typography>\n\n                    {subscriptionPlan !== \"cloud_plus\" && plusProduct && <ProductView\n                        product={plusProduct}\n                        projectId={projectId}\n                        subscribe={subscribe}/>}\n\n                    {subscriptionPlan === \"cloud_plus\" && plusSubscription &&\n                        <CurrentSubscriptionView subscription={plusSubscription}/>}\n\n                    <StripeDisclaimer/>\n\n                </div>\n\n                <div className={cn(\"col-span-12 md:col-span-5\")}>\n                    <Card\n                        className={\"p-6 bg-amber-200 dark:bg-amber-700 border-amber-300 dark:border-amber-800 flex flex-col gap-4\"}>\n\n                        {subscriptionPlan === \"free\" && <div>Upgrade to the <b>PLUS</b> plan to enable the following\n                            features:</div>}\n\n                        {subscriptionPlan === \"cloud_plus\" && <div>By being on the <b>PLUS</b> plan you are enjoying the\n                            following features:</div>}\n\n                        <ul className={\"px-2 text-base\"}>\n                            <li className={\"flex gap-4 items-center py-0.5\"}><AutoAwesomeIcon size={\"small\"}/>\n                                Local text search\n                            </li>\n                            <li className={\"flex gap-4 items-center py-0.5\"}><AutoAwesomeIcon size={\"small\"}/>Unlimited\n                                users and roles\n                            </li>\n                            <li className={\"flex gap-4 items-center py-0.5\"}><AutoAwesomeIcon size={\"small\"}/>Theme and\n                                logo customization\n                            </li>\n                            <li className={\"flex gap-4 items-center py-0.5\"}><AutoAwesomeIcon size={\"small\"}/>\n                                Custom fields and custom views\n                            </li>\n                            <li className={\"flex gap-4 items-center py-0.5\"}><AutoAwesomeIcon size={\"small\"}/>\n                                Custom user roles\n                            </li>\n                            <li className={\"flex gap-4 items-center py-0.5\"}><AutoAwesomeIcon size={\"small\"}/>GPT-4\n                                content generation\n                            </li>\n                            <li className={\"flex gap-4 items-center py-0.5\"}><AutoAwesomeIcon size={\"small\"}/>\n                                Unlimited data export\n                            </li>\n                        </ul>\n                    </Card>\n\n                </div>\n            </div>\n        </div>\n    );\n\n}\n\ninterface CurrentSubscriptionViewProps {\n    subscription: Subscription;\n}\n\nfunction CurrentSubscriptionView({\n                                     subscription,\n                                 }: CurrentSubscriptionViewProps) {\n\n    const {\n        getBackendAuthToken,\n        projectsApi\n    } = useFireCMSBackend();\n\n    const statusText = getStatusText(subscription);\n    const [stripePortalUrl, setStripePortalUrl] = useState<string | undefined>(undefined);\n\n    useEffect(() => {\n        if (!stripePortalUrl) {\n            projectsApi.getStripePortalLink(subscription.metadata.projectId)\n                .then(setStripePortalUrl)\n            ;\n        }\n    }, []);\n\n    return (\n        <div\n            key={subscription.id}\n            className=\"mt-2 mb-2\"\n        >\n            <div>\n                <>\n                    The subscription is <Chip\n                    className={\"inline\"}\n                    size={\"tiny\"}\n                    colorScheme={statusText === \"Active\" ? \"greenDark\" : \"orangeDark\"}>\n                    {statusText} </Chip>.\n                </>\n\n                {subscription.current_period_end && <> The next payment is\n                    on {subscription.current_period_end.toDate().toLocaleDateString()}. </>}\n\n                <>\n                    The current price is <Chip\n                    size={\"tiny\"}>{getPriceString(subscription.price)}\n                </Chip>per active user.\n                </>\n\n                {subscription.cancel_at && <> This subscription was <b>cancelled</b> and\n                    will be active\n                    until {subscription.cancel_at.toDate().toLocaleDateString()}. </>}\n\n                <a\n                    className={\" \" + subscription.canceled_at ? undefined : \"text-text-secondary dark:text-text-secondary-dark\"}\n                    href={stripePortalUrl}\n                    target=\"_blank\" rel=\"noreferrer\">{\n                    subscription.canceled_at ? \" Renew subscription\" : \" Cancel subscription\"\n                }</a>\n            </div>\n\n        </div>\n    );\n}\n","import React from \"react\";\nimport { Alert, Button } from \"@firecms/ui\";\nimport { PlansComparisonDialog } from \"./PlansComparison\";\nimport { PlanChip } from \"./PlanChip\";\nimport { useProjectConfig } from \"../../hooks\";\n\nexport type SubscriptionPlanWidgetProps = {\n    message?: React.ReactNode,\n    showForPlans?: string[],\n    includeCTA?: boolean\n}\n\nexport function SubscriptionPlanWidget({ message, showForPlans, includeCTA = true }: SubscriptionPlanWidgetProps) {\n\n    const { subscriptionPlan } = useProjectConfig();\n\n    const [dialogOpen, setDialogOpen] = React.useState(false);\n\n    if (!subscriptionPlan) return null;\n    if (showForPlans && !showForPlans.includes(subscriptionPlan)) return null;\n\n    return <>\n\n        <Alert\n            color={\"info\"}\n            className={\"my-4\"}\n            action={includeCTA && <Button\n                className={\"dark:!text-white dark:border-white dark:hover:bg-white dark:hover:!text-primary min-w-content\"}\n                variant={\"outlined\"}\n                onClick={() => setDialogOpen(true)}>\n                More info\n            </Button>}>\n            <div>This project is currently in the <PlanChip subscriptionPlan={subscriptionPlan}/></div>\n            <div>{message}</div>\n        </Alert>\n\n        <PlansComparisonDialog open={dialogOpen} onClose={() => setDialogOpen(false)}/>\n\n    </>;\n}\n","import { useEffect, useState } from \"react\";\n\nimport { Button, Chip, cn, defaultBorderMixin, Paper, Typography } from \"@firecms/ui\";\nimport { getPriceString, getStatusText } from \"./common\";\nimport { useFireCMSBackend } from \"../../hooks\";\nimport { Subscription } from \"../../types/subscriptions\";\n\ninterface CurrentSubscriptionViewProps {\n    subscription: Subscription;\n}\n\nexport function CurrentSubscriptionView({\n                                            subscription,\n                                        }: CurrentSubscriptionViewProps) {\n    const { projectsApi } = useFireCMSBackend();\n\n    const statusText = getStatusText(subscription);\n    const [stripePortalUrl, setStripePortalUrl] = useState<string | undefined>(undefined);\n\n    useEffect(() => {\n        if (!stripePortalUrl) {\n            projectsApi.getStripePortalLink(subscription.metadata.projectId)\n                .then(setStripePortalUrl)\n            ;\n        }\n    }, []);\n\n    return (\n        <Paper\n            key={subscription.id}\n            className=\"mt-2 mb-2 p-4 -mx-2\"\n        >\n            <div className=\"flex\">\n                <Typography\n                    className=\"flex-grow\"\n                    variant={\"h6\"}>{subscription.product.name}</Typography>\n\n                <Chip\n                    size={\"small\"}\n                    colorScheme={statusText === \"Active\" ? \"greenDark\" : \"orangeDark\"}>\n                    {statusText}\n                </Chip>\n            </div>\n            <div className=\"flex mt-2 items-center\">\n                <div\n                    className=\"flex-grow flex flex-col items-start gap-2\">\n                    <Typography>\n                        Project: <b>{subscription.metadata.projectId}</b>\n                    </Typography>\n                    <Chip\n                        size={\"small\"}>\n                        {getPriceString(subscription.price) + \" per active user\"}\n                    </Chip>\n                    {subscription.cancel_at &&\n                        <Typography variant={\"caption\"}\n                                    className=\"text-secondary\">\n                            This subscription was <b>cancelled</b> and\n                            will be\n                            active\n                            until {subscription.cancel_at.toDate().toLocaleDateString()}\n                        </Typography>}\n                </div>\n\n                <Button component={\"a\"}\n                        variant={\"text\"}\n                        className={\" \" + subscription.canceled_at ? undefined : \"text-text-secondary dark:text-text-secondary-dark\"}\n                        size={\"small\"}\n                        href={stripePortalUrl}\n                        target=\"_blank\"\n                        rel=\"noreferrer\">{\n                    subscription.canceled_at ? \"Renew\" : \"Cancel\"\n                }</Button>\n            </div>\n\n        </Paper>\n    );\n}\n\nexport function ActiveSubscriptions({ activeSubscriptions }: {\n    activeSubscriptions: Subscription[],\n}) {\n\n    return <div className={cn(\"my-8 border-t\", defaultBorderMixin)}>\n\n        <Typography className=\"my-4 mt-8 font-medium\">\n            {\"Active Subscriptions\".toUpperCase()}\n        </Typography>\n\n        {activeSubscriptions.map(subscription => {\n            return <CurrentSubscriptionView key={subscription.id}\n                                            subscription={subscription}/>;\n        })}\n    </div>\n\n}\n","import React, { useDeferredValue, useEffect, useState } from \"react\";\n\nimport { FireCMSLogo, useBrowserTitleAndIcon, useSnackbarController } from \"@firecms/core\";\nimport {\n    BooleanSwitch,\n    BooleanSwitchWithLabel,\n    Button,\n    CenteredView,\n    Checkbox,\n    FileUpload,\n    OnFileUploadRejected,\n    Paper,\n    TextField,\n    Typography,\n} from \"@firecms/ui\";\nimport { useFireCMSBackend, useProjectConfig } from \"../../hooks\";\nimport { ProjectSubscriptionPlans, SubscriptionPlanWidget } from \"../subscriptions\";\nimport { SecurityRulesInstructions } from \"../SecurityRulesInstructions\";\n\nexport function ProjectSettings() {\n\n    const { backendUid } = useFireCMSBackend();\n\n    const projectConfig = useProjectConfig();\n\n    useBrowserTitleAndIcon(\"Project settings\")\n\n    if (!backendUid) {\n        throw new Error(\"No backendUid in ProjectSettings\");\n    }\n\n    return (\n        <CenteredView maxWidth={\"6xl\"}\n                      className={\"w-full flex flex-col gap-16 px-4 py-16\"}>\n\n            <ProjectSubscriptionPlans uid={backendUid}/>\n\n            <div className={\"flex flex-col gap-2\"}>\n\n                <Typography variant={\"h4\"} className=\"mt-4 mb-2\">Settings</Typography>\n\n                <ProjectNameTextField/>\n\n                <div className={\"col-span-12\"}>\n                    <BooleanSwitchWithLabel\n                        position={\"start\"}\n                        label=\"Enable local text search\"\n                        onValueChange={(v) => projectConfig.updateLocalTextSearchEnabled(v)}\n                        value={projectConfig.localTextSearchEnabled}\n                    />\n                </div>\n\n                <ThemeColors/>\n\n            </div>\n\n            <div className={\"flex flex-col gap-2\"}>\n                <SecurityRulesInstructions/>\n            </div>\n\n        </CenteredView>\n    );\n\n}\n\nfunction ProjectNameTextField() {\n\n    const projectConfig = useProjectConfig();\n    const [name, setName] = useState(projectConfig.projectName ?? \"\");\n    const deferredName = useDeferredValue(name);\n    useEffect(() => {\n        if (deferredName) projectConfig.updateProjectName(deferredName);\n    }, [deferredName]);\n\n    return <TextField value={name}\n                      label={\"Project name\"}\n                      onChange={e => setName(e.target.value)}\n                      onBlur={() => {\n                          if (name) projectConfig.updateProjectName(name);\n                      }}/>;\n\n}\n\nfunction LogoUploadField({ onNoSubscriptionPlan }: {\n    onNoSubscriptionPlan: () => void\n}) {\n\n    const {\n        logo,\n        canModifyTheme,\n        uploadLogo\n    } = useProjectConfig();\n\n    const snackbarContext = useSnackbarController();\n\n    const onFilesAdded = async (acceptedFiles: File[]) => {\n        if (!canModifyTheme) {\n            onNoSubscriptionPlan();\n            return;\n        }\n        if (!acceptedFiles.length)\n            return;\n\n        uploadLogo(acceptedFiles[0]);\n    }\n\n    const onFilesRejected: OnFileUploadRejected = (fileRejections, event) => {\n        if (!canModifyTheme) {\n            onNoSubscriptionPlan();\n        } else {\n            for (const fileRejection of fileRejections) {\n                for (const error of fileRejection.errors) {\n                    snackbarContext.open({\n                        type: \"error\",\n                        message: `Error uploading file: ${error.message}`\n                    });\n                }\n            }\n        }\n    };\n\n    return <FileUpload\n        accept={{ \"*/image\": [] }}\n        maxSize={2048 * 1024}\n        onFilesAdded={onFilesAdded}\n        onFilesRejected={onFilesRejected}\n        uploadDescription={\"Drag and drop your logo here\"}\n    >\n        {logo && <img\n            className={\"w-40 h-40 p-4\"}\n            src={logo}/>}\n\n        {!logo && <FireCMSLogo\n            className={\"w-40 h-40 p-4\"}/>}\n    </FileUpload>;\n\n}\n\nfunction SampleComponents() {\n    const [checked, setChecked] = useState<boolean>(true);\n    return <div className={\"p-4 mt-4 flex flex-col items-center gap-2\"}>\n        <Typography variant={\"label\"}>Sample theme components</Typography>\n        <div className={\"flex flex-row gap-4 items-center justify-center\"}>\n            <Button> Button </Button>\n            <Button variant={\"outlined\"}> Button </Button>\n            <BooleanSwitch value={checked} onValueChange={setChecked}/>\n            <Checkbox checked={checked} onCheckedChange={setChecked}/>\n            <Checkbox color={\"secondary\"} checked={checked} onCheckedChange={setChecked}/>\n        </div>\n    </div>;\n}\n\nfunction ThemeColors() {\n    const [showUpgradeBanner, setShowUpgradeBanner] = useState<boolean>(false);\n\n    const projectConfig = useProjectConfig();\n    return <div className={\"flex flex-col gap-2 mt-4 mb-2\"}>\n\n        <Typography variant={\"h4\"} className=\"mt-4 mb-2\">Theme</Typography>\n        <div className={\"grid grid-cols-12 gap-4\"}>\n\n            <div className={\"col-span-12 md:col-span-6\"}>\n                <LogoUploadField onNoSubscriptionPlan={() => setShowUpgradeBanner(true)}/>\n            </div>\n\n            <div className={\"col-span-12 md:col-span-6\"}>\n                <Paper className={\"flex flex-col gap-2 p-4\"}>\n\n                    <div className={\"flex flex-row gap-4 justify-center mt-4\"}>\n                        <div className={\"flex flex-row gap-2\"}>\n                            <input\n                                type=\"color\"\n                                value={projectConfig.primaryColor}\n                                onChange={e => {\n                                    setShowUpgradeBanner(true);\n                                    return projectConfig.updatePrimaryColor(e.target.value);\n                                }}\n                            />\n                            <Typography variant={\"subtitle2\"}>Primary color</Typography>\n                        </div>\n                        <div className={\"flex flex-row gap-2\"}>\n                            <input\n                                type=\"color\"\n                                value={projectConfig.secondaryColor}\n                                onChange={e => {\n                                    setShowUpgradeBanner(true);\n                                    return projectConfig.updateSecondaryColor(e.target.value);\n                                }}\n                            />\n                            <Typography variant={\"subtitle2\"}>Secondary color</Typography>\n                        </div>\n                    </div>\n                    <SampleComponents/>\n                </Paper>\n            </div>\n        </div>\n        {showUpgradeBanner &&\n            <SubscriptionPlanWidget\n                showForPlans={[\"free\"]}\n                message={<>Upgrade to <b>PLUS</b> to customise the logo and colors</>}/>}\n    </div>\n\n}\n","export const googleIcon = () => <>\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 64 64\"\n        width={32}\n        height={32}\n    >\n        <linearGradient\n            id=\"95yY7w43Oj6n2vH63j6HJb\"\n            x1=\"29.401\"\n            x2=\"29.401\"\n            y1=\"4.064\"\n            y2=\"106.734\"\n            gradientTransform=\"matrix(1 0 0 -1 0 66)\"\n            gradientUnits=\"userSpaceOnUse\"\n        >\n            <stop offset=\"0\" stopColor=\"#ff5840\"/>\n            <stop offset=\".007\" stopColor=\"#ff5840\"/>\n            <stop offset=\".989\" stopColor=\"#fa528c\"/>\n            <stop offset=\"1\" stopColor=\"#fa528c\"/>\n        </linearGradient>\n        <path\n            fill=\"url(#95yY7w43Oj6n2vH63j6HJb)\"\n            d=\"M47.46,15.5l-1.37,1.48c-1.34,1.44-3.5,1.67-5.15,0.6c-2.71-1.75-6.43-3.13-11-2.37 c-4.94,0.83-9.17,3.85-11.64, 7.97l-8.03-6.08C14.99,9.82,23.2,5,32.5,5c5,0,9.94,1.56,14.27,4.46 C48.81,10.83,49.13,13.71,47.46,15.5z\"\n        />\n        <linearGradient\n            id=\"95yY7w43Oj6n2vH63j6HJc\"\n            x1=\"12.148\"\n            x2=\"12.148\"\n            y1=\".872\"\n            y2=\"47.812\"\n            gradientTransform=\"matrix(1 0 0 -1 0 66)\"\n            gradientUnits=\"userSpaceOnUse\"\n        >\n            <stop offset=\"0\" stopColor=\"#feaa53\"/>\n            <stop offset=\".612\" stopColor=\"#ffcd49\"/>\n            <stop offset=\"1\" stopColor=\"#ffde44\"/>\n        </linearGradient>\n        <path\n            fill=\"url(#95yY7w43Oj6n2vH63j6HJc)\"\n            d=\"M16.01,30.91c-0.09,2.47,0.37,4.83,1.27,6.96l-8.21,6.05c-1.35-2.51-2.3-5.28-2.75-8.22 c-1.06-6.88,0.54-13.38, 3.95-18.6l8.03,6.08C16.93,25.47,16.1,28.11,16.01,30.91z\"\n        />\n        <linearGradient\n            id=\"95yY7w43Oj6n2vH63j6HJd\"\n            x1=\"29.76\"\n            x2=\"29.76\"\n            y1=\"32.149\"\n            y2=\"-6.939\"\n            gradientTransform=\"matrix(1 0 0 -1 0 66)\"\n            gradientUnits=\"userSpaceOnUse\"\n        >\n            <stop offset=\"0\" stopColor=\"#42d778\"/>\n            <stop offset=\".428\" stopColor=\"#3dca76\"/>\n            <stop offset=\"1\" stopColor=\"#34b171\"/>\n        </linearGradient>\n        <path\n            fill=\"url(#95yY7w43Oj6n2vH63j6HJd)\"\n            d=\"M50.45,51.28c-4.55,4.07-10.61,6.57-17.36,6.71C22.91,58.2,13.66,52.53,9.07,43.92l8.21-6.05 C19.78,43.81, 25.67,48,32.5,48c3.94,0,7.52-1.28,10.33-3.44L50.45,51.28z\"\n        />\n        <linearGradient\n            id=\"95yY7w43Oj6n2vH63j6HJe\"\n            x1=\"46\"\n            x2=\"46\"\n            y1=\"3.638\"\n            y2=\"35.593\"\n            gradientTransform=\"matrix(1 0 0 -1 0 66)\"\n            gradientUnits=\"userSpaceOnUse\"\n        >\n            <stop offset=\"0\" stopColor=\"#155cde\"/>\n            <stop offset=\".278\" stopColor=\"#1f7fe5\"/>\n            <stop offset=\".569\" stopColor=\"#279ceb\"/>\n            <stop offset=\".82\" stopColor=\"#2cafef\"/>\n            <stop offset=\"1\" stopColor=\"#2eb5f0\"/>\n        </linearGradient>\n        <path\n            fill=\"url(#95yY7w43Oj6n2vH63j6HJe)\"\n            d=\"M59,31.97c0.01,7.73-3.26,14.58-8.55,19.31l-7.62-6.72c2.1-1.61,3.77-3.71,4.84-6.15\n        c0.29-0.66-0.2-1.41-0.92-1.41H37c-2.21,0-4-1.79-4-4v-2c0-2.21,1.79-4,4-4h17C56.75,27,59,29.22,59,31.97z\"\n        />\n    </svg>\n</>;\n\nexport const appleIcon = (mode: \"light\" | \"dark\") => <svg width={32} height={32}\n                                                          viewBox=\"0 0 56 56\"\n                                                          style={{ transform: \"scale(2.8)\" }}\n                                                          version=\"1.1\"\n                                                          xmlns=\"http://www.w3.org/2000/svg\">\n    <g stroke={mode === \"light\" ? \"#424245\" : \"white\"} strokeWidth=\"0.5\"\n       fillRule=\"evenodd\">\n        <path\n            d=\"M28.2226562,20.3846154 C29.0546875,20.3846154 30.0976562,19.8048315 30.71875,19.0317864 C31.28125,18.3312142 31.6914062,17.352829 31.6914062,16.3744437 C31.6914062,16.2415766 31.6796875,16.1087095 31.65625,16 C30.7304687,16.0362365 29.6171875,16.640178 28.9492187,17.4494596 C28.421875,18.06548 27.9414062,19.0317864 27.9414062,20.0222505 C27.9414062,20.1671964 27.9648438,20.3121424 27.9765625,20.3604577 C28.0351562,20.3725366 28.1289062,20.3846154 28.2226562,20.3846154 Z M25.2929688,35 C26.4296875,35 26.9335938,34.214876 28.3515625,34.214876 C29.7929688,34.214876 30.109375,34.9758423 31.375,34.9758423 C32.6171875,34.9758423 33.4492188,33.792117 34.234375,32.6325493 C35.1132812,31.3038779 35.4765625,29.9993643 35.5,29.9389701 C35.4179688,29.9148125 33.0390625,28.9122695 33.0390625,26.0979021 C33.0390625,23.6579784 34.9140625,22.5588048 35.0195312,22.474253 C33.7773438,20.6382708 31.890625,20.5899555 31.375,20.5899555 C29.9804688,20.5899555 28.84375,21.4596313 28.1289062,21.4596313 C27.3554688,21.4596313 26.3359375,20.6382708 25.1289062,20.6382708 C22.8320312,20.6382708 20.5,22.5950413 20.5,26.2911634 C20.5,28.5861411 21.3671875,31.013986 22.4335938,32.5842339 C23.3476562,33.9129053 24.1445312,35 25.2929688,35 Z\"\n            fill={mode === \"light\" ? \"#424245\" : \"white\"} fillRule=\"nonzero\"/>\n    </g>\n</svg>;\n\nexport const githubIcon = (mode: \"light\" | \"dark\") => <svg\n    fill={mode === \"light\" ? \"#1c1e21\" : \"white\"}\n    role=\"img\"\n    viewBox=\"0 0 24 24\"\n    width={28}\n    height={28}\n    xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n        d=\"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\"/>\n</svg>;\n\nexport const facebookIcon = (mode: \"light\" | \"dark\") => <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={28} height={28}\n    viewBox=\"0 0 90 90\">\n    <g>\n        <path\n            d=\"M90,15.001C90,7.119,82.884,0,75,0H15C7.116,0,0,7.119,0,15.001v59.998   C0,82.881,7.116,90,15.001,90H45V56H34V41h11v-5.844C45,25.077,52.568,16,61.875,16H74v15H61.875C60.548,31,59,32.611,59,35.024V41   h15v15H59v34h16c7.884,0,15-7.119,15-15.001V15.001z\"\n            fill={mode === \"light\" ? \"#39569c\" : \"white\"}/>\n    </g>\n</svg>;\n\nexport const microsoftIcon = (mode: \"light\" | \"dark\") => <svg\n    xmlns=\"http://www.w3.org/2000/svg\" width={28} height={28}\n    viewBox=\"0 0 480 480\">\n    <g>\n        <path\n            d=\"M0.176,224L0.001,67.963l192-26.072V224H0.176z M224.001,37.241L479.937,0v224H224.001V37.241z M479.999,256l-0.062,224   l-255.936-36.008V256H479.999z M192.001,439.918L0.157,413.621L0.147,256h191.854V439.918z\"\n            fill={mode === \"light\" ? \"#00a2ed\" : \"white\"}/>\n    </g>\n</svg>;\n\nexport const twitterIcon = (mode: \"light\" | \"dark\") => <svg\n    xmlns=\"http://www.w3.org/2000/svg\" width={28} height={28}\n    viewBox=\"0 0 24 24\">\n    <path fill={mode === \"light\" ? \"#00acee\" : \"white\"}\n          d=\"M24 4.557c-.883.392-1.832.656-2.828.775 1.017-.609 1.798-1.574 2.165-2.724-.951.564-2.005.974-3.127 1.195-.897-.957-2.178-1.555-3.594-1.555-3.179 0-5.515 2.966-4.797 6.045-4.091-.205-7.719-2.165-10.148-5.144-1.29 2.213-.669 5.108 1.523 6.574-.806-.026-1.566-.247-2.229-.616-.054 2.281 1.581 4.415 3.949 4.89-.693.188-1.452.232-2.224.084.626 1.956 2.444 3.379 4.6 3.419-2.07 1.623-4.678 2.348-7.29 2.04 2.179 1.397 4.768 2.212 7.548 2.212 9.142 0 14.307-7.721 13.995-14.646.962-.695 1.797-1.562 2.457-2.549z\"/>\n</svg>;\n\n","import { googleIcon } from \"./social_icons\";\nimport React from \"react\"\n\nimport { Button, cn } from \"@firecms/ui\";\n\nexport function GoogleLoginButton({\n                                      onClick,\n                                      disabled\n                                  }: {\n    onClick: () => void,\n    disabled?: boolean\n}) {\n    return (\n        <div className={\"m-4 w-full\"}>\n            <Button className={cn(\"w-full bg-white text-gray-900 dark:text-gray-900\", disabled ? \"\" : \"hover:text-white hover:dark:text-white\")}\n                    style={{\n                        height: \"40px\",\n                        borderRadius: \"4px\",\n                        fontSize: \"14px\"\n                    }}\n                    variant=\"filled\"\n                    disabled={disabled}\n                    onClick={onClick}>\n                <div\n                    className={cn(\"flex items-center justify-items-center \")}>\n                    <div className=\"flex flex-col items-center justify-center w-4.5 h-4.5\">\n                        {googleIcon()}\n                    </div>\n                    <div\n                        className={cn(\"flex-grow pl-6 text-left\")}>\n                        {\"Sign in with Google\"}\n                    </div>\n                </div>\n            </Button>\n\n        </div>\n    )\n}\n","import React, { useState } from \"react\";\n\nimport { BooleanSwitchWithLabel, Typography } from \"@firecms/ui\";\nimport { ErrorView, FireCMSLogo } from \"@firecms/core\";\nimport { GoogleLoginButton } from \"./GoogleLoginButton\";\nimport { FireCMSBackend } from \"../../types\";\n\nexport interface FireCMSLoginViewProps {\n    fireCMSBackend: FireCMSBackend;\n    includeGoogleAdminScopes: boolean;\n    includeLogo: boolean;\n    includeGoogleDisclosure: boolean;\n    includeTermsAndNewsLetter: boolean;\n}\n\n/**\n * Use this component to render a login view, that updates\n * the state of the {@link AuthController} based on the result\n * @constructor\n * @group Firebase\n */\nexport function FireCMSLoginView({\n                                     fireCMSBackend,\n                                     includeGoogleAdminScopes,\n                                     includeLogo,\n                                     includeGoogleDisclosure,\n                                     includeTermsAndNewsLetter\n                                 }: FireCMSLoginViewProps) {\n\n    const [termsAccepted, setTermsAccepted] = useState(false);\n    const [subscribeToNewsletter, setSubscribeToNewsletter] = useState(false);\n\n    function buildErrorView() {\n        let errorView: any;\n        const ignoredCodes = [\"auth/popup-closed-by-user\", \"auth/cancelled-popup-request\"];\n        if (fireCMSBackend.authProviderError && !ignoredCodes.includes(fireCMSBackend.authProviderError.code)) {\n            errorView =\n                <div className={\"p-4\"}>\n                    <ErrorView error={fireCMSBackend.authProviderError}/>\n                </div>;\n        }\n        return errorView;\n    }\n\n    return (\n\n        <div className=\"flex flex-col items-center justify-center min-w-full p-2\">\n            {includeLogo && <div className={\"m-4\"} style={{\n                width: \"260px\",\n                height: \"260px\"\n            }}>\n                <FireCMSLogo/>\n            </div>}\n\n            {includeLogo && <Typography variant={\"h4\"}\n                                        color={\"primary\"}\n                                        className=\"mb-4\">\n                FireCMS <Typography variant={\"h4\"}\n                                    component={\"span\"}\n                                    className={\"text-blue-500\"}>CLOUD</Typography>\n            </Typography>}\n\n            {buildErrorView()}\n\n            {includeTermsAndNewsLetter &&\n                <>\n                    <BooleanSwitchWithLabel size=\"small\"\n                                            invisible={true}\n                                            value={subscribeToNewsletter}\n                                            onValueChange={setSubscribeToNewsletter}\n                                            position={\"start\"}\n                                            label={\n                                                <Typography variant={\"caption\"} color={\"primary\"}>\n                                                    Join our newsletter. No spam, only important\n                                                    updates!\n                                                </Typography>}/>\n                    <BooleanSwitchWithLabel size=\"small\"\n                                            invisible={true}\n                                            value={termsAccepted}\n                                            onValueChange={setTermsAccepted}\n                                            position={\"start\"}\n                                            label={\n                                                <Typography variant={\"caption\"} color={\"primary\"}>\n                                                    By signing in you agree to our <a\n                                                    target=\"_blank\"\n                                                    rel=\"noopener noreferrer\"\n                                                    href={\"https://firecms.co/policy/terms_conditions\"}>\n                                                    Terms and Conditions</a> and our <a\n                                                    target=\"_blank\"\n                                                    rel=\"noopener noreferrer\"\n                                                    href={\"https://firecms.co/policy/privacy_policy\"}>\n                                                    Privacy policy</a>\n                                                </Typography>\n                                            }/>\n                </>}\n\n            <GoogleLoginButton\n                disabled={!termsAccepted && includeTermsAndNewsLetter}\n                onClick={() => {\n                    console.log(\"Google login\");\n                    fireCMSBackend.googleLogin(includeGoogleAdminScopes).then((user) => {\n                        if (subscribeToNewsletter && user?.email) {\n                            subscribeNewsletter(user.email);\n                        }\n                    });\n                }}/>\n\n            {includeGoogleAdminScopes &&\n                fireCMSBackend.permissionsNotGrantedError &&\n                <ErrorView\n                    error={\"You need to grant additional permissions in order to manage your Google Cloud projects\"}/>}\n\n            {includeGoogleDisclosure && <Typography variant={\"caption\"}>\n                FireCMS Cloud use and transfer to any other app of\n                information\n                received from Google APIs will adhere to <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href={\"https://developers.google.com/terms/api-services-user-data-policy#additional_requirements_for_specific_api_scopes\"}>Google\n                API Services\n                User Data Policy</a>, including the Limited Use\n                requirements.\n            </Typography>}\n\n        </div>\n    );\n\n}\n\nconst subscribeNewsletter = (email: string) => {\n    const url = \"https://api-drplyi3b6q-ey.a.run.app/notifications/newsletter\";\n    fetch(url, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            email_address: email,\n            source: \"saas\"\n        })\n    }).then((res) => {\n        console.log(\"newsletter response\", res);\n    });\n}\n","import React from \"react\";\nimport {\n    DefaultHomePage,\n    IconForView,\n    NavigationGroup, SmallNavigationCard,\n    useCustomizationController,\n    useNavigationController\n} from \"@firecms/core\";\nimport { SubscriptionPlanWidget } from \"./subscriptions\";\nimport { ADMIN_VIEWS_CONFIG } from \"../utils\";\n\n/**\n * Default entry view for the CMS under the path \"/\"\n * This component takes navigation as an input and renders cards\n * for each entry, including title and description.\n * @constructor\n * @group Components\n */\nexport function FireCMSCloudHomePage() {\n\n    const navigation = useNavigationController();\n    const { plugins } = useCustomizationController();\n\n    const pluginActions: React.ReactNode[] = [];\n    if (plugins) {\n        pluginActions.push(...plugins.map((plugin, i) => (\n            <React.Fragment key={plugin.key}>{plugin.homePage?.additionalActions ?? null}</React.Fragment>\n        )).filter(Boolean));\n    }\n    return <DefaultHomePage\n        additionalActions={<> {pluginActions} </>}\n        additionalChildrenStart={(navigation.collections ?? []).length > 0\n            ? <SubscriptionPlanWidget showForPlans={[\"free\"]}/>\n            : undefined}\n        additionalChildrenEnd={\n            <NavigationGroup group={\"ADMIN\"}>\n                <div className={\"grid grid-cols-12 gap-2\"}>\n                    {ADMIN_VIEWS_CONFIG.map((view) => <div className={\"col-span-12 sm:col-span-6 lg:col-span-4\"}\n                                                          key={`nav_${view.path}`}>\n                        <SmallNavigationCard\n                            name={view.name}\n                            url={view.path}\n                            icon={<IconForView collectionOrView={view}\n                                               className={\"text-gray-400 dark:text-gray-600\"}/>}/>\n                    </div>)}\n                </div>\n            </NavigationGroup>\n        }/>;\n}\n","import {\n    Alert,\n    CloseIcon,\n    Dialog,\n    DialogContent,\n    IconButton,\n    LoadingButton,\n    SearchIcon,\n    Typography\n} from \"@firecms/ui\";\nimport { useProjectConfig } from \"../../hooks\";\nimport { SubscriptionPlanWidget } from \"./SubscriptionPlanWidget\";\nimport { UpgradeToPlusButton } from \"./UpgradeToPlusButton\";\nimport { EntityCollection, useSnackbarController } from \"@firecms/core\";\nimport { useState } from \"react\";\nimport { CollectionsConfigController } from \"@firecms/collection_editor\";\n\nexport function TextSearchInfoDialog({\n                                         open,\n                                         closeDialog,\n                                         collection,\n                                         collectionConfigController,\n                                         parentCollectionIds,\n                                         hasOwnTextSearchImplementation\n                                     }: {\n    open: boolean,\n    closeDialog: () => void,\n    path: string,\n    collection: EntityCollection,\n    collectionConfigController: CollectionsConfigController,\n    parentCollectionIds?: string[],\n    hasOwnTextSearchImplementation: boolean\n}) {\n\n    const snackbarController = useSnackbarController();\n    const projectConfig = useProjectConfig();\n    const [enablingLocalSearch, setEnablingLocalSearch] = useState<boolean>(false);\n    const [enablingForCollection, setEnablingForCollection] = useState<boolean>(false);\n\n    function enableTextSearchForCollection() {\n        return collectionConfigController.updateCollection({\n            id: collection.id,\n            parentCollectionIds,\n            collectionData: {\n                textSearchEnabled: true\n            }\n        })\n    }\n\n    return <Dialog\n        maxWidth={\"2xl\"}\n        open={open}\n        onOpenChange={(open: boolean) => !open ? closeDialog() : undefined}\n    >\n        <DialogContent className={\"flex flex-col gap-4\"}>\n\n            <Typography variant={\"h5\"} className={\"flex flex-row gap-4 items-center\"}>\n                <SearchIcon/>\n                Enable text search\n            </Typography>\n\n            <SubscriptionPlanWidget\n                includeCTA={false}\n                showForPlans={[\"free\"]}\n                message={<>Upgrade to PLUS to use text search</>}/>\n\n            {!hasOwnTextSearchImplementation && <>\n\n                <div className={\"flex flex-col gap-2 my-2\"}>\n                    <Alert color={\"warning\"}>\n                        Local text search is not recommended for large collections.\n                    </Alert>\n\n                    <Typography variant={\"caption\"}>\n                        Note that enabling local text search will need to fetch all documents\n                        from your collection and store them in the browser. This can be inefficient\n                        for large collections. It can also incur in additional costs.\n                    </Typography>\n\n                    <Typography variant={\"caption\"}>\n                        For larger collections, you are encouraged to use an external\n                        search engine such as Algolia or Elastic Search, and assign a\n                        search delegate to your config.\n                    </Typography>\n                </div>\n\n                <Typography>\n                    Local text search is the simplest way to enable text search in your\n                    collection. It loads all documents in the collection in the browser\n                    and performs the search locally. This is the recommended option for\n                    small collections.\n                </Typography>\n\n            </>}\n\n            {hasOwnTextSearchImplementation && <>\n                <Typography>\n                    You have implemented your own text search controller. You enable text search\n                    for your collection.\n                </Typography>\n            </>}\n\n            <div className={\"flex items-end justify-end gap-4\"}>\n                {(hasOwnTextSearchImplementation || projectConfig.localTextSearchEnabled) && !collection.textSearchEnabled && projectConfig.canUseLocalTextSearch &&\n                    <LoadingButton variant={\"outlined\"}\n                                   loading={enablingForCollection}\n                                   size={\"large\"}\n                                   onClick={() => {\n                                       setEnablingForCollection(true);\n                                       enableTextSearchForCollection()\n                                           .then(() => {\n                                               snackbarController.open({\n                                                   message: \"Local text search enabled\",\n                                                   type: \"success\"\n                                               });\n                                               closeDialog();\n                                           })\n                                           .finally(() => setEnablingForCollection(false));\n                                   }}\n                                   disabled={!projectConfig.canUseLocalTextSearch}>\n                        Enable for this collection\n                    </LoadingButton>}\n\n                {!hasOwnTextSearchImplementation && !projectConfig.localTextSearchEnabled &&\n                    <LoadingButton variant={\"outlined\"}\n                                   loading={enablingLocalSearch}\n                                   size={\"large\"}\n                                   onClick={() => {\n                                       setEnablingLocalSearch(true);\n                                       projectConfig.updateLocalTextSearchEnabled(true)\n                                           .then(async () => {\n                                               if (!collection.textSearchEnabled)\n                                                   await enableTextSearchForCollection();\n                                               snackbarController.open({\n                                                   message: \"Local text search enabled\",\n                                                   type: \"success\"\n                                               });\n                                               closeDialog();\n                                           })\n                                           .finally(() => setEnablingLocalSearch(false));\n                                   }}\n                                   disabled={!projectConfig.canUseLocalTextSearch}>\n                        Enable for project\n                    </LoadingButton>}\n\n                {!projectConfig.canUseLocalTextSearch && <UpgradeToPlusButton includePriceSelect={true}\n                                                                              largePriceLabel={false}\n                                                                              includePriceLabel={false}/>}\n\n            </div>\n\n        </DialogContent>\n\n        <IconButton className={\"absolute top-4 right-4\"}\n                    onClick={closeDialog}>\n            <CloseIcon/>\n        </IconButton>\n    </Dialog>;\n}\n","import React, { useEffect } from \"react\";\nimport { unslugify, useAuthController, useNavigationController } from \"@firecms/core\";\nimport { AddIcon, Chip, CircularProgress, Collapse, Typography, } from \"@firecms/ui\";\nimport { useCollectionEditorController } from \"@firecms/collection_editor\";\n\nexport function RootCollectionSuggestions({ introMode }: { introMode?: \"new_project\" | \"existing_project\" }) {\n\n    const authController = useAuthController();\n    const navigationController = useNavigationController();\n\n    const collectionEditorController = useCollectionEditorController();\n    const canCreateCollections = collectionEditorController.configPermissions\n        ? collectionEditorController.configPermissions({\n            user: authController.user\n        }).createCollections\n        : true;\n\n    const [rootPathSuggestions, setRootPathSuggestions] = React.useState<string[] | undefined>(undefined);\n    useEffect(() => {\n        collectionEditorController.getPathSuggestions?.(\"\").then(setRootPathSuggestions);\n    }, [collectionEditorController.getPathSuggestions]);\n\n    if (!collectionEditorController.getPathSuggestions) {\n        return null;\n    }\n\n    const showSuggestions = (rootPathSuggestions ?? []).length > 3 || ((navigationController.collections ?? []).length === 0 && (rootPathSuggestions ?? []).length > 0);\n    const forceShowSuggestions = introMode === \"existing_project\";\n    return <Collapse\n        in={forceShowSuggestions || showSuggestions}>\n\n        <div\n            className={\"flex flex-col gap-1 p-2 my-4\"}>\n\n            {!introMode && <Typography variant={\"body2\"} color={\"secondary\"}>\n                Create a collection <b>automatically</b> from your data:\n            </Typography>}\n\n            {introMode === \"existing_project\" && <Typography>\n                You will see your <b>database collections</b> here, a few seconds after project creation\n            </Typography>}\n\n            <div\n                className={\"flex flex-row gap-1 overflow-scroll no-scrollbar \"}>\n                {(rootPathSuggestions ?? []).map((path) => {\n                    return (\n                        <div key={path}>\n                            <Chip\n                                icon={<AddIcon size={\"small\"}/>}\n                                colorScheme={\"cyanLighter\"}\n                                onClick={collectionEditorController && canCreateCollections\n                                    ? () => collectionEditorController.createCollection({\n                                        initialValues: {\n                                            path,\n                                            name: unslugify(path)\n                                        },\n                                        parentCollectionIds: [],\n                                        redirect: true,\n                                        sourceClick: \"root_collection_suggestion\"\n                                    })\n                                    : undefined}\n                                size=\"small\">\n                                {path}\n                            </Chip>\n                        </div>\n                    );\n                })}\n                {rootPathSuggestions === undefined && <CircularProgress size={\"small\"}/>}\n                {rootPathSuggestions?.length === 0 && <Typography variant={\"caption\"}>No suggestions</Typography>}\n            </div>\n        </div>\n    </Collapse>\n}\n","import { FireCMSPlugin, useNavigationController } from \"@firecms/core\";\nimport { FirestoreDelegate } from \"@firecms/firebase\";\nimport { CollectionsConfigController } from \"@firecms/collection_editor\";\nimport { Typography } from \"@firecms/ui\";\nimport { ProjectConfig } from \"./useBuildProjectConfig\";\nimport { TextSearchInfoDialog } from \"../components/subscriptions/TextSearchInfoDialog\";\nimport { FireCMSAppConfig } from \"../types\";\nimport { RootCollectionSuggestions } from \"../components/RootCollectionSuggestions\";\n\nexport function useSaasPlugin({\n                                  projectConfig,\n                                  firestoreDelegate,\n                                  collectionConfigController,\n                                  appConfig,\n                                  introMode\n                              }: {\n    projectConfig: ProjectConfig;\n    appConfig?: FireCMSAppConfig;\n    firestoreDelegate: FirestoreDelegate\n    collectionConfigController: CollectionsConfigController;\n    introMode?: \"new_project\" | \"existing_project\";\n}): FireCMSPlugin {\n\n    const hasOwnTextSearchImplementation = Boolean(appConfig?.textSearchControllerBuilder);\n\n    return {\n        key: \"saas\",\n        homePage: {\n            additionalChildrenStart: introMode ? <IntroWidget introMode={introMode}/> : undefined,\n            additionalChildrenEnd: <RootCollectionSuggestions introMode={introMode}/>,\n        },\n        collectionView: {\n            showTextSearchBar: ({\n                                    context,\n                                    path,\n                                    collection\n                                }) => {\n                if (collection.textSearchEnabled === false) {\n                    return false;\n                }\n                return true;\n            },\n            onTextSearchClick: ({\n                                    context,\n                                    path,\n                                    collection,\n                                    parentCollectionIds\n                                }) => {\n                if (projectConfig.canUseLocalTextSearch && projectConfig.localTextSearchEnabled && collection.textSearchEnabled) {\n                    return firestoreDelegate.initTextSearchController({\n                        path,\n                        collection\n                    });\n                } else {\n                    if (parentCollectionIds === undefined) {\n                        console.warn(\"Enabling text search: Parent collection ids are undefined\")\n                    } else {\n                        context.dialogsController.open({\n                            key: \"text_search_info\",\n                            Component: (props) => <TextSearchInfoDialog {...props}\n                                                                        hasOwnTextSearchImplementation={hasOwnTextSearchImplementation}\n                                                                        collectionConfigController={collectionConfigController}\n                                                                        parentCollectionIds={parentCollectionIds}\n                                                                        path={path}\n                                                                        collection={collection}/>\n                        });\n                    }\n                }\n                return Promise.resolve(false);\n            }\n        }\n    }\n}\n\nexport function IntroWidget({ introMode }: {\n    introMode?: \"new_project\" | \"existing_project\";\n}) {\n\n    const navigation = useNavigationController();\n    if (!navigation.topLevelNavigation)\n        throw Error(\"Navigation not ready in FireCMSHomePage\");\n\n    return (\n        <div className={\"mt-8 flex flex-col p-2\"}>\n            <Typography variant={\"h4\"} className=\"mb-4\">Welcome</Typography>\n            <Typography paragraph={true}>Your admin panel is ready ✌️</Typography>\n            <Typography paragraph={true}>\n                FireCMS can be used as a standalone admin panel but it shines when you add your own custom\n                functionality. Including your own custom components, fields, actions, views, and more.\n            </Typography>\n            <div>\n                <Typography className={\"inline\"}>Get started with:</Typography>\n                <div\n                    className={\"ml-2 select-all font-mono bg-gray-100 text-gray-800 dark:bg-gray-800 dark:text-white p-2 px-3  border-gray-200 border-solid w-fit text-md font-bold inline-flex rounded-md\"}>\n                    yarn create firecms-app\n                </div>\n                <Typography className={\"inline ml-2\"}>More info in the <a\n                    href={\"https://firecms.co/docs/customization_quickstart\"}\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\">docs</a></Typography>\n            </div>\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { FirebaseApp } from \"firebase/app\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\n\nimport {\n    CircularProgressCenter,\n    EntityCollection,\n    ErrorView,\n    FireCMS,\n    FireCMSAppBarProps,\n    FireCMSPlugin,\n    ModeController,\n    ModeControllerProvider,\n    NavigationController,\n    NavigationRoutes,\n    PermissionsBuilder,\n    Scaffold,\n    SideDialogs,\n    SnackbarProvider,\n    useBrowserTitleAndIcon,\n    useBuildLocalConfigurationPersistence,\n    useBuildModeController,\n    useBuildNavigationController,\n    User\n} from \"@firecms/core\";\n\nimport {\n    CollectionEditorPermissionsBuilder,\n    CollectionsConfigController,\n    mergeCollections,\n    MissingReferenceWidget,\n    PersistedCollection,\n    useCollectionEditorPlugin\n} from \"@firecms/collection_editor\";\nimport { useDataEnhancementPlugin } from \"@firecms/data_enhancement\";\n\nimport {\n    FireCMSBackEndProvider,\n    ProjectConfig,\n    ProjectConfigProvider,\n    useBuildCloudUserManagement,\n    useBuildFireCMSBackend,\n    useBuildProjectConfig,\n    useDelegatedLogin\n} from \"./hooks\";\n\nimport { FireCMSCloudAppProps } from \"./FireCMSCloudAppProps\";\nimport { ApiError, FireCMSAppConfig, FireCMSBackend, FireCMSCloudUser, FireCMSCloudUserWithRoles } from \"./types\";\nimport { RESERVED_GROUPS, resolveCollectionConfigPermissions } from \"./utils\";\nimport {\n    CloudErrorView,\n    FireCMSCloudDrawer,\n    FireCMSDataEnhancementSubscriptionMessage,\n    FireCMSLoginView,\n    ProjectSettings,\n    SubscriptionPlanWidget\n} from \"./components\";\nimport { FireCMSCloudHomePage } from \"./components/FireCMSCloudHomePage\";\nimport {\n    buildCollectionInference,\n    FirebaseAuthController,\n    getFirestoreDataInPath,\n    useAppCheck,\n    useFirebaseAuthController,\n    useFirebaseStorageSource,\n    useFirestoreDelegate,\n    useInitialiseFirebase\n} from \"@firecms/firebase\";\nimport { ExportAllowedParams, useImportExportPlugin } from \"@firecms/data_import_export\";\nimport { Button, CenteredView, ErrorIcon, Typography } from \"@firecms/ui\";\nimport { useSaasPlugin } from \"./hooks/useSaasPlugin\";\nimport {\n    resolveUserRolePermissions,\n    RolesView,\n    UserManagement,\n    UserManagementProvider,\n    UsersView\n} from \"@firecms/user_management\";\nimport { useFirestoreCollectionsConfigController } from \"@firecms/collection_editor_firebase\";\n\nconst DOCS_LIMIT = 200;\n\n/**\n * This is the default implementation of a FireCMS app using the Firebase services\n * as a backend.\n * You can use this component as a full app, by specifying collections and\n * entity collections.\n *\n * This component is in charge of initialising Firebase, with the given\n * configuration object.\n *\n * @param props\n * @constructor\n * @group Firebase\n */\nexport function FireCMSCloudApp({\n                                    projectId,\n                                    appConfig,\n                                    backendApiHost = \"https://api-drplyi3b6q-ey.a.run.app\", // TODO\n                                    onAnalyticsEvent,\n                                    basePath,\n                                    baseCollectionPath\n                                }: FireCMSCloudAppProps) {\n\n    const modeController = useBuildModeController();\n\n    const {\n        firebaseApp: backendFirebaseApp,\n        firebaseConfigLoading: backendConfigLoading,\n        configError,\n        firebaseConfigError: backendFirebaseConfigError\n    } = useInitialiseFirebase({\n        name: \"firecms-backend\",\n        fromUrl: backendApiHost + \"/config\"\n    });\n\n    const fireCMSBackend = useBuildFireCMSBackend({\n        backendApiHost,\n        backendFirebaseApp\n    });\n\n    let component;\n\n    if (backendConfigLoading || !backendFirebaseApp) {\n        component = <FullLoadingView projectId={projectId} text={\"Backend loading\"}/>;\n    } else if (backendFirebaseConfigError) {\n        component = <ErrorView\n            error={backendFirebaseConfigError}/>\n    } else if (configError) {\n        component = <ErrorView\n            error={configError}/>\n    } else if (fireCMSBackend.authLoading) {\n        component = <FullLoadingView projectId={projectId} text={\"Auth loading\"}/>;\n    } else if (!fireCMSBackend.user) {\n        component = <CenteredView maxWidth={\"lg\"}>\n            <FireCMSLoginView\n                fireCMSBackend={fireCMSBackend}\n                includeLogo={true}\n                includeGoogleAdminScopes={false}\n                includeTermsAndNewsLetter={false}\n                includeGoogleDisclosure={false}/>\n        </CenteredView>\n    } else {\n        component = <FireCMSClient\n            fireCMSBackend={fireCMSBackend}\n            projectId={projectId}\n            modeController={modeController}\n            appConfig={appConfig}\n            basePath={basePath}\n            baseCollectionPath={baseCollectionPath}\n            onAnalyticsEvent={onAnalyticsEvent}\n        />\n    }\n\n    return <BrowserRouter basename={basePath}>\n        {component}\n    </BrowserRouter>;\n\n}\n\nexport type FireCMSClientProps<ExtraAppbarProps = object> = {\n    fireCMSBackend: FireCMSBackend,\n    projectId: string;\n    appConfig?: FireCMSAppConfig;\n    modeController: ModeController;\n    /**\n     * A component that gets rendered on the upper side of the main toolbar.\n     */\n    FireCMSAppBarComponent?: React.ComponentType<FireCMSAppBarProps<ExtraAppbarProps>>;\n\n    basePath?: string;\n    baseCollectionPath?: string;\n    onAnalyticsEvent?: (event: string, data?: object) => void;\n};\n\nfunction FullLoadingView(props: {\n    projectId: string,\n    projectConfig?: ProjectConfig,\n    FireCMSAppBarComponent?: React.ComponentType<FireCMSAppBarProps>,\n    text?: string\n}) {\n    return <Scaffold\n        key={\"project_scaffold_\" + props.projectId}\n        name={props.projectConfig?.projectName ?? \"\"}\n        logo={props.projectConfig?.logo}\n        FireCMSAppBar={props.FireCMSAppBarComponent}\n        includeDrawer={false}>\n        <CircularProgressCenter text={props.text}/>\n    </Scaffold>;\n}\n\nexport const FireCMSClient = function FireCMSClient({\n                                                        projectId,\n                                                        fireCMSBackend,\n                                                        ...props\n                                                    }: FireCMSClientProps) {\n\n    const projectConfig = useBuildProjectConfig({\n        projectId,\n        backendFirebaseApp: fireCMSBackend.backendFirebaseApp\n    });\n\n    const userManagement = useBuildCloudUserManagement({\n        backendFirebaseApp: fireCMSBackend.backendFirebaseApp,\n        projectId,\n        projectsApi: fireCMSBackend.projectsApi,\n        usersLimit: projectConfig.usersLimit,\n        canEditRoles: projectConfig.canEditRoles,\n        fireCMSBackend\n    });\n\n    if (userManagement.loading || (!projectConfig.clientFirebaseConfig && !projectConfig.configError)) {\n        return <FullLoadingView projectId={projectId}\n                                projectConfig={projectConfig}\n                                FireCMSAppBarComponent={props.FireCMSAppBarComponent}\n                                text={\"Client loading\"}/>;\n    }\n\n    return <FireCMSClientWithController\n        projectId={projectId}\n        projectConfig={projectConfig}\n        fireCMSBackend={fireCMSBackend}\n        customizationLoading={false}\n        userManagement={userManagement}\n        {...props}\n    />;\n};\n\nfunction ErrorDelegatingLoginView({\n                                      configError,\n                                      onLogout,\n                                      fireCMSBackend\n                                  }: {\n    configError: Error | ApiError,\n    onLogout: () => void,\n    fireCMSBackend: FireCMSBackend\n}) {\n\n    const errorBody = \"code\" in configError\n        ? <CloudErrorView error={configError}\n                          fireCMSBackend={fireCMSBackend}/>\n        : <>\n            <Typography>{configError.message}</Typography>\n            <Typography>\n                This error may be caused when a user has been deleted from the client project.\n                Make sure a user exists in the client project with the same email as the one trying to log in.\n                If the problem persists, reach us at <a href=\"mailto:hello@firecms.co?subject=FireCMS%20login%20error\"\n                                                        rel=\"noopener noreferrer\"\n                                                        target=\"_blank\"> hello@firecms.co </a>, or in our <a\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n                href={\"https://discord.gg/fxy7xsQm3m\"}>Discord channel</a>.\n            </Typography>\n        </>;\n\n    return <CenteredView maxWidth={\"2xl\"} className={\"flex flex-col gap-4\"}>\n        <div className={\"flex gap-4 items-center\"}>\n            <ErrorIcon color={\"error\"}/>\n            <Typography variant={\"h4\"}>Error logging in</Typography>\n        </div>\n\n        {errorBody}\n        <Button variant=\"outlined\" onClick={onLogout}>Sign out</Button>\n    </CenteredView>;\n}\n\nfunction NoAccessErrorView(props: { configError: Error, onLogout: () => void }) {\n    return <CenteredView maxWidth={\"2xl\"} className={\"flex flex-col gap-4\"}>\n        <div className={\"flex gap-4 items-center\"}>\n            <ErrorIcon color={\"error\"}/>\n            <Typography variant={\"h4\"}>Error accessing project</Typography>\n        </div>\n        <Typography>{props.configError.message}</Typography>\n        <Typography>\n            This error may be caused when trying to access with a user that is not\n            registered in the project. You can ask the project owner to add you to the project.\n        </Typography>\n        <Button variant=\"outlined\" onClick={props.onLogout}>Sign out</Button>\n    </CenteredView>;\n}\n\nexport function FireCMSClientWithController({\n                                                projectConfig,\n                                                userManagement,\n                                                projectId,\n                                                fireCMSBackend,\n                                                appConfig,\n                                                customizationLoading,\n                                                ...props\n                                            }: FireCMSClientProps & {\n    userManagement: UserManagement<FireCMSCloudUserWithRoles>;\n    projectConfig: ProjectConfig;\n    projectId: string;\n    customizationLoading: boolean;\n}) {\n\n    const [notValidUser, setNotValidUser] = useState<User | undefined>();\n\n    const {\n        firebaseApp: clientFirebaseApp,\n        firebaseConfigLoading,\n        configError: firebaseConfigError\n    } = useInitialiseFirebase({\n        onFirebaseInit: appConfig?.onFirebaseInit,\n        firebaseConfig: projectConfig.clientFirebaseConfig\n    });\n\n    const appCheckResult = useAppCheck({\n        firebaseApp: clientFirebaseApp,\n        options: appConfig?.appCheck\n    });\n\n    const authController: FirebaseAuthController = useFirebaseAuthController({\n        firebaseApp: clientFirebaseApp,\n        onSignOut: fireCMSBackend.signOut,\n        defineRolesFor: userManagement.defineRolesFor\n    });\n\n    const fireCMSUser = useMemo(() => {\n            if (userManagement.loading || authController.authLoading) return;\n            const user = authController.user;\n            if (!user) return;\n            return userManagement.users.find((fireCMSUser) => fireCMSUser.email.toLowerCase() === user?.email?.toLowerCase());\n        },\n        [authController.authLoading, authController.user, userManagement.loading, userManagement.users]);\n\n    const {\n        delegatedLoginLoading,\n        delegatedLoginError\n    } = useDelegatedLogin({\n        projectsApi: fireCMSBackend.projectsApi,\n        firebaseApp: clientFirebaseApp,\n        projectId,\n        onUserChanged: (user) => {\n            authController.setUser(user ?? null);\n            authController.setRoles(fireCMSUser?.roles ?? []);\n        },\n        onAnalyticsEvent: props.onAnalyticsEvent\n    });\n\n    const permissions: PermissionsBuilder<PersistedCollection, FireCMSCloudUserWithRoles> = useCallback(({\n                                                                                                             pathSegments,\n                                                                                                             collection,\n                                                                                                             user,\n                                                                                                             entity\n                                                                                                         }) => {\n        return resolveUserRolePermissions<FireCMSCloudUserWithRoles>({\n            collection,\n            user\n        });\n    }, []);\n\n    const configController = useFirestoreCollectionsConfigController({\n        firebaseApp: fireCMSBackend.backendFirebaseApp,\n        configPath: `projects/${projectId}/collections`,\n        permissions,\n        propertyConfigs: appConfig?.propertyConfigs\n    });\n\n    let loadingOrErrorComponent;\n    if (userManagement.loading) {\n        loadingOrErrorComponent = <CircularProgressCenter text={\"Project loading\"}/>;\n    } else if (appCheckResult.loading) {\n        loadingOrErrorComponent = <CircularProgressCenter text={\"AppCheck loading\"}/>;\n    } else if (delegatedLoginError) {\n        console.log(\"Delegated login error\", delegatedLoginError)\n        loadingOrErrorComponent = <ErrorDelegatingLoginView configError={delegatedLoginError}\n                                                            fireCMSBackend={fireCMSBackend}\n                                                            onLogout={fireCMSBackend.signOut}/>\n    } else if (notValidUser) {\n        console.warn(\"No user was found with email \" + notValidUser.email);\n        loadingOrErrorComponent = <NoAccessError authController={authController}/>\n    } else if (projectConfig.configError) {\n        loadingOrErrorComponent = <NoAccessErrorView configError={projectConfig.configError}\n                                                     onLogout={fireCMSBackend.signOut}/>\n    } else if (customizationLoading) {\n        loadingOrErrorComponent = <CircularProgressCenter text={\"Project customization loading\"}/>;\n    } else if (firebaseConfigLoading) {\n        loadingOrErrorComponent = <CircularProgressCenter text={\"Client config loading\"}/>;\n    } else if (firebaseConfigError) {\n        loadingOrErrorComponent = <CenteredView>\n            <ErrorView error={firebaseConfigError ?? \"Error fetching client Firebase config\"}/>\n        </CenteredView>;\n    } else if (delegatedLoginLoading) {\n        loadingOrErrorComponent = <CircularProgressCenter text={\"Logging in to \" + projectId}/>;\n    } else if (!authController.user) {\n        loadingOrErrorComponent = <CircularProgressCenter text={\"Auth loading\"}/>;\n    } else if (!fireCMSUser) {\n        loadingOrErrorComponent = <NoAccessError authController={authController}/>;\n    }\n\n    if (loadingOrErrorComponent) {\n        return <Scaffold\n            key={\"project_scaffold_\" + projectConfig.projectId}\n            name={projectConfig.projectName ?? \"\"}\n            logo={projectConfig.logo}\n            includeDrawer={false}\n            FireCMSAppBar={props.FireCMSAppBarComponent}\n        >\n            {loadingOrErrorComponent}\n        </Scaffold>;\n    }\n\n    return <FireCMSAppAuthenticated\n        fireCMSUser={fireCMSUser!}\n        fireCMSBackend={fireCMSBackend}\n        appConfig={appConfig}\n        authController={authController}\n        projectConfig={projectConfig}\n        collectionConfigController={configController}\n        firebaseApp={clientFirebaseApp!}\n        userManagement={userManagement}\n        {...props}\n    />;\n}\n\nfunction NoAccessError({ authController }: {\n    authController: FirebaseAuthController\n}) {\n    return <CenteredView maxWidth={\"md\"} className={\"gap-4\"}>\n        <ErrorView title={\"You don't have access to this project\"}\n                   error={\"You can request permission to the owner\"}/>\n        <Button variant=\"text\" onClick={authController.signOut}>Sign out</Button>\n    </CenteredView>;\n}\n\nfunction usePathSuggestions(fireCMSBackend: FireCMSBackend, projectConfig: ProjectConfig, navigationController: NavigationController) {\n\n    const {\n        collections\n    } = navigationController;\n    const existingPaths = (collections ?? []).map(col => col.path.trim().toLowerCase());\n\n    const [rootPathSuggestions, setRootPathSuggestions] = React.useState<string[] | undefined>();\n    useEffect(() => {\n        const googleAccessToken = fireCMSBackend.googleCredential?.accessToken;\n        fireCMSBackend.projectsApi.getRootCollections(projectConfig.projectId, googleAccessToken).then((paths) => {\n            setRootPathSuggestions(paths.filter(p => !existingPaths.includes(p.trim().toLowerCase())));\n        })\n    }, []);\n\n    const getPathSuggestions = useCallback((path?: string) => {\n        if (!path && rootPathSuggestions) {\n            return Promise.resolve(rootPathSuggestions);\n        }\n        return Promise.resolve([]);\n    }, [rootPathSuggestions]);\n\n    return { getPathSuggestions };\n}\n\nfunction FireCMSAppAuthenticated({\n                                     fireCMSUser,\n                                     firebaseApp,\n                                     projectConfig,\n                                     userManagement,\n                                     collectionConfigController,\n                                     appConfig,\n                                     authController,\n                                     modeController,\n                                     fireCMSBackend,\n                                     FireCMSAppBarComponent,\n                                     onAnalyticsEvent,\n                                     basePath,\n                                     baseCollectionPath\n                                 }: Omit<FireCMSClientProps, \"projectId\"> & {\n    fireCMSUser: FireCMSCloudUser;\n    firebaseApp: FirebaseApp;\n    projectConfig: ProjectConfig;\n    userManagement: UserManagement<FireCMSCloudUserWithRoles>;\n    fireCMSBackend: FireCMSBackend,\n    collectionConfigController: CollectionsConfigController;\n    authController: FirebaseAuthController;\n}) {\n\n    if (!authController.user) {\n        throw Error(\"You can only use FireCMSAppAuthenticated with an authenticated user\");\n    }\n\n    const adminRoutes = useMemo(() => buildAdminRoutes(userManagement.usersLimit), [userManagement.usersLimit]);\n\n    const configPermissions: CollectionEditorPermissionsBuilder<User, PersistedCollection> = useCallback(({\n                                                                                                              user,\n                                                                                                              collection\n                                                                                                          }) => resolveCollectionConfigPermissions({\n        user: fireCMSUser,\n        userManagement,\n        collection\n    }), [userManagement, fireCMSUser]);\n\n    const propertyConfigsMap = useMemo(() => {\n        const map: Record<string, any> = {};\n        appConfig?.propertyConfigs?.forEach(field => {\n            map[field.key] = field;\n        });\n        return map;\n    }, [appConfig?.propertyConfigs]);\n\n    const importExportPlugin = useImportExportPlugin({\n        exportAllowed: useCallback(({ collectionEntitiesCount }: ExportAllowedParams) => {\n            return projectConfig.canExport || collectionEntitiesCount <= DOCS_LIMIT;\n        }, [projectConfig.canExport]),\n        onAnalyticsEvent,\n        notAllowedView: <SubscriptionPlanWidget showForPlans={[\"free\"]}\n                                                message={`Upgrade to export more than ${DOCS_LIMIT} entities`}/>\n    });\n\n    const dataEnhancementPlugin = useDataEnhancementPlugin({\n        SubscriptionMessage: FireCMSDataEnhancementSubscriptionMessage,\n        host: fireCMSBackend.backendApiHost\n    });\n\n    /**\n     * Update the browser title and icon\n     */\n    useBrowserTitleAndIcon(projectConfig.projectName ?? \"\", projectConfig.logo);\n\n    /**\n     * Controller for saving some user preferences locally.\n     */\n    const userConfigPersistence = useBuildLocalConfigurationPersistence();\n\n    const firestoreDelegate = useFirestoreDelegate({\n        firebaseApp,\n        textSearchControllerBuilder: appConfig?.textSearchControllerBuilder,\n        firestoreIndexesBuilder: appConfig?.firestoreIndexesBuilder,\n        localTextSearchEnabled: projectConfig.localTextSearchEnabled\n    });\n\n    /**\n     * Controller used for saving and fetching files in storage\n     */\n    const storageSource = useFirebaseStorageSource({\n        firebaseApp\n    });\n\n    const navigationController = useBuildNavigationController({\n        basePath,\n        baseCollectionPath,\n        authController,\n        collections: appConfig?.collections,\n        views: appConfig?.views,\n        userConfigPersistence,\n        dataSourceDelegate: firestoreDelegate,\n        injectCollections: useCallback(\n            (collections: EntityCollection[]) => mergeCollections(\n                collections,\n                collectionConfigController.collections ?? [],\n                appConfig?.modifyCollection\n            ),\n            [appConfig?.modifyCollection, collectionConfigController.collections])\n    });\n\n    const introMode = navigationController.initialised &&\n        navigationController.collections !== undefined &&\n        navigationController.collections.length === 0;\n\n    const saasPlugin = useSaasPlugin({\n        projectConfig,\n        firestoreDelegate,\n        collectionConfigController,\n        appConfig,\n        introMode: introMode ? (projectConfig.creationType === \"new\" ? \"new_project\" : \"existing_project\") : undefined\n    });\n\n    const { getPathSuggestions } = usePathSuggestions(fireCMSBackend, projectConfig, navigationController);\n\n    const collectionEditorPlugin = useCollectionEditorPlugin<PersistedCollection, User>({\n        collectionConfigController,\n        configPermissions,\n        reservedGroups: RESERVED_GROUPS,\n        getPathSuggestions,\n        getUser: (uid) => {\n            return userManagement.users.find(u => u.uid === uid) ?? null;\n        },\n        collectionInference: buildCollectionInference(firebaseApp),\n        getData: (path, parentPaths) => getFirestoreDataInPath(firebaseApp, path, parentPaths, 400),\n        onAnalyticsEvent\n    });\n\n    const plugins: FireCMSPlugin<any, any, any>[] = [saasPlugin, importExportPlugin, collectionEditorPlugin, dataEnhancementPlugin];\n\n    return (\n        <FireCMSBackEndProvider {...fireCMSBackend}>\n            <ProjectConfigProvider config={projectConfig}>\n                <UserManagementProvider userManagement={userManagement}>\n                    <SnackbarProvider>\n                        <ModeControllerProvider value={modeController}>\n                            <FireCMS\n                                navigationController={navigationController}\n                                dateTimeFormat={appConfig?.dateTimeFormat}\n                                entityViews={appConfig?.entityViews}\n                                locale={appConfig?.locale}\n                                propertyConfigs={propertyConfigsMap}\n                                authController={authController}\n                                userConfigPersistence={userConfigPersistence}\n                                dataSourceDelegate={firestoreDelegate}\n                                storageSource={storageSource}\n                                entityLinkBuilder={({ entity }) => `https://console.firebase.google.com/project/${firebaseApp.options.projectId}/firestore/data/${entity.path}/${entity.id}`}\n                                onAnalyticsEvent={onAnalyticsEvent}\n                                plugins={plugins}\n                                components={{\n                                    missingReference: MissingReferenceWidget\n                                }}\n                            >\n                                {({\n                                      context,\n                                      loading\n                                  }) => {\n\n                                    let component;\n                                    if (loading) {\n                                        component =\n                                            <Scaffold\n                                                key={\"project_scaffold_\" + projectConfig.projectId}\n                                                name={projectConfig.projectName ?? \"\"}\n                                                logo={projectConfig.logo}\n                                                includeDrawer={false}\n                                                FireCMSAppBar={FireCMSAppBarComponent}\n                                                fireCMSAppBarProps={appConfig?.fireCMSAppBarComponentProps}>\n                                                <CircularProgressCenter text={\"Almost there\"}/>\n                                            </Scaffold>;\n                                    } else {\n                                        component = (\n                                            <Scaffold\n                                                key={\"project_scaffold_\" + projectConfig.projectId}\n                                                name={projectConfig.projectName ?? \"\"}\n                                                logo={projectConfig.logo}\n                                                Drawer={FireCMSCloudDrawer}\n                                                FireCMSAppBar={FireCMSAppBarComponent}\n                                                fireCMSAppBarProps={appConfig?.fireCMSAppBarComponentProps}\n                                                autoOpenDrawer={appConfig?.autoOpenDrawer}>\n                                                <NavigationRoutes\n                                                    HomePage={appConfig?.HomePage ?? FireCMSCloudHomePage}\n                                                    customRoutes={adminRoutes}/>\n                                                <SideDialogs/>\n                                            </Scaffold>\n                                        );\n                                    }\n\n                                    return component;\n                                }}\n                            </FireCMS>\n                        </ModeControllerProvider>\n                    </SnackbarProvider>\n                </UserManagementProvider>\n            </ProjectConfigProvider>\n        </FireCMSBackEndProvider>\n    );\n\n}\n\nfunction buildAdminRoutes(usersLimit?: number) {\n\n    return [\n        {\n            path: \"users\",\n            name: \"CMS Users\",\n            group: \"Admin\",\n            icon: \"face\",\n            hideFromNavigation: true,\n            view: <UsersView>\n                <SubscriptionPlanWidget\n                    showForPlans={[\"free\"]}\n                    message={<>Upgrade to PLUS to remove the <b>{usersLimit} users limit</b></>}/>\n            </UsersView>\n        },\n        {\n            path: \"roles\",\n            name: \"Roles\",\n            group: \"Admin\",\n            icon: \"gpp_good\",\n            hideFromNavigation: true,\n            view: <RolesView>\n                <SubscriptionPlanWidget\n                    showForPlans={[\"free\"]}\n                    message={<>Upgrade to PLUS to be able to customise <b>roles</b></>}/>\n            </RolesView>\n        },\n        {\n            path: \"settings\",\n            name: \"Project settings\",\n            group: \"Admin\",\n            icon: \"settings\",\n            hideFromNavigation: true,\n            view: <ProjectSettings/>\n        }\n    ].map(({\n               path,\n               name,\n               view\n           }) => <Route\n        key={\"navigation_admin_\" + path}\n        path={path}\n        element={view}\n    />)\n}\n","import { FireCMSCloudAppProps } from \"./FireCMSCloudAppProps\";\nimport { FireCMSCloudApp } from \"./FireCMSCloudApp\";\nimport { useEffect } from \"react\";\n\nexport function FireCMSApp(props: FireCMSCloudAppProps) {\n\n    useEffect(() => {\n        console.warn(\"IMPORTANT! The FireCMSApp component is deprecated and will be removed in future versions. Please use FireCMSCloudApp instead.\");\n    }, []);\n\n    return <FireCMSCloudApp {...props} />;\n}\n"],"names":["RESERVED_GROUPS","resolveCollectionConfigPermissions","user","userManagement","collection","baseConfigPermissions","fireCMSUser","u","userRoles","getUserRoles","role","mergeConfigPermissions","permA","permB","areRolesEqual","rolesA","rolesB","ADMIN_VIEWS_CONFIG","cacheDelegatedLoginToken","projectId","delegatedToken","data","parseJwt","expiry","getDelegatedLoginTokenFromCache","entry","clearDelegatedLoginTokensCache","i","key","token","base64","jsonPayload","c","darkenColor","hexColor","darkenBy","color","r","g","b","hexToRgbaWithOpacity","opacity","alpha","DEFAULT_PRIMARY_COLOR","DEFAULT_SECONDARY_COLOR","useBuildProjectConfig","backendFirebaseApp","primaryColor","setPrimaryColor","useState","secondaryColor","setSecondaryColor","configPath","clientProjectName","setClientProjectName","subscriptionPlan","setSubscriptionPlan","clientConfigLoading","setClientConfigLoading","clientFirebaseConfig","setClientFirebaseConfig","clientFirebaseMissing","setClientFirebaseMissing","serviceAccountMissing","setServiceAccountMissing","clientConfigError","setClientConfigError","localTextSearchEnabled","setLocalTextSearchEnabled","customizationRevision","setCustomizationRevision","creationType","setCreationType","loadedProjectIdRef","useRef","logo","setLogo","React","useEffect","firestore","getFirestore","onSnapshot","doc","snapshot","e","uploadLogo","useCallback","file","storage","getStorage","fileRef","uploadFile","url","getDownloadURL","setDoc","updateProjectName","name","updateLocalTextSearchEnabled","allowed","plan","currentCustomizationRevision","firebaseConfig","usersLimit","canEditRoles","canModifyTheme","canExport","canUseLocalTextSearch","updatePrimaryColor","updateSecondaryColor","fileName","path","metadata","usedFilename","uploadBytes","ref","ProjectConfigContext","useProjectConfig","useContext","ProjectConfigProvider","children","config","useDelegatedLogin","projectsApi","firebaseApp","onUserChanged","loginSuccessful","setLoginSuccessful","delegatedLoginLoading","setDelegatedLoginLoading","delegatedLoginError","setDelegatedLoginError","checkLogin","skipCache","usedCachedToken","auth","getAuth","signInWithCustomToken","userCredential","error","FireCMSBackendContext","FireCMSBackEndProvider","backend","useFireCMSBackend","SUBSCRIPTIONS_COLLECTION","PRODUCTS_COLLECTION","CUSTOMERS_COLLECTION","CHECKOUT_SESSION_COLLECTION","useSubscriptionsForUserController","userId","firestoreRef","products","setProducts","productsLoading","setProductsLoading","productsLoadingError","setProductsLoadingError","activeSubscriptions","setActiveSubscriptions","activeSubscriptionsLoading","setActiveSubscriptionsLoading","activeSubscriptionsLoadingError","setActiveSubscriptionsLoadingError","productsRef","query","where","querySnapshot","updatedProducts","productDoc","pricesRef","getDocs","pricesQuery","prices","priceDoc","a","fetchPrice","getDoc","fetchProduct","subscriptionsRef","updatedSubscriptions","price","product","productPrice","onCheckoutSessionReady","type","subscriptionPricesRequest","checkoutSession","checkoutSessionRef","docRef","addDoc","snap","subscription","ApiError","message","code","handleApiResponse","res","jsonResponse","rootCollectionsCache","buildProjectsApi","host","getBackendAuthToken","createNewFireCMSProject","googleAccessToken","serviceAccount","firebaseAccessToken","buildHeaders","_","createFirebaseWebapp","addSecurityRules","createNewUser","persistedUserData","updateUser","uid","deleteUser","getRootCollections","retries","retry","resolve","result","createServiceAccount","doDelegatedLogin","getStripePortalLink","getRemoteConfigUrl","revisionId","headers","AUTH_SCOPES","useBuildFireCMSBackend","backendApiHost","onUserChange","loggedUser","setLoggedUser","authLoading","setAuthLoading","googleCredential","setGoogleCredential","loadCredentialFromStorage","authProviderError","setAuthProviderError","permissionsNotGrantedError","setPermissionsNotGrantedError","availableProjectIds","setAvailableProjectIds","availableProjectsLoading","setAvailableProjectsLoading","availableProjectsLoaded","setAvailableProjectsLoaded","availableProjectsError","setAvailableProjectsError","projects","setProjects","updateFirebaseUser","firebaseUser","getProject","projectsRes","onAuthStateChanged","projectIds","googleLogin","includeGoogleAdminScopes","provider","GoogleAuthProvider","scope","signInWithPopup","credential","grantedScopes","credentialFromResult","saveCredentialInStorage","onSignOut","signOut","credentialString","credentialJSON","OAuthCredential","createdOn","useBuildCloudUserManagement","fireCMSBackend","rolesLoading","setRolesLoading","usersLoading","setUsersLoading","roles","setRoles","usersWithRoleIds","setUsersWithRoleIds","users","rolesError","setRolesError","usersError","setUsersError","newRoles","docsToRoles","newUsers","docsToUsers","saveUser","userData","saveRole","id","roleData","removeUser","deleteRole","deleteDoc","loggedInUser","collectionPermissions","resolveUserRolePermissions","userIds","defineRolesFor","docs","FireCMSCloudDrawer","hovered","drawerOpen","closeDrawer","navigate","useNavigate","navigation","useNavigationController","collectionEditorController","useCollectionEditorController","useAuthController","adminMenuOpen","setAdminMenuOpen","tooltipsOpen","navigationEntries","groups","buildGroupHeader","group","reservedGroup","canCreateCollections","jsxs","jsx","Typography","Tooltip","Button","AddIcon","Fragment","view","index","DrawerNavigationItem","IconForView","Menu","IconButton","MoreVertIcon","cn","MenuItem","event","FireCMSDataEnhancementSubscriptionMessage","context","SecurityRulesInstructions","Paper","CloudErrorView","onFixed","onRetry","CloudMissingServiceAccountErrorView","CloudNeedsToAcceptTermsErrorView","CloudNoPreviousFirebaseProjectsErrorView","ServiceAccountMissingPermissions","snackbarController","useSnackbarController","isSubmitting","setIsSubmitting","pendingLogin","setPendingLogin","doCreateServiceAccount","LoadingButton","BuildIcon","props","permission","getPriceString","getStatusText","getSubscriptionPlanName","PlanChip","planName","Chip","ProductView","includePriceSelect","includePriceLabel","largePriceLabel","subscribe","setError","selectedPrice","setSelectedPrice","productPrices","priceSelect","Select","value","SelectItem","linkLoading","setLinkLoading","RocketLaunchIcon","Alert","UpgradeToPlusButton","getSubscriptionsForProject","plusProduct","p","PlansComparisonDialog","open","onClose","Dialog","DialogContent","PlansComparison","CloseIcon","Container","StripeDisclaimer","ProjectSubscriptionPlans","useBrowserTitleAndIcon","projectSubscriptions","loading","plusSubscription","s","CircularProgress","CurrentSubscriptionView","Card","AutoAwesomeIcon","statusText","stripePortalUrl","setStripePortalUrl","SubscriptionPlanWidget","showForPlans","includeCTA","dialogOpen","setDialogOpen","ActiveSubscriptions","defaultBorderMixin","ProjectSettings","backendUid","projectConfig","CenteredView","ProjectNameTextField","BooleanSwitchWithLabel","v","ThemeColors","setName","deferredName","useDeferredValue","TextField","LogoUploadField","onNoSubscriptionPlan","snackbarContext","onFilesAdded","acceptedFiles","onFilesRejected","fileRejections","fileRejection","FileUpload","FireCMSLogo","SampleComponents","checked","setChecked","BooleanSwitch","Checkbox","showUpgradeBanner","setShowUpgradeBanner","googleIcon","GoogleLoginButton","onClick","disabled","FireCMSLoginView","includeLogo","includeGoogleDisclosure","includeTermsAndNewsLetter","termsAccepted","setTermsAccepted","subscribeToNewsletter","setSubscribeToNewsletter","buildErrorView","errorView","ignoredCodes","ErrorView","subscribeNewsletter","email","FireCMSCloudHomePage","plugins","useCustomizationController","pluginActions","plugin","DefaultHomePage","NavigationGroup","SmallNavigationCard","TextSearchInfoDialog","closeDialog","collectionConfigController","parentCollectionIds","hasOwnTextSearchImplementation","enablingLocalSearch","setEnablingLocalSearch","enablingForCollection","setEnablingForCollection","enableTextSearchForCollection","SearchIcon","RootCollectionSuggestions","introMode","authController","navigationController","rootPathSuggestions","setRootPathSuggestions","showSuggestions","Collapse","unslugify","useSaasPlugin","firestoreDelegate","appConfig","IntroWidget","DOCS_LIMIT","FireCMSCloudApp","onAnalyticsEvent","basePath","baseCollectionPath","modeController","useBuildModeController","backendConfigLoading","configError","backendFirebaseConfigError","useInitialiseFirebase","component","FullLoadingView","FireCMSClient","BrowserRouter","Scaffold","CircularProgressCenter","FireCMSClientWithController","ErrorDelegatingLoginView","onLogout","errorBody","ErrorIcon","NoAccessErrorView","customizationLoading","notValidUser","setNotValidUser","clientFirebaseApp","firebaseConfigLoading","firebaseConfigError","appCheckResult","useAppCheck","useFirebaseAuthController","useMemo","permissions","pathSegments","entity","configController","useFirestoreCollectionsConfigController","loadingOrErrorComponent","NoAccessError","FireCMSAppAuthenticated","usePathSuggestions","collections","existingPaths","col","paths","FireCMSAppBarComponent","adminRoutes","buildAdminRoutes","configPermissions","propertyConfigsMap","map","field","importExportPlugin","useImportExportPlugin","collectionEntitiesCount","dataEnhancementPlugin","useDataEnhancementPlugin","userConfigPersistence","useBuildLocalConfigurationPersistence","useFirestoreDelegate","storageSource","useFirebaseStorageSource","useBuildNavigationController","mergeCollections","saasPlugin","getPathSuggestions","collectionEditorPlugin","useCollectionEditorPlugin","buildCollectionInference","parentPaths","getFirestoreDataInPath","UserManagementProvider","SnackbarProvider","ModeControllerProvider","FireCMS","MissingReferenceWidget","NavigationRoutes","SideDialogs","UsersView","RolesView","Route","FireCMSApp"],"mappings":"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"}