import { FirebaseApp } from "firebase/app";
import { ProjectSubscriptionPlan } from "../types";
export type ProjectConfig = {
    projectId: string;
    logo?: string;
    uploadLogo: (file: File) => Promise<void>;
    projectName?: string;
    updateProjectName: (name: string) => Promise<void>;
    configLoading: boolean;
    configError?: Error;
    clientFirebaseConfig?: Record<string, unknown>;
    clientFirebaseMissing?: boolean;
    serviceAccountMissing?: boolean;
    subscriptionPlan?: ProjectSubscriptionPlan;
    customizationRevision?: string;
    usersLimit?: number;
    canEditRoles: boolean;
    canModifyTheme: boolean;
    canExport: boolean;
    canUseLocalTextSearch: boolean;
    localTextSearchEnabled: boolean;
    updateLocalTextSearchEnabled: (allow: boolean) => Promise<void>;
    primaryColor?: string;
    secondaryColor?: string;
    updatePrimaryColor: (color?: string) => void;
    updateSecondaryColor: (color?: string) => void;
    creationType?: "new" | "existing";
};
interface ProjectConfigParams {
    backendFirebaseApp?: FirebaseApp;
    projectId: string;
}
export declare function useBuildProjectConfig({ backendFirebaseApp, projectId, }: ProjectConfigParams): ProjectConfig;
export {};
