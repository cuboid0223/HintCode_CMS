import { FireCMSCloudUserWithRoles } from "../types";
export type ProjectsApi = ReturnType<typeof buildProjectsApi>;
export declare function buildProjectsApi(host: string, getBackendAuthToken: () => Promise<string>): {
    createNewFireCMSProject: (projectId: string, googleAccessToken: string | undefined, serviceAccount: object | undefined, creationType: "new" | "existing" | "existing_sa") => Promise<boolean>;
    createFirebaseWebapp: (projectId: string) => Promise<boolean>;
    addSecurityRules: (projectId: string, googleAccessToken?: string, serviceAccount?: object) => Promise<boolean>;
    createServiceAccount: (googleAccessToken: string, projectId: string) => Promise<FireCMSCloudUserWithRoles>;
    createNewUser: (projectId: string, user: FireCMSCloudUserWithRoles) => Promise<FireCMSCloudUserWithRoles>;
    updateUser: (projectId: string, uid: string, user: FireCMSCloudUserWithRoles) => Promise<FireCMSCloudUserWithRoles>;
    deleteUser: (projectId: string, uid: string) => Promise<void>;
    getRootCollections: (projectId: string, googleAccessToken?: string, serviceAccount?: object, retries?: number) => Promise<string[]>;
    doDelegatedLogin: (projectId: string) => Promise<string>;
    getStripePortalLink: (projectId: string) => Promise<string>;
    getRemoteConfigUrl: (projectId: string, revisionId?: string) => Promise<string>;
};
