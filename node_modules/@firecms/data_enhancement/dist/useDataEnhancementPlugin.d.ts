import React from "react";
import { EntityCollection, FireCMSPlugin, User } from "@firecms/core";
import { SubscriptionMessageProps } from "./types/subscriptions_message_props";
export interface DataEnhancementPluginProps {
    apiKey?: string;
    /**
     * Use this function to determine if the data enhancement plugin should be enabled for a given path.
     * If this function is not provided, the plugin will be enabled for all paths.
     * If the function returns false, the plugin will be disabled for the given path.
     * You can also return a configuration object to override the default configuration.
     *
     * @param path
     * @param collection
     */
    getConfigForPath?: (props: {
        path: string;
        collection: EntityCollection;
        user: User | null;
    }) => boolean;
    /**
     * Component to render when the user has finished their free usage quota.
     */
    SubscriptionMessage?: React.ComponentType<SubscriptionMessageProps>;
    /**
     * Host to use for the data enhancement API.
     * This prop is only use in development mode.
     */
    host?: string;
}
/**
 * Use this hook to initialise the data enhancement plugin.
 * This is likely the only hook you will need to use.
 * @param props
 */
export declare function useDataEnhancementPlugin(props?: DataEnhancementPluginProps): FireCMSPlugin;
