import React from "react";
export interface FileUploadError {
    message: string;
    code: string;
}
export type OnFileUploadRejected = (fileRejections: {
    file: File;
    errors: FileUploadError[];
}[], event: object) => void;
export type OnFilesUploadAdded = (files: File[]) => void;
export type FileUploadProps = {
    accept: Record<string, string[]>;
    onFilesAdded: OnFilesUploadAdded;
    onFilesRejected?: OnFileUploadRejected;
    maxSize?: number;
    disabled?: boolean;
    maxFiles?: number;
    title?: React.ReactNode;
    uploadDescription?: React.ReactNode;
    preventDropOnDocument?: boolean;
    size?: "small" | "medium";
};
export declare function FileUpload({ accept, onFilesAdded, onFilesRejected, maxSize, disabled, maxFiles, title, uploadDescription, children, preventDropOnDocument, size }: React.PropsWithChildren<FileUploadProps>): import("react/jsx-runtime").JSX.Element;
