import React, { ReactEventHandler } from "react";
export type TextProps<C extends React.ElementType> = {
    align?: "center" | "inherit" | "justify" | "left" | "right";
    children?: React.ReactNode;
    className?: string;
    component?: C;
    gutterBottom?: boolean;
    noWrap?: boolean;
    paragraph?: boolean;
    variant?: keyof typeof defaultVariantMapping;
    variantMapping?: {
        [key: string]: string;
    };
    color?: "inherit" | "initial" | "primary" | "secondary" | "disabled" | "error";
    onClick?: ReactEventHandler<HTMLElement>;
    style?: React.CSSProperties;
} & React.ComponentPropsWithoutRef<C>;
declare const defaultVariantMapping: {
    h1: string;
    h2: string;
    h3: string;
    h4: string;
    h5: string;
    h6: string;
    subtitle1: string;
    subtitle2: string;
    label: string;
    body1: string;
    body2: string;
    inherit: string;
    caption: string;
    button: string;
};
export declare function Typography<C extends React.ElementType>({ align, color, children, className, component, gutterBottom, noWrap, paragraph, variant, variantMapping, style, onClick, ...other }: TextProps<C>): import("react/jsx-runtime").JSX.Element;
export {};
