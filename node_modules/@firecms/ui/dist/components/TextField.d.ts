import React from "react";
export type InputType = "text" | "number" | "phone" | "email" | "password" | "search" | "url" | "date" | "time" | "datetime-local" | "month" | "week" | "color";
export type TextFieldProps<T extends string | number> = {
    type?: InputType;
    value?: T;
    onChange?: (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void;
    label?: React.ReactNode;
    multiline?: boolean;
    rows?: number;
    disabled?: boolean;
    invisible?: boolean;
    error?: boolean;
    endAdornment?: React.ReactNode;
    autoFocus?: boolean;
    placeholder?: string;
    size?: "small" | "medium";
    className?: string;
    style?: React.CSSProperties;
    inputClassName?: string;
    inputStyle?: React.CSSProperties;
    inputRef?: React.ForwardedRef<any>;
} & Omit<React.InputHTMLAttributes<HTMLInputElement>, "size">;
export declare function TextField<T extends string | number>({ value, onChange, label, type, multiline, invisible, rows, disabled, error, endAdornment, autoFocus, placeholder, size, className, style, inputClassName, inputStyle, inputRef: inputRefProp, ...inputProps }: TextFieldProps<T>): import("react/jsx-runtime").JSX.Element;
