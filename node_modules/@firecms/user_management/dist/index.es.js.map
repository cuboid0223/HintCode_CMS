{"version":3,"file":"index.es.js","sources":["../src/utils/permissions.ts","../src/utils/local_storage.ts","../src/utils/colors.ts","../src/hooks/useFirestoreUserManagement.tsx","../src/UserManagementProvider.tsx","../src/hooks/useUserManagement.tsx","../src/components/roles/RoleChip.tsx","../src/components/roles/RolesDetailsForm.tsx","../src/components/roles/default_roles.tsx","../src/components/roles/RolesTable.tsx","../src/components/roles/RolesView.tsx","../src/components/users/UserDetailsForm.tsx","../src/components/users/UsersTable.tsx","../src/components/users/UsersView.tsx","../src/useUserManagementPlugin.tsx","../src/admin_views.tsx"],"sourcesContent":["import { EntityCollection, Permissions, Role, User } from \"@firecms/core\";\n\nexport const RESERVED_GROUPS = [\"Admin\"];\n\nconst DEFAULT_PERMISSIONS = {\n    read: false,\n    edit: false,\n    create: false,\n    delete: false\n};\n\nexport function resolveUserRolePermissions<UserType extends User>\n({\n     collection,\n     user\n }: {\n    collection: EntityCollection<any>,\n    user: UserType | null\n}): Permissions {\n\n    const roles = user?.roles;\n    if (!roles) {\n        return DEFAULT_PERMISSIONS;\n    } else if (collection.ownerId === user?.uid) {\n        return {\n            read: true,\n            create: true,\n            edit: true,\n            delete: true\n        };\n    } else {\n        const basePermissions = {\n            read: false,\n            create: false,\n            edit: false,\n            delete: false\n        };\n\n        return roles\n            .map(role => resolveCollectionRole(role, collection.id))\n            .reduce(mergePermissions, basePermissions);\n    }\n}\n\nfunction resolveCollectionRole(role: Role, id: string): Permissions {\n\n    const basePermissions = {\n        read: role.isAdmin || role.defaultPermissions?.read,\n        create: role.isAdmin || role.defaultPermissions?.create,\n        edit: role.isAdmin || role.defaultPermissions?.edit,\n        delete: role.isAdmin || role.defaultPermissions?.delete\n    };\n    if (role.collectionPermissions && role.collectionPermissions[id]) {\n        return mergePermissions(role.collectionPermissions[id], basePermissions);\n    } else if (role.defaultPermissions) {\n        return mergePermissions(role.defaultPermissions, basePermissions);\n    } else {\n        return basePermissions;\n    }\n}\n\nconst mergePermissions = (permA: Permissions, permB: Permissions) => {\n    return {\n        read: permA.read || permB.read,\n        create: permA.create || permB.create,\n        edit: permA.edit || permB.edit,\n        delete: permA.delete || permB.delete\n    };\n}\n\nexport function getUserRoles(roles: Role[], fireCMSUser: User): Role[] | undefined {\n    return !roles\n        ? undefined\n        : (fireCMSUser.roles\n            ? fireCMSUser.roles\n                .map(role => roles.find((r) => r.id === role.id))\n                .filter(Boolean) as Role[]\n            : []);\n}\n\nexport const areRolesEqual = (rolesA: Role[], rolesB: Role[]) => {\n    const rolesAIds = rolesA.map(r => r.id);\n    const rolesBIds = rolesB.map(r => r.id);\n    return rolesAIds.length === rolesB.length && rolesAIds.every((role) => rolesBIds.includes(role));\n}\n","// const tokens = new Map<string, {\n//     token: string,\n//     expiry: Date\n// }>();\n\nexport function cacheDelegatedLoginToken(projectId: string, delegatedToken?: string) {\n    if (!delegatedToken) {\n        return;\n    }\n\n    const data = parseJwt(delegatedToken);\n    // @ts-ignore\n    const expiry = new Date(data.exp * 1000);\n    localStorage.setItem(`auth_token::${projectId}`, JSON.stringify({\n        token: delegatedToken,\n        expiry\n    }));\n\n}\n\nexport function getDelegatedLoginTokenFromCache(projectId: string) {\n    const entry = localStorage.getItem(`auth_token::${projectId}`);\n    if (entry) {\n        const data = JSON.parse(entry);\n        data.expiry = new Date(data.expiry);\n        if (data.expiry > new Date()) {\n            return data.token;\n        }\n    }\n    return undefined;\n}\n\nexport function clearDelegatedLoginTokensCache() {\n    for (let i = 0; i < localStorage.length; i++) {\n        const key = localStorage.key(i);\n        if (key?.startsWith(\"auth_token::\")) {\n            localStorage.removeItem(key);\n        }\n    }\n}\n\nfunction parseJwt(token?: string): object {\n    if (!token) {\n        throw new Error(\"No JWT token\");\n    }\n    const base64Url = token.split(\".\")[1];\n    const base64 = base64Url.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    const jsonPayload = decodeURIComponent(window.atob(base64).split(\"\").map(function (c) {\n        return \"%\" + (\"00\" + c.charCodeAt(0).toString(16)).slice(-2);\n    }).join(\"\"));\n\n    return JSON.parse(jsonPayload);\n}\n","export function darkenColor(hexColor: string, darkenBy = 10): string {\n    // Check input validity\n    if (!/^#([0-9A-Fa-f]{3}){1,2}$/.test(hexColor)) {\n        throw new Error(\"Invalid color format\");\n    }\n\n    // If shorthand form, convert to full form\n    let color = hexColor.substring(1).split(\"\");\n    if (color.length === 3) {\n        color = [color[0], color[0], color[1], color[1], color[2], color[2]];\n    }\n\n    // Convert to RGB values\n    let r = parseInt(color[0] + color[1], 16);\n    let g = parseInt(color[2] + color[3], 16);\n    let b = parseInt(color[4] + color[5], 16);\n\n    // Reduce each color component by the specified percentage (darkenBy)\n    r = Math.floor(r * (1 - darkenBy / 100));\n    g = Math.floor(g * (1 - darkenBy / 100));\n    b = Math.floor(b * (1 - darkenBy / 100));\n\n    // Recombine into hex and return\n    return \"#\" +\n        (r < 16 ? \"0\" : \"\") + r.toString(16) +\n        (g < 16 ? \"0\" : \"\") + g.toString(16) +\n        (b < 16 ? \"0\" : \"\") + b.toString(16);\n}\n\nexport function hexToRgbaWithOpacity(hexColor: string, opacity = 10): string {\n    // Check input validity\n    if (!/^#([0-9A-Fa-f]{3}){1,2}$/.test(hexColor)) {\n        throw new Error(\"Invalid color format\");\n    }\n\n    // If shorthand form, convert to full form\n    let color = hexColor.substring(1).split(\"\");\n    if (color.length === 3) {\n        color = [color[0], color[0], color[1], color[1], color[2], color[2]];\n    }\n\n    // Convert to RGB values\n    const r = parseInt(color[0] + color[1], 16);\n    const g = parseInt(color[2] + color[3], 16);\n    const b = parseInt(color[4] + color[5], 16);\n\n    // Convert opacity to a decimal for CSS\n    const alpha = opacity / 100;\n\n    // Construct and return the RGBA color\n    return `rgba(${r}, ${g}, ${b}, ${alpha})`;\n}\n","import React, { useCallback, useEffect } from \"react\";\nimport {\n    addDoc,\n    collection,\n    deleteDoc,\n    doc,\n    DocumentSnapshot,\n    getFirestore,\n    onSnapshot,\n    setDoc\n} from \"firebase/firestore\";\nimport { FirebaseApp } from \"firebase/app\";\nimport { UserManagement } from \"../types\";\nimport { Authenticator, PermissionsBuilder, Role, User } from \"@firecms/core\";\nimport { resolveUserRolePermissions } from \"../utils\";\n\ntype UserWithRoleIds = User & { roles: string[] };\n\nexport interface UserManagementParams {\n    /**\n     * The Firebase app to use for the user management. The config will be saved in the Firestore\n     * collection indicated by `configPath`.\n     */\n    firebaseApp?: FirebaseApp;\n    /**\n     * Path where the plugin users configuration is stored.\n     * Default: __FIRECMS/config/users\n     * You can specify a different path if you want to store the user management configuration in a different place.\n     * Please keep in mind that the FireCMS users are not necessarily the same as the Firebase users (but they can be).\n     * The path should be relative to the root of the Firestore database, and should always have an odd number of segments.\n     */\n    usersPath?: string;\n\n    /**\n     * Path where the plugin roles configuration is stored.\n     * Default: __FIRECMS/config/roles\n     */\n    rolesPath?: string;\n\n    /**\n     * Maximum number of users that can be created.\n     */\n    usersLimit?: number;\n\n    /**\n     * Can the logged user edit roles\n     */\n    canEditRoles?: boolean;\n\n    /**\n     * If there are no roles in the database, provide a button to create the default roles.\n     */\n    allowDefaultRolesCreation?: boolean;\n\n    /**\n     * Include the collection config permissions in the user management system.\n     */\n    includeCollectionConfigPermissions?: boolean;\n\n}\n\n/**\n * This hook is used to build a user management object that can be used to\n * manage users and roles in a Firestore backend.\n * @param backendFirebaseApp\n * @param usersPath\n * @param rolesPath\n * @param usersLimit\n * @param canEditRoles\n */\nexport function useFirestoreUserManagement({\n                                               firebaseApp,\n                                               usersPath = \"__FIRECMS/config/users\",\n                                               rolesPath = \"__FIRECMS/config/roles\",\n                                               usersLimit,\n                                               canEditRoles = true,\n                                               allowDefaultRolesCreation,\n                                               includeCollectionConfigPermissions\n                                           }: UserManagementParams): UserManagement {\n\n    const [rolesLoading, setRolesLoading] = React.useState<boolean>(true);\n    const [usersLoading, setUsersLoading] = React.useState<boolean>(true);\n    const [roles, setRoles] = React.useState<Role[]>([]);\n    const [usersWithRoleIds, setUsersWithRoleIds] = React.useState<UserWithRoleIds[]>([]);\n\n    const users = usersWithRoleIds.map(u => ({\n        ...u,\n        roles: roles.filter(r => u.roles?.includes(r.id))\n    }) as User);\n\n    const [rolesError, setRolesError] = React.useState<Error | undefined>();\n    const [usersError, setUsersError] = React.useState<Error | undefined>();\n\n    const loading = rolesLoading || usersLoading;\n\n    useEffect(() => {\n        if (!firebaseApp || !rolesPath) return;\n        const firestore = getFirestore(firebaseApp);\n\n        return onSnapshot(collection(firestore, rolesPath),\n            {\n                next: (snapshot) => {\n                    setRolesError(undefined);\n                    try {\n                        const newRoles = docsToRoles(snapshot.docs);\n                        setRoles(newRoles);\n                    } catch (e) {\n                        console.error(\"Error loading roles\", e);\n                        setRolesError(e as Error);\n                    }\n                    setRolesLoading(false);\n                },\n                error: (e) => {\n                    console.error(\"Error loading roles\", e);\n                    setRolesError(e);\n                    setRolesLoading(false);\n                }\n            }\n        );\n    }, [firebaseApp, rolesPath]);\n\n    useEffect(() => {\n        if (!firebaseApp || !usersPath) return;\n        const firestore = getFirestore(firebaseApp);\n\n        return onSnapshot(collection(firestore, usersPath),\n            {\n                next: (snapshot) => {\n                    setUsersError(undefined);\n                    try {\n                        const newUsers = docsToUsers(snapshot.docs);\n                        setUsersWithRoleIds(newUsers);\n                    } catch (e) {\n                        console.error(\"Error loading users\", e);\n                        setUsersError(e as Error);\n                    }\n                    setUsersLoading(false);\n                },\n                error: (e) => {\n                    console.error(\"Error loading users\", e);\n                    setUsersError(e);\n                    setUsersLoading(false);\n                }\n            }\n        );\n    }, [firebaseApp, usersPath]);\n\n    const saveUser = useCallback(async (user: User): Promise<User> => {\n        if (!firebaseApp) throw Error(\"useFirestoreUserManagement Firebase not initialised\");\n        const firestore = getFirestore(firebaseApp);\n        if (!firestore || !usersPath) throw Error(\"useFirestoreUserManagement Firestore not initialised\");\n        console.debug(\"Persisting user\", user);\n        const roleIds = user.roles?.map(r => r.id);\n        const {\n            uid,\n            ...userData\n        } = user;\n        const data = {\n            ...userData,\n            roles: roleIds\n        };\n        if (uid) {\n            return setDoc(doc(firestore, usersPath, uid), data, { merge: true }).then(() => user);\n        } else {\n            return addDoc(collection(firestore, usersPath), data).then(() => user);\n        }\n    }, [usersPath, firebaseApp]);\n\n    const saveRole = useCallback((role: Role): Promise<void> => {\n        if (!firebaseApp) throw Error(\"useFirestoreUserManagement Firebase not initialised\");\n        const firestore = getFirestore(firebaseApp);\n        if (!firestore || !rolesPath) throw Error(\"useFirestoreUserManagement Firestore not initialised\");\n        console.debug(\"Persisting role\", role);\n        const {\n            id,\n            ...roleData\n        } = role;\n        const ref = doc(firestore, rolesPath, id);\n        return setDoc(ref, roleData, { merge: true });\n    }, [rolesPath, firebaseApp]);\n\n    const deleteUser = useCallback(async (user: User): Promise<void> => {\n        if (!firebaseApp) throw Error(\"useFirestoreUserManagement Firebase not initialised\");\n        const firestore = getFirestore(firebaseApp);\n        if (!firestore || !usersPath) throw Error(\"useFirestoreUserManagement Firestore not initialised\");\n        console.debug(\"Deleting\", user);\n        const { uid } = user;\n        return deleteDoc(doc(firestore, usersPath, uid));\n    }, [usersPath, firebaseApp]);\n\n    const deleteRole = useCallback((role: Role): Promise<void> => {\n        if (!firebaseApp) throw Error(\"useFirestoreUserManagement Firebase not initialised\");\n        const firestore = getFirestore(firebaseApp);\n        if (!firestore || !rolesPath) throw Error(\"useFirestoreUserManagement Firestore not initialised\");\n        console.debug(\"Deleting\", role);\n        const { id } = role;\n        const ref = doc(firestore, rolesPath, id);\n        return deleteDoc(ref);\n    }, [rolesPath, firebaseApp]);\n\n    const collectionPermissions: PermissionsBuilder = useCallback(({\n                                                                       collection,\n                                                                       user\n                                                                   }) => resolveUserRolePermissions({\n        collection,\n        user\n    }), []);\n\n    const defineRolesFor: ((user: User) => Role[] | undefined) = useCallback((user) => {\n        if (!users) throw Error(\"Users not loaded\");\n        const mgmtUser = users.find(u => u.email?.toLowerCase() === user?.email?.toLowerCase());\n        return mgmtUser?.roles;\n    }, [users]);\n\n    const authenticator: Authenticator = useCallback(({ user }) => {\n        console.debug(\"Authenticating user\", user);\n\n        if (loading) {\n            console.warn(\"User management is still loading\");\n            return false;\n        }\n\n        // This is an example of how you can link the access system to the user management plugin\n        if (users.length === 0) {\n            return true; // If there are no users created yet, we allow access to every user\n        }\n\n        const mgmtUser = users.find(u => u.email?.toLowerCase() === user?.email?.toLowerCase());\n        if (mgmtUser) {\n            return true;\n        }\n\n        throw Error(\"Could not find a user with the provided email in the user management system.\");\n    }, [loading, users])\n\n    return {\n        loading,\n        roles,\n        users,\n        saveUser,\n        saveRole,\n        rolesError,\n        deleteUser,\n        deleteRole,\n        usersLimit,\n        usersError,\n        canEditRoles: canEditRoles === undefined ? true : canEditRoles,\n        allowDefaultRolesCreation: allowDefaultRolesCreation === undefined ? true : allowDefaultRolesCreation,\n        includeCollectionConfigPermissions: Boolean(includeCollectionConfigPermissions),\n        collectionPermissions,\n        defineRolesFor,\n        authenticator\n    }\n}\n\nconst docsToUsers = (docs: DocumentSnapshot[]): (UserWithRoleIds)[] => {\n    return docs.map((doc) => {\n        const data = doc.data() as any;\n        const newVar = {\n            uid: doc.id,\n            ...data,\n            created_on: data?.created_on?.toDate(),\n            updated_on: data?.updated_on?.toDate()\n        };\n        return newVar as (UserWithRoleIds);\n    });\n}\n\nconst docsToRoles = (docs: DocumentSnapshot[]): Role[] => {\n    return docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data()\n    } as Role));\n}\n","import React, { PropsWithChildren } from \"react\";\nimport { UserManagement } from \"./types\";\nimport { User } from \"@firecms/core\";\n\nexport const UserManagementContext = React.createContext<UserManagement<any>>({} as any);\n\nexport interface UserManagementProviderProps<U extends User = User> {\n    userManagement: UserManagement<U>\n}\n\nexport function UserManagementProvider<U extends User = User>({\n                                           children,\n                                           userManagement\n                                       }: PropsWithChildren<UserManagementProviderProps<U>>) {\n    return (\n        <UserManagementContext.Provider value={userManagement}>\n            {children}\n        </UserManagementContext.Provider>\n    );\n};\n","import { useContext } from \"react\";\nimport { UserManagement } from \"../types\";\nimport { UserManagementContext } from \"../UserManagementProvider\";\nimport { User } from \"@firecms/core\";\nexport const useUserManagement = <USER extends User>() => useContext<UserManagement<USER>>(UserManagementContext);\n","import { Chip, getColorSchemeForSeed } from \"@firecms/ui\";\nimport { Role } from \"@firecms/core\";\n\nexport type RoleChipProps = {\n    role: Role;\n}\n\nexport function RoleChip({ role }: RoleChipProps) {\n    let colorScheme;\n    if (role.isAdmin) {\n        colorScheme = \"blueDarker\";\n    } else if (role.id === \"editor\") {\n        colorScheme = \"yellowLight\";\n    } else if (role.id === \"viewer\") {\n        colorScheme = \"grayLight\";\n    } else {\n        colorScheme = getColorSchemeForSeed(role.id);\n    }\n\n    return (\n        <Chip\n            colorScheme={colorScheme}\n            key={role.id}>\n            {role.name}\n        </Chip>\n    );\n\n}\n","import React, { useCallback, useState } from \"react\";\nimport * as Yup from \"yup\";\n\nimport { EntityCollection, FieldCaption, Role, toSnakeCase, } from \"@firecms/core\";\nimport {\n    Button,\n    Checkbox,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DoneIcon,\n    LoadingButton,\n    Paper,\n    Select,\n    SelectItem,\n    Table,\n    TableBody,\n    TableCell,\n    TableHeader,\n    TableRow,\n    TextField,\n    Tooltip,\n    Typography\n} from \"@firecms/ui\";\nimport { useUserManagement } from \"../../hooks\";\nimport { Formex, getIn, useCreateFormex } from \"@firecms/formex\";\n\nexport const RoleYupSchema = Yup.object().shape({\n    id: Yup.string().required(\"Required\"),\n    name: Yup.string().required(\"Required\")\n});\n\nexport function RolesDetailsForm({\n                                     open,\n                                     role,\n                                     editable,\n                                     handleClose,\n                                     collections\n                                 }: {\n    open: boolean,\n    editable?: boolean,\n    role?: Role,\n    handleClose: () => void,\n    collections?: EntityCollection[]\n}) {\n\n    const { saveRole } = useUserManagement();\n    const isNewRole = !role;\n\n    const [savingError, setSavingError] = useState<Error | undefined>();\n\n    const onRoleUpdated = useCallback((role: Role) => {\n        setSavingError(undefined);\n        return saveRole(role);\n    }, [saveRole]);\n\n    const formex = useCreateFormex({\n        initialValues: role ?? {\n            name: \"\"\n        } as Role,\n        onSubmit: (role: Role, formexController) => {\n            return onRoleUpdated(role)\n                .then(() => {\n                    formexController.resetForm({\n                        values: role\n                    });\n                    handleClose();\n                })\n                .catch(e => setSavingError(e));\n        },\n        validation: (values) => {\n            return RoleYupSchema.validate(values, { abortEarly: false })\n                .then(() => ({}))\n                .catch((e) => {\n                    const errors: Record<string, string> = {};\n                    e.inner.forEach((error: any) => {\n                        errors[error.path] = error.message;\n                    });\n                    return errors;\n                });\n        }\n\n    });\n\n    const {\n        isSubmitting,\n        touched,\n        values,\n        errors,\n        handleChange,\n        setFieldValue,\n        dirty,\n        setFieldTouched\n    } = formex;\n\n    const isAdmin = values.isAdmin ?? false;\n    const defaultCreate = values.defaultPermissions?.create ?? false;\n    const defaultRead = values.defaultPermissions?.read ?? false;\n    const defaultEdit = values.defaultPermissions?.edit ?? false;\n    const defaultDelete = values.defaultPermissions?.delete ?? false;\n\n    React.useEffect(() => {\n        const idTouched = getIn(touched, \"id\");\n        if (!idTouched && values.name) {\n            setFieldValue(\"id\", toSnakeCase(values.name))\n        }\n    }, [touched, values.name]);\n\n    return (\n        <Dialog\n            open={open}\n            maxWidth={\"4xl\"}\n        >\n            <Formex value={formex}>\n                <form noValidate\n                      autoComplete={\"off\"}\n                      onSubmit={formex.handleSubmit}\n                      style={{\n                          display: \"flex\",\n                          flexDirection: \"column\",\n                          position: \"relative\",\n                          height: \"100%\"\n                      }}>\n                    <DialogContent className=\"flex-grow\">\n                        <div\n                            className=\"flex flex-row pt-12 pb-8\">\n                            <Typography variant={\"h4\"}\n                                        className=\"flex-grow\">\n                                Role\n                            </Typography>\n                        </div>\n\n                        <div className={\"grid grid-cols-12 gap-8\"}>\n\n                            <div className={\"col-span-12 md:col-span-8\"}>\n                                <TextField\n                                    name=\"name\"\n                                    required\n                                    error={touched.name && Boolean(errors.name)}\n                                    value={values.name}\n                                    disabled={isAdmin || !editable}\n                                    onChange={handleChange}\n                                    aria-describedby=\"name-helper-text\"\n                                    label=\"Name\"\n                                />\n                                <FieldCaption>\n                                    {touched.name && Boolean(errors.name) ? errors.name : \"Name of this role\"}\n                                </FieldCaption>\n                            </div>\n\n                            <div className={\"col-span-12 md:col-span-4\"}>\n                                <TextField\n                                    name=\"id\"\n                                    required\n                                    error={touched.id && Boolean(errors.id)}\n                                    value={values.id}\n                                    disabled={!isNewRole || !editable}\n                                    onChange={(e) => {\n                                        handleChange(e);\n                                        setFieldTouched(\"id\", true)\n                                    }}\n                                    aria-describedby=\"id-helper-text\"\n                                    label=\"ID\"\n                                />\n                                <FieldCaption>\n                                    {touched.id && Boolean(errors.id) ? errors.id : \"ID of this role\"}\n                                </FieldCaption>\n                            </div>\n\n                            <div className={\"col-span-12\"}>\n                                <Paper\n\n                                    className=\"bg-inherit\">\n                                    <Table>\n                                        <TableHeader>\n                                            <TableCell></TableCell>\n                                            <TableCell\n                                                align=\"center\">Create\n                                                entities\n                                            </TableCell>\n                                            <TableCell\n                                                align=\"center\">Read\n                                                entities\n                                            </TableCell>\n                                            <TableCell\n                                                align=\"center\">Update\n                                                entities\n                                            </TableCell>\n                                            <TableCell\n                                                align=\"center\">Delete\n                                                entities\n                                            </TableCell>\n                                        </TableHeader>\n\n                                        <TableBody>\n                                            <TableRow>\n                                                <TableCell\n                                                    scope=\"row\">\n                                                    <strong>All\n                                                        collections</strong>\n                                                </TableCell>\n                                                <TableCell\n                                                    align=\"center\">\n                                                    <Tooltip\n                                                        title=\"Create entities in collections\">\n                                                        <Checkbox\n                                                            disabled={isAdmin || !editable}\n                                                            checked={(isAdmin || defaultCreate) ?? false}\n                                                            onCheckedChange={(checked) => setFieldValue(\"defaultPermissions.create\", checked)}\n                                                        />\n                                                    </Tooltip>\n                                                </TableCell>\n\n                                                <TableCell\n                                                    align=\"center\">\n                                                    <Tooltip\n                                                        title=\"Access all data in every collection\">\n                                                        <Checkbox\n                                                            disabled={isAdmin || !editable}\n                                                            checked={(isAdmin || defaultRead) ?? false}\n                                                            onCheckedChange={(checked) => setFieldValue(\"defaultPermissions.read\", checked)}\n                                                        />\n                                                    </Tooltip>\n                                                </TableCell>\n                                                <TableCell\n                                                    align=\"center\">\n                                                    <Tooltip\n                                                        title=\"Update data in any collection\">\n                                                        <Checkbox\n                                                            disabled={isAdmin || !editable}\n                                                            checked={(isAdmin || defaultEdit) ?? false}\n                                                            onCheckedChange={(checked) => setFieldValue(\"defaultPermissions.edit\", checked)}\n                                                        />\n                                                    </Tooltip>\n                                                </TableCell>\n                                                <TableCell\n                                                    align=\"center\">\n                                                    <Tooltip\n                                                        title=\"Delete data in any collection\">\n                                                        <Checkbox\n                                                            disabled={isAdmin || !editable}\n                                                            checked={(isAdmin || defaultDelete) ?? false}\n                                                            onCheckedChange={(checked) => setFieldValue(\"defaultPermissions.delete\", checked)}\n                                                        />\n\n                                                    </Tooltip>\n                                                </TableCell>\n                                            </TableRow>\n                                            {collections && collections.map((col) => (\n                                                <TableRow key={col.name}>\n                                                    <TableCell\n                                                        scope=\"row\">\n                                                        {col.name}\n                                                    </TableCell>\n                                                    <TableCell\n                                                        align=\"center\">\n                                                        <Checkbox\n                                                            disabled={isAdmin || defaultCreate || !editable}\n                                                            checked={(isAdmin || defaultCreate || getIn(values, `collectionPermissions.${col.path}.create`)) ?? false}\n                                                            onCheckedChange={(checked) => setFieldValue(`collectionPermissions.${col.path}.create`, checked)}/>\n                                                    </TableCell>\n                                                    <TableCell\n                                                        align=\"center\">\n                                                        <Checkbox\n                                                            disabled={isAdmin || defaultRead || !editable}\n                                                            checked={(isAdmin || defaultRead || getIn(values, `collectionPermissions.${col.path}.read`)) ?? false}\n                                                            onCheckedChange={(checked) => setFieldValue(`collectionPermissions.${col.path}.read`, checked)}/>\n                                                    </TableCell>\n                                                    <TableCell\n                                                        align=\"center\">\n                                                        <Checkbox\n                                                            disabled={isAdmin || defaultEdit || !editable}\n                                                            checked={(isAdmin || defaultEdit || getIn(values, `collectionPermissions.${col.path}.edit`)) ?? false}\n                                                            onCheckedChange={(checked) => setFieldValue(`collectionPermissions.${col.path}.edit`, checked)}/>\n                                                    </TableCell>\n                                                    <TableCell\n                                                        align=\"center\">\n                                                        <Checkbox\n                                                            disabled={isAdmin || defaultDelete || !editable}\n                                                            checked={(isAdmin || defaultDelete || getIn(values, `collectionPermissions.${col.path}.delete`)) ?? false}\n                                                            onCheckedChange={(checked) => setFieldValue(`collectionPermissions.${col.path}.delete`, checked)}/>\n                                                    </TableCell>\n                                                </TableRow>\n                                            ))}\n                                        </TableBody>\n                                    </Table>\n                                </Paper>\n                                <FieldCaption>\n                                    You can customise the permissions\n                                    that the users related to this\n                                    role can perform in the entities\n                                    of each collection\n                                </FieldCaption>\n                            </div>\n\n                            <div className={\"col-span-12 md:col-span-4\"}>\n                                <Select\n                                    error={touched.config && Boolean(errors.config)}\n                                    id=\"createCollections\"\n                                    name=\"createCollections\"\n                                    label=\"Create collections\"\n                                    position={\"item-aligned\"}\n                                    disabled={isAdmin || !editable}\n                                    onChange={(event) => setFieldValue(\"config.createCollections\", event.target.value === \"true\")}\n                                    value={isAdmin || values.config?.createCollections ? \"true\" : \"false\"}\n                                    renderValue={(value: any) => value === \"true\" ? \"Yes\" : \"No\"}\n                                >\n                                    <SelectItem\n                                        value={\"true\"}> Yes </SelectItem>\n                                    <SelectItem\n                                        value={\"false\"}> No </SelectItem>\n                                </Select>\n\n                                <FieldCaption>\n                                    {touched.config && Boolean(errors.config) ? errors.config : \"Can the user create collections\"}\n                                </FieldCaption>\n                            </div>\n\n                            <div className={\"col-span-12 md:col-span-4\"}>\n                                <Select\n                                    error={touched.config && Boolean(errors.config)}\n                                    id=\"editCollections\"\n                                    name=\"editCollections\"\n                                    label=\"Edit collections\"\n                                    disabled={isAdmin || !editable}\n                                    position={\"item-aligned\"}\n                                    onChange={(event) => setFieldValue(\"config.editCollections\", event.target.value === \"own\" ? \"own\" : event.target.value === \"true\")}\n                                    value={isAdmin ? \"true\" : (values.config?.editCollections === \"own\" ? \"own\" : (values.config?.editCollections ? \"true\" : \"false\"))}\n                                    renderValue={(value: any) => value === \"own\" ? \"Own\" : (value === \"true\" ? \"Yes\" : \"No\")}\n                                >\n                                    <SelectItem\n                                        value={\"true\"}> Yes </SelectItem>\n                                    <SelectItem\n                                        value={\"false\"}> No </SelectItem>\n                                    <SelectItem\n                                        value={\"own\"}> Only\n                                        his/her own </SelectItem>\n                                </Select>\n\n                                <FieldCaption>\n                                    {touched.config && Boolean(errors.config) ? errors.config : \"Can the user edit collections\"}\n                                </FieldCaption>\n                            </div>\n\n                            <div className={\"col-span-12 md:col-span-4\"}>\n                                <Select\n                                    error={touched.config && Boolean(errors.config)}\n                                    id=\"deleteCollections\"\n                                    name=\"deleteCollections\"\n                                    label=\"Delete collections\"\n                                    disabled={isAdmin || !editable}\n                                    position={\"item-aligned\"}\n                                    onChange={(event) => setFieldValue(\"config.deleteCollections\", event.target.value === \"own\" ? \"own\" : event.target.value === \"true\")}\n                                    value={isAdmin ? \"true\" : (values.config?.deleteCollections === \"own\" ? \"own\" : (values.config?.deleteCollections ? \"true\" : \"false\"))}\n                                    renderValue={(value: any) => value === \"own\" ? \"Own\" : (value === \"true\" ? \"Yes\" : \"No\")}\n                                >\n                                    <SelectItem\n                                        value={\"true\"}> Yes </SelectItem>\n                                    <SelectItem\n                                        value={\"false\"}> No </SelectItem>\n                                    <SelectItem\n                                        value={\"own\"}> Only\n                                        his/her own </SelectItem>\n                                </Select>\n\n                                <FieldCaption>\n                                    {touched.config && Boolean(errors.config) ? errors.config : \"Can the user delete collections\"}\n                                </FieldCaption>\n\n                            </div>\n\n                        </div>\n                    </DialogContent>\n\n                    <DialogActions position={\"sticky\"}>\n                        {savingError && <Typography className={\"text-red-500\"}>\n                            There was an error saving this role\n                        </Typography>}\n                        <Button variant={\"text\"}\n                                onClick={() => {\n                                    handleClose();\n                                }}>\n                            Cancel\n                        </Button>\n                        <LoadingButton\n                            variant=\"filled\"\n                            color=\"primary\"\n                            type=\"submit\"\n                            disabled={!dirty}\n                            loading={isSubmitting}\n                            startIcon={<DoneIcon/>}\n                        >\n                            {isNewRole ? \"Create role\" : \"Update\"}\n                        </LoadingButton>\n                    </DialogActions>\n                </form>\n\n            </Formex>\n        </Dialog>\n    );\n}\n","import { Role } from \"@firecms/core\";\n\nexport const DEFAULT_ROLES: Role[] = [\n    {\n        id: \"admin\",\n        name: \"Admin\",\n        isAdmin: true\n    },\n    {\n        id: \"editor\",\n        name: \"Editor\",\n        isAdmin: false,\n        defaultPermissions: {\n            read: true,\n            create: true,\n            edit: true,\n            delete: true\n        },\n        config: {\n            createCollections: true,\n            editCollections: \"own\",\n            deleteCollections: \"own\"\n        }\n    },\n    {\n        id: \"viewer\",\n        name: \"Viewer\",\n        isAdmin: false,\n        defaultPermissions: {\n            read: true,\n            create: false,\n            edit: false,\n            delete: false\n        }\n    }\n];\n","import { useState } from \"react\";\nimport {\n    Button,\n    CenteredView,\n    Checkbox,\n    DeleteIcon,\n    IconButton,\n    Table,\n    TableBody,\n    TableCell,\n    TableHeader,\n    TableRow,\n    Tooltip,\n    Typography\n} from \"@firecms/ui\";\nimport { DeleteConfirmationDialog, Role } from \"@firecms/core\";\nimport { useUserManagement } from \"../../hooks\";\nimport { RoleChip } from \"./RoleChip\";\nimport { DEFAULT_ROLES } from \"./default_roles\";\n\nexport function RolesTable({\n                               onRoleClicked,\n                               editable\n                           }: {\n    onRoleClicked: (role: Role) => void;\n    editable: boolean;\n}) {\n\n    const {\n        roles,\n        saveRole,\n        deleteRole,\n        allowDefaultRolesCreation\n    } = useUserManagement();\n\n    const [roleToBeDeleted, setRoleToBeDeleted] = useState<Role | undefined>(undefined);\n    const [deleteInProgress, setDeleteInProgress] = useState<boolean>(false);\n\n    return <div\n        className=\"w-full overflow-auto\">\n        <Table>\n            <TableHeader>\n                <TableCell header={true} className=\"w-16\"></TableCell>\n                <TableCell header={true}>Role</TableCell>\n                <TableCell header={true} className={\"items-center\"}>Is Admin</TableCell>\n                <TableCell header={true}>Default permissions</TableCell>\n            </TableHeader>\n\n            <TableBody>\n                {roles && roles.map((role) => {\n                    const canCreateAll = role.isAdmin || role.defaultPermissions?.create;\n                    const canReadAll = role.isAdmin || role.defaultPermissions?.read;\n                    const canUpdateAll = role.isAdmin || role.defaultPermissions?.edit;\n                    const canDeleteAll = role.isAdmin || role.defaultPermissions?.delete;\n                    return (\n                        <TableRow\n                            key={role.name}\n                            onClick={() => {\n                                onRoleClicked(role);\n                            }}\n                        >\n                            <TableCell style={{ width: \"64px\" }}>\n                                {!role.isAdmin &&\n                                    <Tooltip title={\"Delete this role\"}>\n                                        <IconButton\n                                            size={\"small\"}\n                                            disabled={!editable}\n                                            onClick={(event) => {\n                                                event.stopPropagation();\n                                                return setRoleToBeDeleted(role);\n                                            }}>\n                                            <DeleteIcon/>\n                                        </IconButton>\n                                    </Tooltip>}\n                            </TableCell>\n                            <TableCell>\n                                <RoleChip role={role}/>\n                            </TableCell>\n                            <TableCell className={\"items-center\"}>\n                                <Checkbox checked={role.isAdmin ?? false}/>\n                            </TableCell>\n                            <TableCell>\n                                <ul>\n                                    {canCreateAll && <li>Create</li>}\n                                    {canReadAll && <li>Read</li>}\n                                    {canUpdateAll && <li>Update</li>}\n                                    {canDeleteAll && <li>Delete</li>}\n                                </ul>\n                            </TableCell>\n                        </TableRow>\n                    );\n                })}\n\n                {(!roles || roles.length === 0) && <TableRow>\n                    <TableCell colspan={4}>\n                        <CenteredView className={\"flex flex-col gap-4 my-8 items-center\"}>\n                            <Typography variant={\"label\"}>\n                                You don&apos;t have any roles yet.\n                            </Typography>\n                            {allowDefaultRolesCreation && <Button variant={\"outlined\"}\n                                                                  onClick={() => {\n                                                                      DEFAULT_ROLES.forEach((role) => {\n                                                                          saveRole(role);\n                                                                      });\n                                                                  }}>\n                                Create default roles\n                            </Button>}\n                        </CenteredView>\n                    </TableCell>\n                </TableRow>}\n\n            </TableBody>\n\n        </Table>\n\n        <DeleteConfirmationDialog\n            open={Boolean(roleToBeDeleted)}\n            loading={deleteInProgress}\n            onAccept={() => {\n                if (roleToBeDeleted) {\n                    setDeleteInProgress(true);\n                    deleteRole(roleToBeDeleted)\n                        .then(() => {\n                            setRoleToBeDeleted(undefined);\n                        })\n                        .finally(() => {\n                            setDeleteInProgress(false);\n                        })\n                }\n            }}\n            onCancel={() => {\n                setRoleToBeDeleted(undefined);\n            }}\n            title={<>Delete?</>}\n            body={<>Are you sure you want to delete this role?</>}/>\n\n    </div>;\n}\n","import React, { useCallback, useState } from \"react\";\n\nimport { Role, useNavigationController } from \"@firecms/core\";\nimport { AddIcon, Button, Container, Tooltip, Typography } from \"@firecms/ui\";\nimport { RolesTable } from \"./RolesTable\";\nimport { RolesDetailsForm } from \"./RolesDetailsForm\";\nimport { useUserManagement } from \"../../hooks\";\n\nexport const RolesView = React.memo(\n    function RolesView({ children }: { children?: React.ReactNode }) {\n\n        const { collections } = useNavigationController();\n        const [dialogOpen, setDialogOpen] = useState(false);\n        const [selectedRole, setSelectedRole] = useState<Role | undefined>();\n\n        const { canEditRoles } = useUserManagement();\n\n        const onRoleClicked = useCallback((user: Role) => {\n            setDialogOpen(true);\n            setSelectedRole(user);\n        }, []);\n\n        const handleClose = () => {\n            setSelectedRole(undefined);\n            setDialogOpen(false);\n        };\n\n        return (\n            <Container className=\"w-full flex flex-col py-4 gap-4\" maxWidth={\"6xl\"}>\n\n                {children}\n\n                <div className=\"flex items-center mt-12\">\n                    <Typography gutterBottom variant=\"h4\"\n                                className=\"flex-grow\"\n                                component=\"h4\">\n                        Roles\n                    </Typography>\n                    <Tooltip title={!canEditRoles ? \"Update plans to customise roles\" : undefined}>\n                        <Button\n                            size={\"large\"}\n                            disabled={!canEditRoles}\n                            startIcon={<AddIcon/>}\n                            onClick={() => setDialogOpen(true)}>\n                            Add role\n                        </Button>\n                    </Tooltip>\n                </div>\n\n                <RolesTable onRoleClicked={onRoleClicked} editable={Boolean(canEditRoles)}/>\n\n                <RolesDetailsForm\n                    key={selectedRole?.id ?? \"new\"}\n                    open={dialogOpen}\n                    role={selectedRole}\n                    editable={canEditRoles}\n                    collections={collections}\n                    handleClose={handleClose}/>\n\n            </Container>\n        )\n    });\n","import React, { useCallback } from \"react\";\nimport * as Yup from \"yup\";\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DoneIcon,\n    LoadingButton,\n    MultiSelect,\n    MultiSelectItem,\n    TextField,\n    Typography,\n} from \"@firecms/ui\";\nimport { FieldCaption, Role, useAuthController, User, useSnackbarController } from \"@firecms/core\";\nimport { Formex, useCreateFormex } from \"@firecms/formex\";\n\nimport { areRolesEqual } from \"../../utils\";\nimport { useUserManagement } from \"../../hooks\";\nimport { RoleChip } from \"../roles\";\n\nexport const UserYupSchema = Yup.object().shape({\n    displayName: Yup.string().required(\"Required\"),\n    email: Yup.string().email().required(\"Required\"),\n    roles: Yup.array().min(1)\n});\n\nfunction canUserBeEdited(loggedUser: User, user: User, users: User[], roles: Role[], prevUser?: User) {\n    const admins = users.filter(u => u.roles?.map(r => r.id).includes(\"admin\"));\n    const loggedUserIsAdmin = loggedUser.roles?.map(r => r.id).includes(\"admin\");\n    const didRolesChange = !prevUser || !areRolesEqual(prevUser.roles ?? [], user.roles ?? []);\n\n    if (didRolesChange && !loggedUserIsAdmin) {\n        throw new Error(\"Only admins can change roles\");\n    }\n\n    // was the admin role removed\n    const adminRoleRemoved = prevUser && prevUser.roles?.map(r => r.id).includes(\"admin\") && !user.roles?.map(r => r.id).includes(\"admin\");\n\n    // avoid removing the last admin\n    if (adminRoleRemoved && admins.length === 1) {\n        throw new Error(\"There must be at least one admin\");\n    }\n    return true;\n}\n\nexport function UserDetailsForm({\n                                    open,\n                                    user: userProp,\n                                    handleClose\n                                }: {\n    open: boolean,\n    user?: User,\n    handleClose: () => void\n}) {\n\n    const snackbarController = useSnackbarController();\n    const {\n        user: loggedInUser\n    } = useAuthController();\n    const {\n        saveUser,\n        users,\n        roles,\n    } = useUserManagement();\n    const isNewUser = !userProp;\n\n    const onUserUpdated = useCallback((savedUser: User): Promise<User> => {\n        if (!loggedInUser) {\n            throw new Error(\"Logged user not found\");\n        }\n        try {\n            canUserBeEdited(loggedInUser, savedUser, users, roles, userProp);\n            return saveUser(savedUser);\n        } catch (e: any) {\n            return Promise.reject(e);\n        }\n    }, [roles, saveUser, userProp, users, loggedInUser]);\n\n    const formex = useCreateFormex({\n        initialValues: userProp ?? {\n            displayName: \"\",\n            email: \"\",\n            roles: roles.filter(r => r.id === \"editor\")\n        } as User,\n        validation: (values) => {\n            return UserYupSchema.validate(values, { abortEarly: false })\n                .then(() => {\n                    return {};\n                }).catch((e) => {\n                    return e.inner.reduce((acc: any, error: any) => {\n                        acc[error.path] = error.message;\n                        return acc;\n                    }, {});\n                });\n        },\n        onSubmit: (user: User, formexController) => {\n\n            return onUserUpdated(user)\n                .then(() => {\n                    handleClose();\n                    formexController.resetForm({\n                        values: user\n                    });\n                }).catch((e) => {\n                    snackbarController.open({\n                        type: \"error\",\n                        message: e.message\n                    });\n                });\n        }\n    });\n\n    const {\n        isSubmitting,\n        touched,\n        handleChange,\n        values,\n        errors,\n        setFieldValue,\n        dirty,\n        handleSubmit,\n        submitCount\n    } = formex;\n\n    return (\n        <Dialog\n            open={open}\n            onOpenChange={(open) => !open ? handleClose() : undefined}\n            maxWidth={\"4xl\"}\n        >\n            <Formex value={formex}>\n                <form\n                    onSubmit={handleSubmit}\n                    autoComplete={\"off\"}\n                    noValidate\n                    style={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        position: \"relative\",\n                        height: \"100%\"\n                    }}>\n                    <DialogContent className=\"h-full flex-grow\">\n                        <div\n                            className=\"flex flex-row pt-4 pb-4\">\n                            <Typography variant={\"h4\"}\n                                        className=\"flex-grow\">\n                                User\n                            </Typography>\n                        </div>\n\n                        <div className={\"grid grid-cols-12 gap-8\"}>\n\n                            <div className={\"col-span-12\"}>\n                                <TextField\n                                    name=\"displayName\"\n                                    required\n                                    error={submitCount > 0 && Boolean(errors.displayName)}\n                                    value={values.displayName ?? \"\"}\n                                    onChange={handleChange}\n                                    aria-describedby=\"name-helper-text\"\n                                    label=\"Name\"\n                                />\n                                <FieldCaption>\n                                    {submitCount > 0 && Boolean(errors.displayName) ? errors.displayName : \"Name of this user\"}\n                                </FieldCaption>\n                            </div>\n                            <div className={\"col-span-12\"}>\n                                <TextField\n                                    required\n                                    error={submitCount > 0 && Boolean(errors.email)}\n                                    name=\"email\"\n                                    value={values.email ?? \"\"}\n                                    onChange={handleChange}\n                                    aria-describedby=\"email-helper-text\"\n                                    label=\"Email\"\n                                />\n                                <FieldCaption>\n                                    {submitCount > 0 && Boolean(errors.email) ? errors.email : \"Email of this user\"}\n                                </FieldCaption>\n                            </div>\n                            <div className={\"col-span-12\"}>\n                                <MultiSelect\n                                    label=\"Roles\"\n                                    value={values.roles?.map(r => r.id) ?? []}\n                                    onMultiValueChange={(value: string[]) => setFieldValue(\"roles\", value.map(id => roles.find(r => r.id === id) as Role))}\n                                    renderValue={(value: string) => {\n                                        const userRole = roles\n                                            .find((role) => role.id === value);\n                                        if (!userRole) return null;\n                                        return <div className=\"flex flex-wrap space-x-2 space-y-2\">\n                                            <RoleChip key={userRole?.id} role={userRole}/>\n                                        </div>;\n                                    }}>\n                                    {roles.map(userRole => <MultiSelectItem key={userRole.id}\n                                                                            value={userRole.id}>\n                                        <RoleChip key={userRole?.id} role={userRole}/>\n                                    </MultiSelectItem>)}\n                                </MultiSelect>\n                            </div>\n\n                        </div>\n\n                    </DialogContent>\n\n                    <DialogActions>\n\n                        <Button variant={\"text\"}\n                                onClick={() => {\n                                    handleClose();\n                                }}>\n                            Cancel\n                        </Button>\n\n                        <LoadingButton\n                            variant=\"filled\"\n                            color=\"primary\"\n                            type=\"submit\"\n                            disabled={!dirty}\n                            loading={isSubmitting}\n                            startIcon={<DoneIcon/>}\n                        >\n                            {isNewUser ? \"Create user\" : \"Update\"}\n                        </LoadingButton>\n                    </DialogActions>\n                </form>\n            </Formex>\n\n        </Dialog>\n    );\n}\n","import { useState } from \"react\";\n\nimport { format } from \"date-fns\";\nimport * as locales from \"date-fns/locale\";\n\nimport {\n    defaultDateFormat,\n    DeleteConfirmationDialog, Role,\n    useAuthController,\n    useCustomizationController, User,\n    useSnackbarController\n} from \"@firecms/core\";\nimport {\n    Button,\n    CenteredView,\n    DeleteIcon,\n    IconButton,\n    Table,\n    TableBody,\n    TableCell,\n    TableHeader,\n    TableRow,\n    Tooltip,\n    Typography,\n} from \"@firecms/ui\";\nimport { useUserManagement } from \"../../hooks\";\nimport { RoleChip } from \"../roles\";\nimport { PersistedUser } from \"../../types\";\n\nexport function UsersTable({ onUserClicked }: {\n    onUserClicked: (user: User) => void;\n}) {\n\n    const {\n        users,\n        saveUser,\n        deleteUser\n    } = useUserManagement<PersistedUser>();\n\n    const authController = useAuthController();\n    const snackbarController = useSnackbarController();\n\n    const customizationController = useCustomizationController();\n    const dateUtilsLocale = customizationController?.locale ? locales[customizationController?.locale as keyof typeof locales] : undefined;\n    const dateFormat: string = customizationController?.dateTimeFormat ?? defaultDateFormat;\n\n    const [userToBeDeleted, setUserToBeDeleted] = useState<User | undefined>(undefined);\n    const [deleteInProgress, setDeleteInProgress] = useState<boolean>(false);\n\n    return (\n        <div className=\"overflow-auto\">\n\n            <Table>\n\n                <TableHeader>\n                    <TableCell className=\"truncate w-16\"></TableCell>\n                    <TableCell>ID</TableCell>\n                    <TableCell>Email</TableCell>\n                    <TableCell>Name</TableCell>\n                    <TableCell>Roles</TableCell>\n                    <TableCell>Created on</TableCell>\n                </TableHeader>\n                <TableBody>\n                    {users && users.map((user) => {\n\n                        const userRoles: Role[] | undefined = user.roles;\n\n                        const formattedDate = user.created_on ? format(user.created_on, dateFormat, { locale: dateUtilsLocale }) : \"\";\n\n                        return (\n                            <TableRow\n                                key={\"row_\" + user.uid}\n                                onClick={() => {\n                                    onUserClicked(user);\n                                }}\n                            >\n                                <TableCell className={\"w-10\"}>\n                                    <Tooltip title={\"Delete this user\"}>\n                                        <IconButton\n                                            size={\"small\"}\n                                            onClick={(event) => {\n                                                event.stopPropagation();\n                                                return setUserToBeDeleted(user);\n                                            }}>\n                                            <DeleteIcon/>\n                                        </IconButton>\n                                    </Tooltip>\n                                </TableCell>\n                                <TableCell>{user.uid}</TableCell>\n                                <TableCell>{user.email}</TableCell>\n                                <TableCell className={\"font-medium align-left\"}>{user.displayName}</TableCell>\n                                <TableCell className=\"align-left\">\n                                    {userRoles\n                                        ? <div className=\"flex flex-wrap gap-2\">\n                                            {userRoles.map(userRole =>\n                                                <RoleChip key={userRole?.id} role={userRole}/>\n                                            )}\n                                        </div>\n                                        : null}\n                                </TableCell>\n                                <TableCell>{formattedDate}</TableCell>\n                            </TableRow>\n                        );\n                    })}\n\n                    {(!users || users.length === 0) && <TableRow>\n                        <TableCell colspan={6}>\n                            <CenteredView className={\"flex flex-col gap-4 my-8 items-center\"}>\n                                <Typography variant={\"label\"}>\n                                    There are no users yet\n                                </Typography>\n                                <Button variant={\"outlined\"}\n                                        onClick={() => {\n                                            if (!authController.user?.uid) {\n                                                throw Error(\"UsersTable, authController misconfiguration\");\n                                            }\n                                            saveUser({\n                                                uid: authController.user?.uid,\n                                                email: authController.user?.email,\n                                                displayName: authController.user?.displayName,\n                                                photoURL: authController.user?.photoURL,\n                                                providerId: authController.user?.providerId,\n                                                isAnonymous: authController.user?.isAnonymous,\n                                                roles: [{ id: \"admin\", name: \"Admin\" }],\n                                                created_on: new Date()\n                                            })\n                                                .then(() => {\n                                                    snackbarController.open({\n                                                        type: \"success\",\n                                                        message: \"User added successfully\"\n                                                    })\n                                                })\n                                                .catch((error) => {\n                                                    snackbarController.open({\n                                                        type: \"error\",\n                                                        message: \"Error adding user: \" + error.message,\n                                                    })\n                                                });\n                                        }}>\n\n                                    Add the logged user as an admin\n                                </Button>\n                            </CenteredView>\n                        </TableCell>\n                    </TableRow>}\n\n                </TableBody>\n            </Table>\n\n            <DeleteConfirmationDialog\n                open={Boolean(userToBeDeleted)}\n                loading={deleteInProgress}\n                onAccept={() => {\n                    if (userToBeDeleted) {\n                        setDeleteInProgress(true);\n                        deleteUser(userToBeDeleted)\n                            .then(() => {\n                                setUserToBeDeleted(undefined);\n                            })\n                            .catch((error) => {\n                                snackbarController.open({\n                                    type: \"error\",\n                                    message: \"Error deleting user: \" + error.message,\n                                })\n                            })\n                            .finally(() => {\n                                setDeleteInProgress(false);\n                            })\n                    }\n                }}\n                onCancel={() => {\n                    setUserToBeDeleted(undefined);\n                }}\n                title={<>Delete?</>}\n                body={<>Are you sure you want to delete this user?</>}/>\n        </div>);\n}\n","import { AddIcon, Button, Container, Typography } from \"@firecms/ui\";\n\nimport { UsersTable } from \"./UsersTable\";\nimport { UserDetailsForm } from \"./UserDetailsForm\";\nimport React, { useCallback, useState } from \"react\";\nimport { useUserManagement } from \"../../hooks/useUserManagement\";\nimport { User } from \"@firecms/core\";\n\nexport const UsersView = function UsersView({ children }: { children?: React.ReactNode }) {\n\n    const [dialogOpen, setDialogOpen] = useState<boolean>();\n    const [selectedUser, setSelectedUser] = useState<User | undefined>();\n\n    const { users, usersLimit } = useUserManagement();\n\n    const reachedUsersLimit = usersLimit !== undefined && (users && users.length >= usersLimit);\n\n    const onUserClicked = useCallback((user: User) => {\n        setSelectedUser(user);\n        setDialogOpen(true);\n    }, []);\n\n    const handleClose = useCallback(() => {\n        setDialogOpen(false);\n        setSelectedUser(undefined);\n    }, []);\n\n    return (\n        <Container className=\"w-full flex flex-col py-4 gap-4\" maxWidth={\"6xl\"}>\n\n            {children}\n\n            <div\n                className=\"flex items-center mt-12\">\n                <Typography gutterBottom variant=\"h4\"\n                            className=\"flex-grow\"\n                            component=\"h4\">\n                    Users\n                </Typography>\n                <Button\n                    size={\"large\"}\n                    disabled={reachedUsersLimit}\n                    startIcon={<AddIcon/>}\n                    onClick={() => setDialogOpen(true)}>\n                    Add user\n                </Button>\n            </div>\n\n            <UsersTable onUserClicked={onUserClicked}/>\n\n            <UserDetailsForm\n                key={selectedUser?.uid ?? \"new\"}\n                open={dialogOpen ?? false}\n                user={selectedUser}\n                handleClose={handleClose}/>\n\n        </Container>\n    )\n};\n","import { FireCMSPlugin, useAuthController, useSnackbarController } from \"@firecms/core\";\nimport { UserManagementProvider } from \"./UserManagementProvider\";\nimport { PersistedUser, UserManagement } from \"./types\";\nimport { AddIcon, Button, Paper, Typography } from \"@firecms/ui\";\nimport { DEFAULT_ROLES } from \"./components/roles/default_roles\";\n\nexport function useUserManagementPlugin({ userManagement }: {\n    userManagement: UserManagement,\n}): FireCMSPlugin {\n\n    const noUsers = userManagement.users.length === 0;\n    const noRoles = userManagement.roles.length === 0;\n\n    return {\n        key: \"user_management\",\n        loading: userManagement.loading,\n\n        homePage: {\n            additionalChildrenStart: noUsers || noRoles\n                ? <IntroWidget\n                    noUsers={noUsers}\n                    noRoles={noRoles}\n                    userManagement={userManagement}/>\n                : undefined\n        },\n        provider: {\n            Component: UserManagementProvider,\n            props: {\n                userManagement\n            }\n        }\n    }\n}\n\nexport function IntroWidget({\n                                noUsers,\n                                noRoles,\n                                userManagement\n                            }: {\n    noUsers: boolean;\n    noRoles: boolean;\n    userManagement: UserManagement<PersistedUser>;\n}) {\n\n    const authController = useAuthController();\n    const snackbarController = useSnackbarController();\n\n    const buttonLabel = noUsers && noRoles\n        ? \"Create default roles and add current user as admin\"\n        : noUsers\n            ? \"Add current user as admin\"\n            : noRoles ? \"Create default roles\" : undefined;\n\n    return (\n        <Paper\n            className={\"my-4 flex flex-col px-4 py-6 bg-white dark:bg-slate-800 gap-2\"}>\n            <Typography variant={\"subtitle2\"} className={\"uppercase\"}>Create your users and roles</Typography>\n            <Typography>\n                You have no users or roles defined. You can create default roles and add the current user as admin.\n            </Typography>\n            <Button onClick={() => {\n                if (!authController.user?.uid) {\n                    throw Error(\"UsersTable, authController misconfiguration\");\n                }\n                if (noUsers) {\n                    userManagement.saveUser({\n                        uid: authController.user?.uid,\n                        email: authController.user?.email,\n                        displayName: authController.user?.displayName,\n                        photoURL: authController.user?.photoURL,\n                        providerId: authController.user?.providerId,\n                        isAnonymous: authController.user?.isAnonymous,\n                        roles: [{\n                            id: \"admin\",\n                            name: \"Admin\"\n                        }],\n                        created_on: new Date()\n                    })\n                        .then(() => {\n                            snackbarController.open({\n                                type: \"success\",\n                                message: \"User added successfully\"\n                            })\n                        })\n                        .catch((error) => {\n                            snackbarController.open({\n                                type: \"error\",\n                                message: \"Error adding user: \" + error.message\n                            })\n                        });\n                }\n                if (noRoles) {\n                    DEFAULT_ROLES.forEach((role) => {\n                        userManagement.saveRole(role);\n                    });\n                }\n            }}>\n                <AddIcon/>\n                {buttonLabel}\n            </Button>\n        </Paper>\n    );\n\n}\n","import { CMSView } from \"@firecms/core\";\nimport { RolesView, UsersView } from \"./components\";\n\nexport const userManagementAdminViews: CMSView[] = [\n    {\n        path: \"users\",\n        name: \"CMS Users\",\n        group: \"Admin\",\n        icon: \"face\",\n        view: <UsersView/>\n    },\n    {\n        path: \"roles\",\n        name: \"Roles\",\n        group: \"Admin\",\n        icon: \"gpp_good\",\n        view: <RolesView/>\n    }\n]\n"],"names":["RESERVED_GROUPS","DEFAULT_PERMISSIONS","resolveUserRolePermissions","collection","user","roles","basePermissions","role","resolveCollectionRole","mergePermissions","id","permA","permB","getUserRoles","fireCMSUser","r","areRolesEqual","rolesA","rolesB","rolesAIds","rolesBIds","cacheDelegatedLoginToken","projectId","delegatedToken","data","parseJwt","expiry","getDelegatedLoginTokenFromCache","entry","clearDelegatedLoginTokensCache","i","key","token","base64","jsonPayload","c","darkenColor","hexColor","darkenBy","color","g","b","hexToRgbaWithOpacity","opacity","alpha","useFirestoreUserManagement","firebaseApp","usersPath","rolesPath","usersLimit","canEditRoles","allowDefaultRolesCreation","includeCollectionConfigPermissions","rolesLoading","setRolesLoading","React","usersLoading","setUsersLoading","setRoles","usersWithRoleIds","setUsersWithRoleIds","users","u","rolesError","setRolesError","usersError","setUsersError","loading","useEffect","firestore","getFirestore","onSnapshot","snapshot","newRoles","docsToRoles","e","newUsers","docsToUsers","saveUser","useCallback","roleIds","uid","userData","setDoc","doc","addDoc","saveRole","roleData","ref","deleteUser","deleteDoc","deleteRole","collectionPermissions","defineRolesFor","authenticator","docs","UserManagementContext","UserManagementProvider","children","userManagement","useUserManagement","useContext","RoleChip","colorScheme","getColorSchemeForSeed","jsx","Chip","RoleYupSchema","Yup","RolesDetailsForm","open","editable","handleClose","collections","isNewRole","savingError","setSavingError","useState","onRoleUpdated","formex","useCreateFormex","formexController","values","errors","error","isSubmitting","touched","handleChange","setFieldValue","dirty","setFieldTouched","isAdmin","defaultCreate","defaultRead","defaultEdit","defaultDelete","getIn","toSnakeCase","Dialog","Formex","jsxs","DialogContent","Typography","TextField","FieldCaption","Paper","Table","TableHeader","TableCell","TableBody","TableRow","Tooltip","Checkbox","checked","col","Select","event","value","SelectItem","DialogActions","Button","LoadingButton","DoneIcon","DEFAULT_ROLES","RolesTable","onRoleClicked","roleToBeDeleted","setRoleToBeDeleted","deleteInProgress","setDeleteInProgress","canCreateAll","canReadAll","canUpdateAll","canDeleteAll","IconButton","DeleteIcon","CenteredView","DeleteConfirmationDialog","RolesView","useNavigationController","dialogOpen","setDialogOpen","selectedRole","setSelectedRole","Container","AddIcon","UserYupSchema","canUserBeEdited","loggedUser","prevUser","admins","loggedUserIsAdmin","UserDetailsForm","userProp","snackbarController","useSnackbarController","loggedInUser","useAuthController","isNewUser","onUserUpdated","savedUser","acc","handleSubmit","submitCount","MultiSelect","userRole","MultiSelectItem","UsersTable","onUserClicked","authController","customizationController","useCustomizationController","dateUtilsLocale","locales","dateFormat","defaultDateFormat","userToBeDeleted","setUserToBeDeleted","userRoles","formattedDate","format","UsersView","selectedUser","setSelectedUser","reachedUsersLimit","useUserManagementPlugin","noUsers","noRoles","IntroWidget","userManagementAdminViews"],"mappings":"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"}