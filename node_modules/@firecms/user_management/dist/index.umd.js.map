{"version":3,"file":"index.umd.js","sources":["../src/utils/permissions.ts","../src/utils/local_storage.ts","../src/utils/colors.ts","../src/hooks/useFirestoreUserManagement.tsx","../src/UserManagementProvider.tsx","../src/hooks/useUserManagement.tsx","../src/components/roles/RoleChip.tsx","../src/components/roles/RolesDetailsForm.tsx","../src/components/roles/default_roles.tsx","../src/components/roles/RolesTable.tsx","../src/components/roles/RolesView.tsx","../src/components/users/UserDetailsForm.tsx","../src/components/users/UsersTable.tsx","../src/components/users/UsersView.tsx","../src/useUserManagementPlugin.tsx","../src/admin_views.tsx"],"sourcesContent":["import { EntityCollection, Permissions, Role, User } from \"@firecms/core\";\n\nexport const RESERVED_GROUPS = [\"Admin\"];\n\nconst DEFAULT_PERMISSIONS = {\n    read: false,\n    edit: false,\n    create: false,\n    delete: false\n};\n\nexport function resolveUserRolePermissions<UserType extends User>\n({\n     collection,\n     user\n }: {\n    collection: EntityCollection<any>,\n    user: UserType | null\n}): Permissions {\n\n    const roles = user?.roles;\n    if (!roles) {\n        return DEFAULT_PERMISSIONS;\n    } else if (collection.ownerId === user?.uid) {\n        return {\n            read: true,\n            create: true,\n            edit: true,\n            delete: true\n        };\n    } else {\n        const basePermissions = {\n            read: false,\n            create: false,\n            edit: false,\n            delete: false\n        };\n\n        return roles\n            .map(role => resolveCollectionRole(role, collection.id))\n            .reduce(mergePermissions, basePermissions);\n    }\n}\n\nfunction resolveCollectionRole(role: Role, id: string): Permissions {\n\n    const basePermissions = {\n        read: role.isAdmin || role.defaultPermissions?.read,\n        create: role.isAdmin || role.defaultPermissions?.create,\n        edit: role.isAdmin || role.defaultPermissions?.edit,\n        delete: role.isAdmin || role.defaultPermissions?.delete\n    };\n    if (role.collectionPermissions && role.collectionPermissions[id]) {\n        return mergePermissions(role.collectionPermissions[id], basePermissions);\n    } else if (role.defaultPermissions) {\n        return mergePermissions(role.defaultPermissions, basePermissions);\n    } else {\n        return basePermissions;\n    }\n}\n\nconst mergePermissions = (permA: Permissions, permB: Permissions) => {\n    return {\n        read: permA.read || permB.read,\n        create: permA.create || permB.create,\n        edit: permA.edit || permB.edit,\n        delete: permA.delete || permB.delete\n    };\n}\n\nexport function getUserRoles(roles: Role[], fireCMSUser: User): Role[] | undefined {\n    return !roles\n        ? undefined\n        : (fireCMSUser.roles\n            ? fireCMSUser.roles\n                .map(role => roles.find((r) => r.id === role.id))\n                .filter(Boolean) as Role[]\n            : []);\n}\n\nexport const areRolesEqual = (rolesA: Role[], rolesB: Role[]) => {\n    const rolesAIds = rolesA.map(r => r.id);\n    const rolesBIds = rolesB.map(r => r.id);\n    return rolesAIds.length === rolesB.length && rolesAIds.every((role) => rolesBIds.includes(role));\n}\n","// const tokens = new Map<string, {\n//     token: string,\n//     expiry: Date\n// }>();\n\nexport function cacheDelegatedLoginToken(projectId: string, delegatedToken?: string) {\n    if (!delegatedToken) {\n        return;\n    }\n\n    const data = parseJwt(delegatedToken);\n    // @ts-ignore\n    const expiry = new Date(data.exp * 1000);\n    localStorage.setItem(`auth_token::${projectId}`, JSON.stringify({\n        token: delegatedToken,\n        expiry\n    }));\n\n}\n\nexport function getDelegatedLoginTokenFromCache(projectId: string) {\n    const entry = localStorage.getItem(`auth_token::${projectId}`);\n    if (entry) {\n        const data = JSON.parse(entry);\n        data.expiry = new Date(data.expiry);\n        if (data.expiry > new Date()) {\n            return data.token;\n        }\n    }\n    return undefined;\n}\n\nexport function clearDelegatedLoginTokensCache() {\n    for (let i = 0; i < localStorage.length; i++) {\n        const key = localStorage.key(i);\n        if (key?.startsWith(\"auth_token::\")) {\n            localStorage.removeItem(key);\n        }\n    }\n}\n\nfunction parseJwt(token?: string): object {\n    if (!token) {\n        throw new Error(\"No JWT token\");\n    }\n    const base64Url = token.split(\".\")[1];\n    const base64 = base64Url.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    const jsonPayload = decodeURIComponent(window.atob(base64).split(\"\").map(function (c) {\n        return \"%\" + (\"00\" + c.charCodeAt(0).toString(16)).slice(-2);\n    }).join(\"\"));\n\n    return JSON.parse(jsonPayload);\n}\n","export function darkenColor(hexColor: string, darkenBy = 10): string {\n    // Check input validity\n    if (!/^#([0-9A-Fa-f]{3}){1,2}$/.test(hexColor)) {\n        throw new Error(\"Invalid color format\");\n    }\n\n    // If shorthand form, convert to full form\n    let color = hexColor.substring(1).split(\"\");\n    if (color.length === 3) {\n        color = [color[0], color[0], color[1], color[1], color[2], color[2]];\n    }\n\n    // Convert to RGB values\n    let r = parseInt(color[0] + color[1], 16);\n    let g = parseInt(color[2] + color[3], 16);\n    let b = parseInt(color[4] + color[5], 16);\n\n    // Reduce each color component by the specified percentage (darkenBy)\n    r = Math.floor(r * (1 - darkenBy / 100));\n    g = Math.floor(g * (1 - darkenBy / 100));\n    b = Math.floor(b * (1 - darkenBy / 100));\n\n    // Recombine into hex and return\n    return \"#\" +\n        (r < 16 ? \"0\" : \"\") + r.toString(16) +\n        (g < 16 ? \"0\" : \"\") + g.toString(16) +\n        (b < 16 ? \"0\" : \"\") + b.toString(16);\n}\n\nexport function hexToRgbaWithOpacity(hexColor: string, opacity = 10): string {\n    // Check input validity\n    if (!/^#([0-9A-Fa-f]{3}){1,2}$/.test(hexColor)) {\n        throw new Error(\"Invalid color format\");\n    }\n\n    // If shorthand form, convert to full form\n    let color = hexColor.substring(1).split(\"\");\n    if (color.length === 3) {\n        color = [color[0], color[0], color[1], color[1], color[2], color[2]];\n    }\n\n    // Convert to RGB values\n    const r = parseInt(color[0] + color[1], 16);\n    const g = parseInt(color[2] + color[3], 16);\n    const b = parseInt(color[4] + color[5], 16);\n\n    // Convert opacity to a decimal for CSS\n    const alpha = opacity / 100;\n\n    // Construct and return the RGBA color\n    return `rgba(${r}, ${g}, ${b}, ${alpha})`;\n}\n","import React, { useCallback, useEffect } from \"react\";\nimport {\n    addDoc,\n    collection,\n    deleteDoc,\n    doc,\n    DocumentSnapshot,\n    getFirestore,\n    onSnapshot,\n    setDoc\n} from \"firebase/firestore\";\nimport { FirebaseApp } from \"firebase/app\";\nimport { UserManagement } from \"../types\";\nimport { Authenticator, PermissionsBuilder, Role, User } from \"@firecms/core\";\nimport { resolveUserRolePermissions } from \"../utils\";\n\ntype UserWithRoleIds = User & { roles: string[] };\n\nexport interface UserManagementParams {\n    /**\n     * The Firebase app to use for the user management. The config will be saved in the Firestore\n     * collection indicated by `configPath`.\n     */\n    firebaseApp?: FirebaseApp;\n    /**\n     * Path where the plugin users configuration is stored.\n     * Default: __FIRECMS/config/users\n     * You can specify a different path if you want to store the user management configuration in a different place.\n     * Please keep in mind that the FireCMS users are not necessarily the same as the Firebase users (but they can be).\n     * The path should be relative to the root of the Firestore database, and should always have an odd number of segments.\n     */\n    usersPath?: string;\n\n    /**\n     * Path where the plugin roles configuration is stored.\n     * Default: __FIRECMS/config/roles\n     */\n    rolesPath?: string;\n\n    /**\n     * Maximum number of users that can be created.\n     */\n    usersLimit?: number;\n\n    /**\n     * Can the logged user edit roles\n     */\n    canEditRoles?: boolean;\n\n    /**\n     * If there are no roles in the database, provide a button to create the default roles.\n     */\n    allowDefaultRolesCreation?: boolean;\n\n    /**\n     * Include the collection config permissions in the user management system.\n     */\n    includeCollectionConfigPermissions?: boolean;\n\n}\n\n/**\n * This hook is used to build a user management object that can be used to\n * manage users and roles in a Firestore backend.\n * @param backendFirebaseApp\n * @param usersPath\n * @param rolesPath\n * @param usersLimit\n * @param canEditRoles\n */\nexport function useFirestoreUserManagement({\n                                               firebaseApp,\n                                               usersPath = \"__FIRECMS/config/users\",\n                                               rolesPath = \"__FIRECMS/config/roles\",\n                                               usersLimit,\n                                               canEditRoles = true,\n                                               allowDefaultRolesCreation,\n                                               includeCollectionConfigPermissions\n                                           }: UserManagementParams): UserManagement {\n\n    const [rolesLoading, setRolesLoading] = React.useState<boolean>(true);\n    const [usersLoading, setUsersLoading] = React.useState<boolean>(true);\n    const [roles, setRoles] = React.useState<Role[]>([]);\n    const [usersWithRoleIds, setUsersWithRoleIds] = React.useState<UserWithRoleIds[]>([]);\n\n    const users = usersWithRoleIds.map(u => ({\n        ...u,\n        roles: roles.filter(r => u.roles?.includes(r.id))\n    }) as User);\n\n    const [rolesError, setRolesError] = React.useState<Error | undefined>();\n    const [usersError, setUsersError] = React.useState<Error | undefined>();\n\n    const loading = rolesLoading || usersLoading;\n\n    useEffect(() => {\n        if (!firebaseApp || !rolesPath) return;\n        const firestore = getFirestore(firebaseApp);\n\n        return onSnapshot(collection(firestore, rolesPath),\n            {\n                next: (snapshot) => {\n                    setRolesError(undefined);\n                    try {\n                        const newRoles = docsToRoles(snapshot.docs);\n                        setRoles(newRoles);\n                    } catch (e) {\n                        console.error(\"Error loading roles\", e);\n                        setRolesError(e as Error);\n                    }\n                    setRolesLoading(false);\n                },\n                error: (e) => {\n                    console.error(\"Error loading roles\", e);\n                    setRolesError(e);\n                    setRolesLoading(false);\n                }\n            }\n        );\n    }, [firebaseApp, rolesPath]);\n\n    useEffect(() => {\n        if (!firebaseApp || !usersPath) return;\n        const firestore = getFirestore(firebaseApp);\n\n        return onSnapshot(collection(firestore, usersPath),\n            {\n                next: (snapshot) => {\n                    setUsersError(undefined);\n                    try {\n                        const newUsers = docsToUsers(snapshot.docs);\n                        setUsersWithRoleIds(newUsers);\n                    } catch (e) {\n                        console.error(\"Error loading users\", e);\n                        setUsersError(e as Error);\n                    }\n                    setUsersLoading(false);\n                },\n                error: (e) => {\n                    console.error(\"Error loading users\", e);\n                    setUsersError(e);\n                    setUsersLoading(false);\n                }\n            }\n        );\n    }, [firebaseApp, usersPath]);\n\n    const saveUser = useCallback(async (user: User): Promise<User> => {\n        if (!firebaseApp) throw Error(\"useFirestoreUserManagement Firebase not initialised\");\n        const firestore = getFirestore(firebaseApp);\n        if (!firestore || !usersPath) throw Error(\"useFirestoreUserManagement Firestore not initialised\");\n        console.debug(\"Persisting user\", user);\n        const roleIds = user.roles?.map(r => r.id);\n        const {\n            uid,\n            ...userData\n        } = user;\n        const data = {\n            ...userData,\n            roles: roleIds\n        };\n        if (uid) {\n            return setDoc(doc(firestore, usersPath, uid), data, { merge: true }).then(() => user);\n        } else {\n            return addDoc(collection(firestore, usersPath), data).then(() => user);\n        }\n    }, [usersPath, firebaseApp]);\n\n    const saveRole = useCallback((role: Role): Promise<void> => {\n        if (!firebaseApp) throw Error(\"useFirestoreUserManagement Firebase not initialised\");\n        const firestore = getFirestore(firebaseApp);\n        if (!firestore || !rolesPath) throw Error(\"useFirestoreUserManagement Firestore not initialised\");\n        console.debug(\"Persisting role\", role);\n        const {\n            id,\n            ...roleData\n        } = role;\n        const ref = doc(firestore, rolesPath, id);\n        return setDoc(ref, roleData, { merge: true });\n    }, [rolesPath, firebaseApp]);\n\n    const deleteUser = useCallback(async (user: User): Promise<void> => {\n        if (!firebaseApp) throw Error(\"useFirestoreUserManagement Firebase not initialised\");\n        const firestore = getFirestore(firebaseApp);\n        if (!firestore || !usersPath) throw Error(\"useFirestoreUserManagement Firestore not initialised\");\n        console.debug(\"Deleting\", user);\n        const { uid } = user;\n        return deleteDoc(doc(firestore, usersPath, uid));\n    }, [usersPath, firebaseApp]);\n\n    const deleteRole = useCallback((role: Role): Promise<void> => {\n        if (!firebaseApp) throw Error(\"useFirestoreUserManagement Firebase not initialised\");\n        const firestore = getFirestore(firebaseApp);\n        if (!firestore || !rolesPath) throw Error(\"useFirestoreUserManagement Firestore not initialised\");\n        console.debug(\"Deleting\", role);\n        const { id } = role;\n        const ref = doc(firestore, rolesPath, id);\n        return deleteDoc(ref);\n    }, [rolesPath, firebaseApp]);\n\n    const collectionPermissions: PermissionsBuilder = useCallback(({\n                                                                       collection,\n                                                                       user\n                                                                   }) => resolveUserRolePermissions({\n        collection,\n        user\n    }), []);\n\n    const defineRolesFor: ((user: User) => Role[] | undefined) = useCallback((user) => {\n        if (!users) throw Error(\"Users not loaded\");\n        const mgmtUser = users.find(u => u.email?.toLowerCase() === user?.email?.toLowerCase());\n        return mgmtUser?.roles;\n    }, [users]);\n\n    const authenticator: Authenticator = useCallback(({ user }) => {\n        console.debug(\"Authenticating user\", user);\n\n        if (loading) {\n            console.warn(\"User management is still loading\");\n            return false;\n        }\n\n        // This is an example of how you can link the access system to the user management plugin\n        if (users.length === 0) {\n            return true; // If there are no users created yet, we allow access to every user\n        }\n\n        const mgmtUser = users.find(u => u.email?.toLowerCase() === user?.email?.toLowerCase());\n        if (mgmtUser) {\n            return true;\n        }\n\n        throw Error(\"Could not find a user with the provided email in the user management system.\");\n    }, [loading, users])\n\n    return {\n        loading,\n        roles,\n        users,\n        saveUser,\n        saveRole,\n        rolesError,\n        deleteUser,\n        deleteRole,\n        usersLimit,\n        usersError,\n        canEditRoles: canEditRoles === undefined ? true : canEditRoles,\n        allowDefaultRolesCreation: allowDefaultRolesCreation === undefined ? true : allowDefaultRolesCreation,\n        includeCollectionConfigPermissions: Boolean(includeCollectionConfigPermissions),\n        collectionPermissions,\n        defineRolesFor,\n        authenticator\n    }\n}\n\nconst docsToUsers = (docs: DocumentSnapshot[]): (UserWithRoleIds)[] => {\n    return docs.map((doc) => {\n        const data = doc.data() as any;\n        const newVar = {\n            uid: doc.id,\n            ...data,\n            created_on: data?.created_on?.toDate(),\n            updated_on: data?.updated_on?.toDate()\n        };\n        return newVar as (UserWithRoleIds);\n    });\n}\n\nconst docsToRoles = (docs: DocumentSnapshot[]): Role[] => {\n    return docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data()\n    } as Role));\n}\n","import React, { PropsWithChildren } from \"react\";\nimport { UserManagement } from \"./types\";\nimport { User } from \"@firecms/core\";\n\nexport const UserManagementContext = React.createContext<UserManagement<any>>({} as any);\n\nexport interface UserManagementProviderProps<U extends User = User> {\n    userManagement: UserManagement<U>\n}\n\nexport function UserManagementProvider<U extends User = User>({\n                                           children,\n                                           userManagement\n                                       }: PropsWithChildren<UserManagementProviderProps<U>>) {\n    return (\n        <UserManagementContext.Provider value={userManagement}>\n            {children}\n        </UserManagementContext.Provider>\n    );\n};\n","import { useContext } from \"react\";\nimport { UserManagement } from \"../types\";\nimport { UserManagementContext } from \"../UserManagementProvider\";\nimport { User } from \"@firecms/core\";\nexport const useUserManagement = <USER extends User>() => useContext<UserManagement<USER>>(UserManagementContext);\n","import { Chip, getColorSchemeForSeed } from \"@firecms/ui\";\nimport { Role } from \"@firecms/core\";\n\nexport type RoleChipProps = {\n    role: Role;\n}\n\nexport function RoleChip({ role }: RoleChipProps) {\n    let colorScheme;\n    if (role.isAdmin) {\n        colorScheme = \"blueDarker\";\n    } else if (role.id === \"editor\") {\n        colorScheme = \"yellowLight\";\n    } else if (role.id === \"viewer\") {\n        colorScheme = \"grayLight\";\n    } else {\n        colorScheme = getColorSchemeForSeed(role.id);\n    }\n\n    return (\n        <Chip\n            colorScheme={colorScheme}\n            key={role.id}>\n            {role.name}\n        </Chip>\n    );\n\n}\n","import React, { useCallback, useState } from \"react\";\nimport * as Yup from \"yup\";\n\nimport { EntityCollection, FieldCaption, Role, toSnakeCase, } from \"@firecms/core\";\nimport {\n    Button,\n    Checkbox,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DoneIcon,\n    LoadingButton,\n    Paper,\n    Select,\n    SelectItem,\n    Table,\n    TableBody,\n    TableCell,\n    TableHeader,\n    TableRow,\n    TextField,\n    Tooltip,\n    Typography\n} from \"@firecms/ui\";\nimport { useUserManagement } from \"../../hooks\";\nimport { Formex, getIn, useCreateFormex } from \"@firecms/formex\";\n\nexport const RoleYupSchema = Yup.object().shape({\n    id: Yup.string().required(\"Required\"),\n    name: Yup.string().required(\"Required\")\n});\n\nexport function RolesDetailsForm({\n                                     open,\n                                     role,\n                                     editable,\n                                     handleClose,\n                                     collections\n                                 }: {\n    open: boolean,\n    editable?: boolean,\n    role?: Role,\n    handleClose: () => void,\n    collections?: EntityCollection[]\n}) {\n\n    const { saveRole } = useUserManagement();\n    const isNewRole = !role;\n\n    const [savingError, setSavingError] = useState<Error | undefined>();\n\n    const onRoleUpdated = useCallback((role: Role) => {\n        setSavingError(undefined);\n        return saveRole(role);\n    }, [saveRole]);\n\n    const formex = useCreateFormex({\n        initialValues: role ?? {\n            name: \"\"\n        } as Role,\n        onSubmit: (role: Role, formexController) => {\n            return onRoleUpdated(role)\n                .then(() => {\n                    formexController.resetForm({\n                        values: role\n                    });\n                    handleClose();\n                })\n                .catch(e => setSavingError(e));\n        },\n        validation: (values) => {\n            return RoleYupSchema.validate(values, { abortEarly: false })\n                .then(() => ({}))\n                .catch((e) => {\n                    const errors: Record<string, string> = {};\n                    e.inner.forEach((error: any) => {\n                        errors[error.path] = error.message;\n                    });\n                    return errors;\n                });\n        }\n\n    });\n\n    const {\n        isSubmitting,\n        touched,\n        values,\n        errors,\n        handleChange,\n        setFieldValue,\n        dirty,\n        setFieldTouched\n    } = formex;\n\n    const isAdmin = values.isAdmin ?? false;\n    const defaultCreate = values.defaultPermissions?.create ?? false;\n    const defaultRead = values.defaultPermissions?.read ?? false;\n    const defaultEdit = values.defaultPermissions?.edit ?? false;\n    const defaultDelete = values.defaultPermissions?.delete ?? false;\n\n    React.useEffect(() => {\n        const idTouched = getIn(touched, \"id\");\n        if (!idTouched && values.name) {\n            setFieldValue(\"id\", toSnakeCase(values.name))\n        }\n    }, [touched, values.name]);\n\n    return (\n        <Dialog\n            open={open}\n            maxWidth={\"4xl\"}\n        >\n            <Formex value={formex}>\n                <form noValidate\n                      autoComplete={\"off\"}\n                      onSubmit={formex.handleSubmit}\n                      style={{\n                          display: \"flex\",\n                          flexDirection: \"column\",\n                          position: \"relative\",\n                          height: \"100%\"\n                      }}>\n                    <DialogContent className=\"flex-grow\">\n                        <div\n                            className=\"flex flex-row pt-12 pb-8\">\n                            <Typography variant={\"h4\"}\n                                        className=\"flex-grow\">\n                                Role\n                            </Typography>\n                        </div>\n\n                        <div className={\"grid grid-cols-12 gap-8\"}>\n\n                            <div className={\"col-span-12 md:col-span-8\"}>\n                                <TextField\n                                    name=\"name\"\n                                    required\n                                    error={touched.name && Boolean(errors.name)}\n                                    value={values.name}\n                                    disabled={isAdmin || !editable}\n                                    onChange={handleChange}\n                                    aria-describedby=\"name-helper-text\"\n                                    label=\"Name\"\n                                />\n                                <FieldCaption>\n                                    {touched.name && Boolean(errors.name) ? errors.name : \"Name of this role\"}\n                                </FieldCaption>\n                            </div>\n\n                            <div className={\"col-span-12 md:col-span-4\"}>\n                                <TextField\n                                    name=\"id\"\n                                    required\n                                    error={touched.id && Boolean(errors.id)}\n                                    value={values.id}\n                                    disabled={!isNewRole || !editable}\n                                    onChange={(e) => {\n                                        handleChange(e);\n                                        setFieldTouched(\"id\", true)\n                                    }}\n                                    aria-describedby=\"id-helper-text\"\n                                    label=\"ID\"\n                                />\n                                <FieldCaption>\n                                    {touched.id && Boolean(errors.id) ? errors.id : \"ID of this role\"}\n                                </FieldCaption>\n                            </div>\n\n                            <div className={\"col-span-12\"}>\n                                <Paper\n\n                                    className=\"bg-inherit\">\n                                    <Table>\n                                        <TableHeader>\n                                            <TableCell></TableCell>\n                                            <TableCell\n                                                align=\"center\">Create\n                                                entities\n                                            </TableCell>\n                                            <TableCell\n                                                align=\"center\">Read\n                                                entities\n                                            </TableCell>\n                                            <TableCell\n                                                align=\"center\">Update\n                                                entities\n                                            </TableCell>\n                                            <TableCell\n                                                align=\"center\">Delete\n                                                entities\n                                            </TableCell>\n                                        </TableHeader>\n\n                                        <TableBody>\n                                            <TableRow>\n                                                <TableCell\n                                                    scope=\"row\">\n                                                    <strong>All\n                                                        collections</strong>\n                                                </TableCell>\n                                                <TableCell\n                                                    align=\"center\">\n                                                    <Tooltip\n                                                        title=\"Create entities in collections\">\n                                                        <Checkbox\n                                                            disabled={isAdmin || !editable}\n                                                            checked={(isAdmin || defaultCreate) ?? false}\n                                                            onCheckedChange={(checked) => setFieldValue(\"defaultPermissions.create\", checked)}\n                                                        />\n                                                    </Tooltip>\n                                                </TableCell>\n\n                                                <TableCell\n                                                    align=\"center\">\n                                                    <Tooltip\n                                                        title=\"Access all data in every collection\">\n                                                        <Checkbox\n                                                            disabled={isAdmin || !editable}\n                                                            checked={(isAdmin || defaultRead) ?? false}\n                                                            onCheckedChange={(checked) => setFieldValue(\"defaultPermissions.read\", checked)}\n                                                        />\n                                                    </Tooltip>\n                                                </TableCell>\n                                                <TableCell\n                                                    align=\"center\">\n                                                    <Tooltip\n                                                        title=\"Update data in any collection\">\n                                                        <Checkbox\n                                                            disabled={isAdmin || !editable}\n                                                            checked={(isAdmin || defaultEdit) ?? false}\n                                                            onCheckedChange={(checked) => setFieldValue(\"defaultPermissions.edit\", checked)}\n                                                        />\n                                                    </Tooltip>\n                                                </TableCell>\n                                                <TableCell\n                                                    align=\"center\">\n                                                    <Tooltip\n                                                        title=\"Delete data in any collection\">\n                                                        <Checkbox\n                                                            disabled={isAdmin || !editable}\n                                                            checked={(isAdmin || defaultDelete) ?? false}\n                                                            onCheckedChange={(checked) => setFieldValue(\"defaultPermissions.delete\", checked)}\n                                                        />\n\n                                                    </Tooltip>\n                                                </TableCell>\n                                            </TableRow>\n                                            {collections && collections.map((col) => (\n                                                <TableRow key={col.name}>\n                                                    <TableCell\n                                                        scope=\"row\">\n                                                        {col.name}\n                                                    </TableCell>\n                                                    <TableCell\n                                                        align=\"center\">\n                                                        <Checkbox\n                                                            disabled={isAdmin || defaultCreate || !editable}\n                                                            checked={(isAdmin || defaultCreate || getIn(values, `collectionPermissions.${col.path}.create`)) ?? false}\n                                                            onCheckedChange={(checked) => setFieldValue(`collectionPermissions.${col.path}.create`, checked)}/>\n                                                    </TableCell>\n                                                    <TableCell\n                                                        align=\"center\">\n                                                        <Checkbox\n                                                            disabled={isAdmin || defaultRead || !editable}\n                                                            checked={(isAdmin || defaultRead || getIn(values, `collectionPermissions.${col.path}.read`)) ?? false}\n                                                            onCheckedChange={(checked) => setFieldValue(`collectionPermissions.${col.path}.read`, checked)}/>\n                                                    </TableCell>\n                                                    <TableCell\n                                                        align=\"center\">\n                                                        <Checkbox\n                                                            disabled={isAdmin || defaultEdit || !editable}\n                                                            checked={(isAdmin || defaultEdit || getIn(values, `collectionPermissions.${col.path}.edit`)) ?? false}\n                                                            onCheckedChange={(checked) => setFieldValue(`collectionPermissions.${col.path}.edit`, checked)}/>\n                                                    </TableCell>\n                                                    <TableCell\n                                                        align=\"center\">\n                                                        <Checkbox\n                                                            disabled={isAdmin || defaultDelete || !editable}\n                                                            checked={(isAdmin || defaultDelete || getIn(values, `collectionPermissions.${col.path}.delete`)) ?? false}\n                                                            onCheckedChange={(checked) => setFieldValue(`collectionPermissions.${col.path}.delete`, checked)}/>\n                                                    </TableCell>\n                                                </TableRow>\n                                            ))}\n                                        </TableBody>\n                                    </Table>\n                                </Paper>\n                                <FieldCaption>\n                                    You can customise the permissions\n                                    that the users related to this\n                                    role can perform in the entities\n                                    of each collection\n                                </FieldCaption>\n                            </div>\n\n                            <div className={\"col-span-12 md:col-span-4\"}>\n                                <Select\n                                    error={touched.config && Boolean(errors.config)}\n                                    id=\"createCollections\"\n                                    name=\"createCollections\"\n                                    label=\"Create collections\"\n                                    position={\"item-aligned\"}\n                                    disabled={isAdmin || !editable}\n                                    onChange={(event) => setFieldValue(\"config.createCollections\", event.target.value === \"true\")}\n                                    value={isAdmin || values.config?.createCollections ? \"true\" : \"false\"}\n                                    renderValue={(value: any) => value === \"true\" ? \"Yes\" : \"No\"}\n                                >\n                                    <SelectItem\n                                        value={\"true\"}> Yes </SelectItem>\n                                    <SelectItem\n                                        value={\"false\"}> No </SelectItem>\n                                </Select>\n\n                                <FieldCaption>\n                                    {touched.config && Boolean(errors.config) ? errors.config : \"Can the user create collections\"}\n                                </FieldCaption>\n                            </div>\n\n                            <div className={\"col-span-12 md:col-span-4\"}>\n                                <Select\n                                    error={touched.config && Boolean(errors.config)}\n                                    id=\"editCollections\"\n                                    name=\"editCollections\"\n                                    label=\"Edit collections\"\n                                    disabled={isAdmin || !editable}\n                                    position={\"item-aligned\"}\n                                    onChange={(event) => setFieldValue(\"config.editCollections\", event.target.value === \"own\" ? \"own\" : event.target.value === \"true\")}\n                                    value={isAdmin ? \"true\" : (values.config?.editCollections === \"own\" ? \"own\" : (values.config?.editCollections ? \"true\" : \"false\"))}\n                                    renderValue={(value: any) => value === \"own\" ? \"Own\" : (value === \"true\" ? \"Yes\" : \"No\")}\n                                >\n                                    <SelectItem\n                                        value={\"true\"}> Yes </SelectItem>\n                                    <SelectItem\n                                        value={\"false\"}> No </SelectItem>\n                                    <SelectItem\n                                        value={\"own\"}> Only\n                                        his/her own </SelectItem>\n                                </Select>\n\n                                <FieldCaption>\n                                    {touched.config && Boolean(errors.config) ? errors.config : \"Can the user edit collections\"}\n                                </FieldCaption>\n                            </div>\n\n                            <div className={\"col-span-12 md:col-span-4\"}>\n                                <Select\n                                    error={touched.config && Boolean(errors.config)}\n                                    id=\"deleteCollections\"\n                                    name=\"deleteCollections\"\n                                    label=\"Delete collections\"\n                                    disabled={isAdmin || !editable}\n                                    position={\"item-aligned\"}\n                                    onChange={(event) => setFieldValue(\"config.deleteCollections\", event.target.value === \"own\" ? \"own\" : event.target.value === \"true\")}\n                                    value={isAdmin ? \"true\" : (values.config?.deleteCollections === \"own\" ? \"own\" : (values.config?.deleteCollections ? \"true\" : \"false\"))}\n                                    renderValue={(value: any) => value === \"own\" ? \"Own\" : (value === \"true\" ? \"Yes\" : \"No\")}\n                                >\n                                    <SelectItem\n                                        value={\"true\"}> Yes </SelectItem>\n                                    <SelectItem\n                                        value={\"false\"}> No </SelectItem>\n                                    <SelectItem\n                                        value={\"own\"}> Only\n                                        his/her own </SelectItem>\n                                </Select>\n\n                                <FieldCaption>\n                                    {touched.config && Boolean(errors.config) ? errors.config : \"Can the user delete collections\"}\n                                </FieldCaption>\n\n                            </div>\n\n                        </div>\n                    </DialogContent>\n\n                    <DialogActions position={\"sticky\"}>\n                        {savingError && <Typography className={\"text-red-500\"}>\n                            There was an error saving this role\n                        </Typography>}\n                        <Button variant={\"text\"}\n                                onClick={() => {\n                                    handleClose();\n                                }}>\n                            Cancel\n                        </Button>\n                        <LoadingButton\n                            variant=\"filled\"\n                            color=\"primary\"\n                            type=\"submit\"\n                            disabled={!dirty}\n                            loading={isSubmitting}\n                            startIcon={<DoneIcon/>}\n                        >\n                            {isNewRole ? \"Create role\" : \"Update\"}\n                        </LoadingButton>\n                    </DialogActions>\n                </form>\n\n            </Formex>\n        </Dialog>\n    );\n}\n","import { Role } from \"@firecms/core\";\n\nexport const DEFAULT_ROLES: Role[] = [\n    {\n        id: \"admin\",\n        name: \"Admin\",\n        isAdmin: true\n    },\n    {\n        id: \"editor\",\n        name: \"Editor\",\n        isAdmin: false,\n        defaultPermissions: {\n            read: true,\n            create: true,\n            edit: true,\n            delete: true\n        },\n        config: {\n            createCollections: true,\n            editCollections: \"own\",\n            deleteCollections: \"own\"\n        }\n    },\n    {\n        id: \"viewer\",\n        name: \"Viewer\",\n        isAdmin: false,\n        defaultPermissions: {\n            read: true,\n            create: false,\n            edit: false,\n            delete: false\n        }\n    }\n];\n","import { useState } from \"react\";\nimport {\n    Button,\n    CenteredView,\n    Checkbox,\n    DeleteIcon,\n    IconButton,\n    Table,\n    TableBody,\n    TableCell,\n    TableHeader,\n    TableRow,\n    Tooltip,\n    Typography\n} from \"@firecms/ui\";\nimport { DeleteConfirmationDialog, Role } from \"@firecms/core\";\nimport { useUserManagement } from \"../../hooks\";\nimport { RoleChip } from \"./RoleChip\";\nimport { DEFAULT_ROLES } from \"./default_roles\";\n\nexport function RolesTable({\n                               onRoleClicked,\n                               editable\n                           }: {\n    onRoleClicked: (role: Role) => void;\n    editable: boolean;\n}) {\n\n    const {\n        roles,\n        saveRole,\n        deleteRole,\n        allowDefaultRolesCreation\n    } = useUserManagement();\n\n    const [roleToBeDeleted, setRoleToBeDeleted] = useState<Role | undefined>(undefined);\n    const [deleteInProgress, setDeleteInProgress] = useState<boolean>(false);\n\n    return <div\n        className=\"w-full overflow-auto\">\n        <Table>\n            <TableHeader>\n                <TableCell header={true} className=\"w-16\"></TableCell>\n                <TableCell header={true}>Role</TableCell>\n                <TableCell header={true} className={\"items-center\"}>Is Admin</TableCell>\n                <TableCell header={true}>Default permissions</TableCell>\n            </TableHeader>\n\n            <TableBody>\n                {roles && roles.map((role) => {\n                    const canCreateAll = role.isAdmin || role.defaultPermissions?.create;\n                    const canReadAll = role.isAdmin || role.defaultPermissions?.read;\n                    const canUpdateAll = role.isAdmin || role.defaultPermissions?.edit;\n                    const canDeleteAll = role.isAdmin || role.defaultPermissions?.delete;\n                    return (\n                        <TableRow\n                            key={role.name}\n                            onClick={() => {\n                                onRoleClicked(role);\n                            }}\n                        >\n                            <TableCell style={{ width: \"64px\" }}>\n                                {!role.isAdmin &&\n                                    <Tooltip title={\"Delete this role\"}>\n                                        <IconButton\n                                            size={\"small\"}\n                                            disabled={!editable}\n                                            onClick={(event) => {\n                                                event.stopPropagation();\n                                                return setRoleToBeDeleted(role);\n                                            }}>\n                                            <DeleteIcon/>\n                                        </IconButton>\n                                    </Tooltip>}\n                            </TableCell>\n                            <TableCell>\n                                <RoleChip role={role}/>\n                            </TableCell>\n                            <TableCell className={\"items-center\"}>\n                                <Checkbox checked={role.isAdmin ?? false}/>\n                            </TableCell>\n                            <TableCell>\n                                <ul>\n                                    {canCreateAll && <li>Create</li>}\n                                    {canReadAll && <li>Read</li>}\n                                    {canUpdateAll && <li>Update</li>}\n                                    {canDeleteAll && <li>Delete</li>}\n                                </ul>\n                            </TableCell>\n                        </TableRow>\n                    );\n                })}\n\n                {(!roles || roles.length === 0) && <TableRow>\n                    <TableCell colspan={4}>\n                        <CenteredView className={\"flex flex-col gap-4 my-8 items-center\"}>\n                            <Typography variant={\"label\"}>\n                                You don&apos;t have any roles yet.\n                            </Typography>\n                            {allowDefaultRolesCreation && <Button variant={\"outlined\"}\n                                                                  onClick={() => {\n                                                                      DEFAULT_ROLES.forEach((role) => {\n                                                                          saveRole(role);\n                                                                      });\n                                                                  }}>\n                                Create default roles\n                            </Button>}\n                        </CenteredView>\n                    </TableCell>\n                </TableRow>}\n\n            </TableBody>\n\n        </Table>\n\n        <DeleteConfirmationDialog\n            open={Boolean(roleToBeDeleted)}\n            loading={deleteInProgress}\n            onAccept={() => {\n                if (roleToBeDeleted) {\n                    setDeleteInProgress(true);\n                    deleteRole(roleToBeDeleted)\n                        .then(() => {\n                            setRoleToBeDeleted(undefined);\n                        })\n                        .finally(() => {\n                            setDeleteInProgress(false);\n                        })\n                }\n            }}\n            onCancel={() => {\n                setRoleToBeDeleted(undefined);\n            }}\n            title={<>Delete?</>}\n            body={<>Are you sure you want to delete this role?</>}/>\n\n    </div>;\n}\n","import React, { useCallback, useState } from \"react\";\n\nimport { Role, useNavigationController } from \"@firecms/core\";\nimport { AddIcon, Button, Container, Tooltip, Typography } from \"@firecms/ui\";\nimport { RolesTable } from \"./RolesTable\";\nimport { RolesDetailsForm } from \"./RolesDetailsForm\";\nimport { useUserManagement } from \"../../hooks\";\n\nexport const RolesView = React.memo(\n    function RolesView({ children }: { children?: React.ReactNode }) {\n\n        const { collections } = useNavigationController();\n        const [dialogOpen, setDialogOpen] = useState(false);\n        const [selectedRole, setSelectedRole] = useState<Role | undefined>();\n\n        const { canEditRoles } = useUserManagement();\n\n        const onRoleClicked = useCallback((user: Role) => {\n            setDialogOpen(true);\n            setSelectedRole(user);\n        }, []);\n\n        const handleClose = () => {\n            setSelectedRole(undefined);\n            setDialogOpen(false);\n        };\n\n        return (\n            <Container className=\"w-full flex flex-col py-4 gap-4\" maxWidth={\"6xl\"}>\n\n                {children}\n\n                <div className=\"flex items-center mt-12\">\n                    <Typography gutterBottom variant=\"h4\"\n                                className=\"flex-grow\"\n                                component=\"h4\">\n                        Roles\n                    </Typography>\n                    <Tooltip title={!canEditRoles ? \"Update plans to customise roles\" : undefined}>\n                        <Button\n                            size={\"large\"}\n                            disabled={!canEditRoles}\n                            startIcon={<AddIcon/>}\n                            onClick={() => setDialogOpen(true)}>\n                            Add role\n                        </Button>\n                    </Tooltip>\n                </div>\n\n                <RolesTable onRoleClicked={onRoleClicked} editable={Boolean(canEditRoles)}/>\n\n                <RolesDetailsForm\n                    key={selectedRole?.id ?? \"new\"}\n                    open={dialogOpen}\n                    role={selectedRole}\n                    editable={canEditRoles}\n                    collections={collections}\n                    handleClose={handleClose}/>\n\n            </Container>\n        )\n    });\n","import React, { useCallback } from \"react\";\nimport * as Yup from \"yup\";\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DoneIcon,\n    LoadingButton,\n    MultiSelect,\n    MultiSelectItem,\n    TextField,\n    Typography,\n} from \"@firecms/ui\";\nimport { FieldCaption, Role, useAuthController, User, useSnackbarController } from \"@firecms/core\";\nimport { Formex, useCreateFormex } from \"@firecms/formex\";\n\nimport { areRolesEqual } from \"../../utils\";\nimport { useUserManagement } from \"../../hooks\";\nimport { RoleChip } from \"../roles\";\n\nexport const UserYupSchema = Yup.object().shape({\n    displayName: Yup.string().required(\"Required\"),\n    email: Yup.string().email().required(\"Required\"),\n    roles: Yup.array().min(1)\n});\n\nfunction canUserBeEdited(loggedUser: User, user: User, users: User[], roles: Role[], prevUser?: User) {\n    const admins = users.filter(u => u.roles?.map(r => r.id).includes(\"admin\"));\n    const loggedUserIsAdmin = loggedUser.roles?.map(r => r.id).includes(\"admin\");\n    const didRolesChange = !prevUser || !areRolesEqual(prevUser.roles ?? [], user.roles ?? []);\n\n    if (didRolesChange && !loggedUserIsAdmin) {\n        throw new Error(\"Only admins can change roles\");\n    }\n\n    // was the admin role removed\n    const adminRoleRemoved = prevUser && prevUser.roles?.map(r => r.id).includes(\"admin\") && !user.roles?.map(r => r.id).includes(\"admin\");\n\n    // avoid removing the last admin\n    if (adminRoleRemoved && admins.length === 1) {\n        throw new Error(\"There must be at least one admin\");\n    }\n    return true;\n}\n\nexport function UserDetailsForm({\n                                    open,\n                                    user: userProp,\n                                    handleClose\n                                }: {\n    open: boolean,\n    user?: User,\n    handleClose: () => void\n}) {\n\n    const snackbarController = useSnackbarController();\n    const {\n        user: loggedInUser\n    } = useAuthController();\n    const {\n        saveUser,\n        users,\n        roles,\n    } = useUserManagement();\n    const isNewUser = !userProp;\n\n    const onUserUpdated = useCallback((savedUser: User): Promise<User> => {\n        if (!loggedInUser) {\n            throw new Error(\"Logged user not found\");\n        }\n        try {\n            canUserBeEdited(loggedInUser, savedUser, users, roles, userProp);\n            return saveUser(savedUser);\n        } catch (e: any) {\n            return Promise.reject(e);\n        }\n    }, [roles, saveUser, userProp, users, loggedInUser]);\n\n    const formex = useCreateFormex({\n        initialValues: userProp ?? {\n            displayName: \"\",\n            email: \"\",\n            roles: roles.filter(r => r.id === \"editor\")\n        } as User,\n        validation: (values) => {\n            return UserYupSchema.validate(values, { abortEarly: false })\n                .then(() => {\n                    return {};\n                }).catch((e) => {\n                    return e.inner.reduce((acc: any, error: any) => {\n                        acc[error.path] = error.message;\n                        return acc;\n                    }, {});\n                });\n        },\n        onSubmit: (user: User, formexController) => {\n\n            return onUserUpdated(user)\n                .then(() => {\n                    handleClose();\n                    formexController.resetForm({\n                        values: user\n                    });\n                }).catch((e) => {\n                    snackbarController.open({\n                        type: \"error\",\n                        message: e.message\n                    });\n                });\n        }\n    });\n\n    const {\n        isSubmitting,\n        touched,\n        handleChange,\n        values,\n        errors,\n        setFieldValue,\n        dirty,\n        handleSubmit,\n        submitCount\n    } = formex;\n\n    return (\n        <Dialog\n            open={open}\n            onOpenChange={(open) => !open ? handleClose() : undefined}\n            maxWidth={\"4xl\"}\n        >\n            <Formex value={formex}>\n                <form\n                    onSubmit={handleSubmit}\n                    autoComplete={\"off\"}\n                    noValidate\n                    style={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        position: \"relative\",\n                        height: \"100%\"\n                    }}>\n                    <DialogContent className=\"h-full flex-grow\">\n                        <div\n                            className=\"flex flex-row pt-4 pb-4\">\n                            <Typography variant={\"h4\"}\n                                        className=\"flex-grow\">\n                                User\n                            </Typography>\n                        </div>\n\n                        <div className={\"grid grid-cols-12 gap-8\"}>\n\n                            <div className={\"col-span-12\"}>\n                                <TextField\n                                    name=\"displayName\"\n                                    required\n                                    error={submitCount > 0 && Boolean(errors.displayName)}\n                                    value={values.displayName ?? \"\"}\n                                    onChange={handleChange}\n                                    aria-describedby=\"name-helper-text\"\n                                    label=\"Name\"\n                                />\n                                <FieldCaption>\n                                    {submitCount > 0 && Boolean(errors.displayName) ? errors.displayName : \"Name of this user\"}\n                                </FieldCaption>\n                            </div>\n                            <div className={\"col-span-12\"}>\n                                <TextField\n                                    required\n                                    error={submitCount > 0 && Boolean(errors.email)}\n                                    name=\"email\"\n                                    value={values.email ?? \"\"}\n                                    onChange={handleChange}\n                                    aria-describedby=\"email-helper-text\"\n                                    label=\"Email\"\n                                />\n                                <FieldCaption>\n                                    {submitCount > 0 && Boolean(errors.email) ? errors.email : \"Email of this user\"}\n                                </FieldCaption>\n                            </div>\n                            <div className={\"col-span-12\"}>\n                                <MultiSelect\n                                    label=\"Roles\"\n                                    value={values.roles?.map(r => r.id) ?? []}\n                                    onMultiValueChange={(value: string[]) => setFieldValue(\"roles\", value.map(id => roles.find(r => r.id === id) as Role))}\n                                    renderValue={(value: string) => {\n                                        const userRole = roles\n                                            .find((role) => role.id === value);\n                                        if (!userRole) return null;\n                                        return <div className=\"flex flex-wrap space-x-2 space-y-2\">\n                                            <RoleChip key={userRole?.id} role={userRole}/>\n                                        </div>;\n                                    }}>\n                                    {roles.map(userRole => <MultiSelectItem key={userRole.id}\n                                                                            value={userRole.id}>\n                                        <RoleChip key={userRole?.id} role={userRole}/>\n                                    </MultiSelectItem>)}\n                                </MultiSelect>\n                            </div>\n\n                        </div>\n\n                    </DialogContent>\n\n                    <DialogActions>\n\n                        <Button variant={\"text\"}\n                                onClick={() => {\n                                    handleClose();\n                                }}>\n                            Cancel\n                        </Button>\n\n                        <LoadingButton\n                            variant=\"filled\"\n                            color=\"primary\"\n                            type=\"submit\"\n                            disabled={!dirty}\n                            loading={isSubmitting}\n                            startIcon={<DoneIcon/>}\n                        >\n                            {isNewUser ? \"Create user\" : \"Update\"}\n                        </LoadingButton>\n                    </DialogActions>\n                </form>\n            </Formex>\n\n        </Dialog>\n    );\n}\n","import { useState } from \"react\";\n\nimport { format } from \"date-fns\";\nimport * as locales from \"date-fns/locale\";\n\nimport {\n    defaultDateFormat,\n    DeleteConfirmationDialog, Role,\n    useAuthController,\n    useCustomizationController, User,\n    useSnackbarController\n} from \"@firecms/core\";\nimport {\n    Button,\n    CenteredView,\n    DeleteIcon,\n    IconButton,\n    Table,\n    TableBody,\n    TableCell,\n    TableHeader,\n    TableRow,\n    Tooltip,\n    Typography,\n} from \"@firecms/ui\";\nimport { useUserManagement } from \"../../hooks\";\nimport { RoleChip } from \"../roles\";\nimport { PersistedUser } from \"../../types\";\n\nexport function UsersTable({ onUserClicked }: {\n    onUserClicked: (user: User) => void;\n}) {\n\n    const {\n        users,\n        saveUser,\n        deleteUser\n    } = useUserManagement<PersistedUser>();\n\n    const authController = useAuthController();\n    const snackbarController = useSnackbarController();\n\n    const customizationController = useCustomizationController();\n    const dateUtilsLocale = customizationController?.locale ? locales[customizationController?.locale as keyof typeof locales] : undefined;\n    const dateFormat: string = customizationController?.dateTimeFormat ?? defaultDateFormat;\n\n    const [userToBeDeleted, setUserToBeDeleted] = useState<User | undefined>(undefined);\n    const [deleteInProgress, setDeleteInProgress] = useState<boolean>(false);\n\n    return (\n        <div className=\"overflow-auto\">\n\n            <Table>\n\n                <TableHeader>\n                    <TableCell className=\"truncate w-16\"></TableCell>\n                    <TableCell>ID</TableCell>\n                    <TableCell>Email</TableCell>\n                    <TableCell>Name</TableCell>\n                    <TableCell>Roles</TableCell>\n                    <TableCell>Created on</TableCell>\n                </TableHeader>\n                <TableBody>\n                    {users && users.map((user) => {\n\n                        const userRoles: Role[] | undefined = user.roles;\n\n                        const formattedDate = user.created_on ? format(user.created_on, dateFormat, { locale: dateUtilsLocale }) : \"\";\n\n                        return (\n                            <TableRow\n                                key={\"row_\" + user.uid}\n                                onClick={() => {\n                                    onUserClicked(user);\n                                }}\n                            >\n                                <TableCell className={\"w-10\"}>\n                                    <Tooltip title={\"Delete this user\"}>\n                                        <IconButton\n                                            size={\"small\"}\n                                            onClick={(event) => {\n                                                event.stopPropagation();\n                                                return setUserToBeDeleted(user);\n                                            }}>\n                                            <DeleteIcon/>\n                                        </IconButton>\n                                    </Tooltip>\n                                </TableCell>\n                                <TableCell>{user.uid}</TableCell>\n                                <TableCell>{user.email}</TableCell>\n                                <TableCell className={\"font-medium align-left\"}>{user.displayName}</TableCell>\n                                <TableCell className=\"align-left\">\n                                    {userRoles\n                                        ? <div className=\"flex flex-wrap gap-2\">\n                                            {userRoles.map(userRole =>\n                                                <RoleChip key={userRole?.id} role={userRole}/>\n                                            )}\n                                        </div>\n                                        : null}\n                                </TableCell>\n                                <TableCell>{formattedDate}</TableCell>\n                            </TableRow>\n                        );\n                    })}\n\n                    {(!users || users.length === 0) && <TableRow>\n                        <TableCell colspan={6}>\n                            <CenteredView className={\"flex flex-col gap-4 my-8 items-center\"}>\n                                <Typography variant={\"label\"}>\n                                    There are no users yet\n                                </Typography>\n                                <Button variant={\"outlined\"}\n                                        onClick={() => {\n                                            if (!authController.user?.uid) {\n                                                throw Error(\"UsersTable, authController misconfiguration\");\n                                            }\n                                            saveUser({\n                                                uid: authController.user?.uid,\n                                                email: authController.user?.email,\n                                                displayName: authController.user?.displayName,\n                                                photoURL: authController.user?.photoURL,\n                                                providerId: authController.user?.providerId,\n                                                isAnonymous: authController.user?.isAnonymous,\n                                                roles: [{ id: \"admin\", name: \"Admin\" }],\n                                                created_on: new Date()\n                                            })\n                                                .then(() => {\n                                                    snackbarController.open({\n                                                        type: \"success\",\n                                                        message: \"User added successfully\"\n                                                    })\n                                                })\n                                                .catch((error) => {\n                                                    snackbarController.open({\n                                                        type: \"error\",\n                                                        message: \"Error adding user: \" + error.message,\n                                                    })\n                                                });\n                                        }}>\n\n                                    Add the logged user as an admin\n                                </Button>\n                            </CenteredView>\n                        </TableCell>\n                    </TableRow>}\n\n                </TableBody>\n            </Table>\n\n            <DeleteConfirmationDialog\n                open={Boolean(userToBeDeleted)}\n                loading={deleteInProgress}\n                onAccept={() => {\n                    if (userToBeDeleted) {\n                        setDeleteInProgress(true);\n                        deleteUser(userToBeDeleted)\n                            .then(() => {\n                                setUserToBeDeleted(undefined);\n                            })\n                            .catch((error) => {\n                                snackbarController.open({\n                                    type: \"error\",\n                                    message: \"Error deleting user: \" + error.message,\n                                })\n                            })\n                            .finally(() => {\n                                setDeleteInProgress(false);\n                            })\n                    }\n                }}\n                onCancel={() => {\n                    setUserToBeDeleted(undefined);\n                }}\n                title={<>Delete?</>}\n                body={<>Are you sure you want to delete this user?</>}/>\n        </div>);\n}\n","import { AddIcon, Button, Container, Typography } from \"@firecms/ui\";\n\nimport { UsersTable } from \"./UsersTable\";\nimport { UserDetailsForm } from \"./UserDetailsForm\";\nimport React, { useCallback, useState } from \"react\";\nimport { useUserManagement } from \"../../hooks/useUserManagement\";\nimport { User } from \"@firecms/core\";\n\nexport const UsersView = function UsersView({ children }: { children?: React.ReactNode }) {\n\n    const [dialogOpen, setDialogOpen] = useState<boolean>();\n    const [selectedUser, setSelectedUser] = useState<User | undefined>();\n\n    const { users, usersLimit } = useUserManagement();\n\n    const reachedUsersLimit = usersLimit !== undefined && (users && users.length >= usersLimit);\n\n    const onUserClicked = useCallback((user: User) => {\n        setSelectedUser(user);\n        setDialogOpen(true);\n    }, []);\n\n    const handleClose = useCallback(() => {\n        setDialogOpen(false);\n        setSelectedUser(undefined);\n    }, []);\n\n    return (\n        <Container className=\"w-full flex flex-col py-4 gap-4\" maxWidth={\"6xl\"}>\n\n            {children}\n\n            <div\n                className=\"flex items-center mt-12\">\n                <Typography gutterBottom variant=\"h4\"\n                            className=\"flex-grow\"\n                            component=\"h4\">\n                    Users\n                </Typography>\n                <Button\n                    size={\"large\"}\n                    disabled={reachedUsersLimit}\n                    startIcon={<AddIcon/>}\n                    onClick={() => setDialogOpen(true)}>\n                    Add user\n                </Button>\n            </div>\n\n            <UsersTable onUserClicked={onUserClicked}/>\n\n            <UserDetailsForm\n                key={selectedUser?.uid ?? \"new\"}\n                open={dialogOpen ?? false}\n                user={selectedUser}\n                handleClose={handleClose}/>\n\n        </Container>\n    )\n};\n","import { FireCMSPlugin, useAuthController, useSnackbarController } from \"@firecms/core\";\nimport { UserManagementProvider } from \"./UserManagementProvider\";\nimport { PersistedUser, UserManagement } from \"./types\";\nimport { AddIcon, Button, Paper, Typography } from \"@firecms/ui\";\nimport { DEFAULT_ROLES } from \"./components/roles/default_roles\";\n\nexport function useUserManagementPlugin({ userManagement }: {\n    userManagement: UserManagement,\n}): FireCMSPlugin {\n\n    const noUsers = userManagement.users.length === 0;\n    const noRoles = userManagement.roles.length === 0;\n\n    return {\n        key: \"user_management\",\n        loading: userManagement.loading,\n\n        homePage: {\n            additionalChildrenStart: noUsers || noRoles\n                ? <IntroWidget\n                    noUsers={noUsers}\n                    noRoles={noRoles}\n                    userManagement={userManagement}/>\n                : undefined\n        },\n        provider: {\n            Component: UserManagementProvider,\n            props: {\n                userManagement\n            }\n        }\n    }\n}\n\nexport function IntroWidget({\n                                noUsers,\n                                noRoles,\n                                userManagement\n                            }: {\n    noUsers: boolean;\n    noRoles: boolean;\n    userManagement: UserManagement<PersistedUser>;\n}) {\n\n    const authController = useAuthController();\n    const snackbarController = useSnackbarController();\n\n    const buttonLabel = noUsers && noRoles\n        ? \"Create default roles and add current user as admin\"\n        : noUsers\n            ? \"Add current user as admin\"\n            : noRoles ? \"Create default roles\" : undefined;\n\n    return (\n        <Paper\n            className={\"my-4 flex flex-col px-4 py-6 bg-white dark:bg-slate-800 gap-2\"}>\n            <Typography variant={\"subtitle2\"} className={\"uppercase\"}>Create your users and roles</Typography>\n            <Typography>\n                You have no users or roles defined. You can create default roles and add the current user as admin.\n            </Typography>\n            <Button onClick={() => {\n                if (!authController.user?.uid) {\n                    throw Error(\"UsersTable, authController misconfiguration\");\n                }\n                if (noUsers) {\n                    userManagement.saveUser({\n                        uid: authController.user?.uid,\n                        email: authController.user?.email,\n                        displayName: authController.user?.displayName,\n                        photoURL: authController.user?.photoURL,\n                        providerId: authController.user?.providerId,\n                        isAnonymous: authController.user?.isAnonymous,\n                        roles: [{\n                            id: \"admin\",\n                            name: \"Admin\"\n                        }],\n                        created_on: new Date()\n                    })\n                        .then(() => {\n                            snackbarController.open({\n                                type: \"success\",\n                                message: \"User added successfully\"\n                            })\n                        })\n                        .catch((error) => {\n                            snackbarController.open({\n                                type: \"error\",\n                                message: \"Error adding user: \" + error.message\n                            })\n                        });\n                }\n                if (noRoles) {\n                    DEFAULT_ROLES.forEach((role) => {\n                        userManagement.saveRole(role);\n                    });\n                }\n            }}>\n                <AddIcon/>\n                {buttonLabel}\n            </Button>\n        </Paper>\n    );\n\n}\n","import { CMSView } from \"@firecms/core\";\nimport { RolesView, UsersView } from \"./components\";\n\nexport const userManagementAdminViews: CMSView[] = [\n    {\n        path: \"users\",\n        name: \"CMS Users\",\n        group: \"Admin\",\n        icon: \"face\",\n        view: <UsersView/>\n    },\n    {\n        path: \"roles\",\n        name: \"Roles\",\n        group: \"Admin\",\n        icon: \"gpp_good\",\n        view: <RolesView/>\n    }\n]\n"],"names":["RESERVED_GROUPS","DEFAULT_PERMISSIONS","resolveUserRolePermissions","collection","user","roles","basePermissions","role","resolveCollectionRole","mergePermissions","id","permA","permB","getUserRoles","fireCMSUser","r","areRolesEqual","rolesA","rolesB","rolesAIds","rolesBIds","cacheDelegatedLoginToken","projectId","delegatedToken","data","parseJwt","expiry","getDelegatedLoginTokenFromCache","entry","clearDelegatedLoginTokensCache","i","key","token","base64","jsonPayload","c","darkenColor","hexColor","darkenBy","color","g","b","hexToRgbaWithOpacity","opacity","alpha","useFirestoreUserManagement","firebaseApp","usersPath","rolesPath","usersLimit","canEditRoles","allowDefaultRolesCreation","includeCollectionConfigPermissions","rolesLoading","setRolesLoading","React","usersLoading","setUsersLoading","setRoles","usersWithRoleIds","setUsersWithRoleIds","users","u","rolesError","setRolesError","usersError","setUsersError","loading","useEffect","firestore","getFirestore","onSnapshot","snapshot","newRoles","docsToRoles","e","newUsers","docsToUsers","saveUser","useCallback","roleIds","uid","userData","setDoc","doc","addDoc","saveRole","roleData","ref","deleteUser","deleteDoc","deleteRole","collectionPermissions","defineRolesFor","authenticator","docs","UserManagementContext","UserManagementProvider","children","userManagement","useUserManagement","useContext","RoleChip","colorScheme","getColorSchemeForSeed","jsx","Chip","RoleYupSchema","Yup","RolesDetailsForm","open","editable","handleClose","collections","isNewRole","savingError","setSavingError","useState","onRoleUpdated","formex","useCreateFormex","formexController","values","errors","error","isSubmitting","touched","handleChange","setFieldValue","dirty","setFieldTouched","isAdmin","defaultCreate","defaultRead","defaultEdit","defaultDelete","getIn","toSnakeCase","Dialog","Formex","jsxs","DialogContent","Typography","TextField","FieldCaption","Paper","Table","TableHeader","TableCell","TableBody","TableRow","Tooltip","Checkbox","checked","col","Select","event","value","SelectItem","DialogActions","Button","LoadingButton","DoneIcon","DEFAULT_ROLES","RolesTable","onRoleClicked","roleToBeDeleted","setRoleToBeDeleted","deleteInProgress","setDeleteInProgress","canCreateAll","canReadAll","canUpdateAll","canDeleteAll","IconButton","DeleteIcon","CenteredView","DeleteConfirmationDialog","RolesView","useNavigationController","dialogOpen","setDialogOpen","selectedRole","setSelectedRole","Container","AddIcon","UserYupSchema","canUserBeEdited","loggedUser","prevUser","admins","loggedUserIsAdmin","UserDetailsForm","userProp","snackbarController","useSnackbarController","loggedInUser","useAuthController","isNewUser","onUserUpdated","savedUser","acc","handleSubmit","submitCount","MultiSelect","userRole","MultiSelectItem","UsersTable","onUserClicked","authController","customizationController","useCustomizationController","dateUtilsLocale","locales","dateFormat","defaultDateFormat","userToBeDeleted","setUserToBeDeleted","userRoles","formattedDate","format","UsersView","selectedUser","setSelectedUser","reachedUsersLimit","useUserManagementPlugin","noUsers","noRoles","IntroWidget","buttonLabel","userManagementAdminViews"],"mappings":"i8BAEaA,GAAkB,CAAC,OAAO,EAEjCC,GAAsB,CACxB,KAAM,GACN,KAAM,GACN,OAAQ,GACR,OAAQ,EACZ,EAEO,SAASC,EACf,CACI,WAAAC,EACA,KAAAC,CACJ,EAGe,CAEZ,MAAMC,EAAQD,GAAM,MACpB,GAAKC,EAEM,IAAAF,EAAW,UAAYC,GAAM,IAC7B,MAAA,CACH,KAAM,GACN,OAAQ,GACR,KAAM,GACN,OAAQ,EAAA,EAET,CACH,MAAME,EAAkB,CACpB,KAAM,GACN,OAAQ,GACR,KAAM,GACN,OAAQ,EAAA,EAGL,OAAAD,EACF,IAAIE,GAAQC,GAAsBD,EAAMJ,EAAW,EAAE,CAAC,EACtD,OAAOM,EAAkBH,CAAe,CACjD,MAnBW,QAAAL,EAoBf,CAEA,SAASO,GAAsBD,EAAYG,EAAyB,CAEhE,MAAMJ,EAAkB,CACpB,KAAMC,EAAK,SAAWA,EAAK,oBAAoB,KAC/C,OAAQA,EAAK,SAAWA,EAAK,oBAAoB,OACjD,KAAMA,EAAK,SAAWA,EAAK,oBAAoB,KAC/C,OAAQA,EAAK,SAAWA,EAAK,oBAAoB,MAAA,EAErD,OAAIA,EAAK,uBAAyBA,EAAK,sBAAsBG,CAAE,EACpDD,EAAiBF,EAAK,sBAAsBG,CAAE,EAAGJ,CAAe,EAChEC,EAAK,mBACLE,EAAiBF,EAAK,mBAAoBD,CAAe,EAEzDA,CAEf,CAEA,MAAMG,EAAmB,CAACE,EAAoBC,KACnC,CACH,KAAMD,EAAM,MAAQC,EAAM,KAC1B,OAAQD,EAAM,QAAUC,EAAM,OAC9B,KAAMD,EAAM,MAAQC,EAAM,KAC1B,OAAQD,EAAM,QAAUC,EAAM,MAAA,GAItB,SAAAC,GAAaR,EAAeS,EAAuC,CACxE,OAACT,EAEDS,EAAY,MACTA,EAAY,MACT,IAAIP,GAAQF,EAAM,KAAMU,GAAMA,EAAE,KAAOR,EAAK,EAAE,CAAC,EAC/C,OAAO,OAAO,EACjB,GALJ,MAMV,CAEa,MAAAS,EAAgB,CAACC,EAAgBC,IAAmB,CAC7D,MAAMC,EAAYF,EAAO,IAAIF,GAAKA,EAAE,EAAE,EAChCK,EAAYF,EAAO,IAAIH,GAAKA,EAAE,EAAE,EAC/B,OAAAI,EAAU,SAAWD,EAAO,QAAUC,EAAU,MAAOZ,GAASa,EAAU,SAASb,CAAI,CAAC,CACnG,EC/EgB,SAAAc,GAAyBC,EAAmBC,EAAyB,CACjF,GAAI,CAACA,EACD,OAGE,MAAAC,EAAOC,GAASF,CAAc,EAE9BG,EAAS,IAAI,KAAKF,EAAK,IAAM,GAAI,EACvC,aAAa,QAAQ,eAAeF,CAAS,GAAI,KAAK,UAAU,CAC5D,MAAOC,EACP,OAAAG,CACH,CAAA,CAAC,CAEN,CAEO,SAASC,GAAgCL,EAAmB,CAC/D,MAAMM,EAAQ,aAAa,QAAQ,eAAeN,CAAS,EAAE,EAC7D,GAAIM,EAAO,CACD,MAAAJ,EAAO,KAAK,MAAMI,CAAK,EAE7B,GADAJ,EAAK,OAAS,IAAI,KAAKA,EAAK,MAAM,EAC9BA,EAAK,OAAa,IAAA,KAClB,OAAOA,EAAK,KAEpB,CAEJ,CAEO,SAASK,IAAiC,CAC7C,QAASC,EAAI,EAAGA,EAAI,aAAa,OAAQA,IAAK,CACpC,MAAAC,EAAM,aAAa,IAAID,CAAC,EAC1BC,GAAK,WAAW,cAAc,GAC9B,aAAa,WAAWA,CAAG,CAEnC,CACJ,CAEA,SAASN,GAASO,EAAwB,CACtC,GAAI,CAACA,EACK,MAAA,IAAI,MAAM,cAAc,EAG5B,MAAAC,EADYD,EAAM,MAAM,GAAG,EAAE,CAAC,EACX,QAAQ,KAAM,GAAG,EAAE,QAAQ,KAAM,GAAG,EACvDE,EAAc,mBAAmB,OAAO,KAAKD,CAAM,EAAE,MAAM,EAAE,EAAE,IAAI,SAAUE,EAAG,CAC3E,MAAA,KAAO,KAAOA,EAAE,WAAW,CAAC,EAAE,SAAS,EAAE,GAAG,MAAM,EAAE,CAAA,CAC9D,EAAE,KAAK,EAAE,CAAC,EAEJ,OAAA,KAAK,MAAMD,CAAW,CACjC,CCpDgB,SAAAE,GAAYC,EAAkBC,EAAW,GAAY,CAEjE,GAAI,CAAC,2BAA2B,KAAKD,CAAQ,EACnC,MAAA,IAAI,MAAM,sBAAsB,EAI1C,IAAIE,EAAQF,EAAS,UAAU,CAAC,EAAE,MAAM,EAAE,EACtCE,EAAM,SAAW,IACjBA,EAAQ,CAACA,EAAM,CAAC,EAAGA,EAAM,CAAC,EAAGA,EAAM,CAAC,EAAGA,EAAM,CAAC,EAAGA,EAAM,CAAC,EAAGA,EAAM,CAAC,CAAC,GAInE,IAAAxB,EAAI,SAASwB,EAAM,CAAC,EAAIA,EAAM,CAAC,EAAG,EAAE,EACpCC,EAAI,SAASD,EAAM,CAAC,EAAIA,EAAM,CAAC,EAAG,EAAE,EACpCE,EAAI,SAASF,EAAM,CAAC,EAAIA,EAAM,CAAC,EAAG,EAAE,EAGxC,OAAAxB,EAAI,KAAK,MAAMA,GAAK,EAAIuB,EAAW,IAAI,EACvCE,EAAI,KAAK,MAAMA,GAAK,EAAIF,EAAW,IAAI,EACvCG,EAAI,KAAK,MAAMA,GAAK,EAAIH,EAAW,IAAI,EAGhC,KACFvB,EAAI,GAAK,IAAM,IAAMA,EAAE,SAAS,EAAE,GAClCyB,EAAI,GAAK,IAAM,IAAMA,EAAE,SAAS,EAAE,GAClCC,EAAI,GAAK,IAAM,IAAMA,EAAE,SAAS,EAAE,CAC3C,CAEgB,SAAAC,GAAqBL,EAAkBM,EAAU,GAAY,CAEzE,GAAI,CAAC,2BAA2B,KAAKN,CAAQ,EACnC,MAAA,IAAI,MAAM,sBAAsB,EAI1C,IAAIE,EAAQF,EAAS,UAAU,CAAC,EAAE,MAAM,EAAE,EACtCE,EAAM,SAAW,IACjBA,EAAQ,CAACA,EAAM,CAAC,EAAGA,EAAM,CAAC,EAAGA,EAAM,CAAC,EAAGA,EAAM,CAAC,EAAGA,EAAM,CAAC,EAAGA,EAAM,CAAC,CAAC,GAIjE,MAAAxB,EAAI,SAASwB,EAAM,CAAC,EAAIA,EAAM,CAAC,EAAG,EAAE,EACpCC,EAAI,SAASD,EAAM,CAAC,EAAIA,EAAM,CAAC,EAAG,EAAE,EACpCE,EAAI,SAASF,EAAM,CAAC,EAAIA,EAAM,CAAC,EAAG,EAAE,EAGpCK,EAAQD,EAAU,IAGxB,MAAO,QAAQ5B,CAAC,KAAKyB,CAAC,KAAKC,CAAC,KAAKG,CAAK,GAC1C,CCmBO,SAASC,GAA2B,CACI,YAAAC,EACA,UAAAC,EAAY,yBACZ,UAAAC,EAAY,yBACZ,WAAAC,EACA,aAAAC,EAAe,GACf,0BAAAC,EACA,mCAAAC,CACJ,EAAyC,CAEhF,KAAM,CAACC,EAAcC,CAAe,EAAIC,EAAM,SAAkB,EAAI,EAC9D,CAACC,EAAcC,CAAe,EAAIF,EAAM,SAAkB,EAAI,EAC9D,CAAClD,EAAOqD,CAAQ,EAAIH,EAAM,SAAiB,CAAA,CAAE,EAC7C,CAACI,EAAkBC,CAAmB,EAAIL,EAAM,SAA4B,CAAA,CAAE,EAE9EM,EAAQF,EAAiB,IAAUG,IAAA,CACrC,GAAGA,EACH,MAAOzD,EAAM,OAAOU,GAAK+C,EAAE,OAAO,SAAS/C,EAAE,EAAE,CAAC,CAC1C,EAAA,EAEJ,CAACgD,EAAYC,CAAa,EAAIT,EAAM,SAA4B,EAChE,CAACU,EAAYC,CAAa,EAAIX,EAAM,SAA4B,EAEhEY,EAAUd,GAAgBG,EAEhCY,EAAAA,UAAU,IAAM,CACR,GAAA,CAACtB,GAAe,CAACE,EAAW,OAC1B,MAAAqB,EAAYC,eAAaxB,CAAW,EAEnC,OAAAyB,EAAA,WAAWpE,EAAA,WAAWkE,EAAWrB,CAAS,EAC7C,CACI,KAAOwB,GAAa,CAChBR,EAAc,MAAS,EACnB,GAAA,CACM,MAAAS,EAAWC,GAAYF,EAAS,IAAI,EAC1Cd,EAASe,CAAQ,QACZE,EAAG,CACA,QAAA,MAAM,sBAAuBA,CAAC,EACtCX,EAAcW,CAAU,CAC5B,CACArB,EAAgB,EAAK,CACzB,EACA,MAAQqB,GAAM,CACF,QAAA,MAAM,sBAAuBA,CAAC,EACtCX,EAAcW,CAAC,EACfrB,EAAgB,EAAK,CACzB,CACJ,CAAA,CACJ,EACD,CAACR,EAAaE,CAAS,CAAC,EAE3BoB,EAAAA,UAAU,IAAM,CACR,GAAA,CAACtB,GAAe,CAACC,EAAW,OAC1B,MAAAsB,EAAYC,eAAaxB,CAAW,EAEnC,OAAAyB,EAAA,WAAWpE,EAAA,WAAWkE,EAAWtB,CAAS,EAC7C,CACI,KAAOyB,GAAa,CAChBN,EAAc,MAAS,EACnB,GAAA,CACM,MAAAU,EAAWC,GAAYL,EAAS,IAAI,EAC1CZ,EAAoBgB,CAAQ,QACvBD,EAAG,CACA,QAAA,MAAM,sBAAuBA,CAAC,EACtCT,EAAcS,CAAU,CAC5B,CACAlB,EAAgB,EAAK,CACzB,EACA,MAAQkB,GAAM,CACF,QAAA,MAAM,sBAAuBA,CAAC,EACtCT,EAAcS,CAAC,EACflB,EAAgB,EAAK,CACzB,CACJ,CAAA,CACJ,EACD,CAACX,EAAaC,CAAS,CAAC,EAErB,MAAA+B,EAAWC,cAAY,MAAO3E,GAA8B,CAC9D,GAAI,CAAC0C,EAAa,MAAM,MAAM,qDAAqD,EAC7E,MAAAuB,EAAYC,eAAaxB,CAAW,EACtC,GAAA,CAACuB,GAAa,CAACtB,EAAW,MAAM,MAAM,sDAAsD,EACxF,QAAA,MAAM,kBAAmB3C,CAAI,EACrC,MAAM4E,EAAU5E,EAAK,OAAO,IAAIW,IAAKA,GAAE,EAAE,EACnC,CACF,IAAAkE,EACA,GAAGC,CACH,EAAA9E,EACEoB,GAAO,CACT,GAAG0D,EACH,MAAOF,CAAA,EAEX,OAAIC,EACOE,EAAO,OAAAC,EAAA,IAAIf,EAAWtB,EAAWkC,CAAG,EAAGzD,GAAM,CAAE,MAAO,EAAM,CAAA,EAAE,KAAK,IAAMpB,CAAI,EAE7EiF,EAAA,OAAOlF,aAAWkE,EAAWtB,CAAS,EAAGvB,EAAI,EAAE,KAAK,IAAMpB,CAAI,CACzE,EACD,CAAC2C,EAAWD,CAAW,CAAC,EAErBwC,EAAWP,cAAaxE,GAA8B,CACxD,GAAI,CAACuC,EAAa,MAAM,MAAM,qDAAqD,EAC7E,MAAAuB,EAAYC,eAAaxB,CAAW,EACtC,GAAA,CAACuB,GAAa,CAACrB,EAAW,MAAM,MAAM,sDAAsD,EACxF,QAAA,MAAM,kBAAmBzC,CAAI,EAC/B,KAAA,CACF,GAAAG,EACA,GAAG6E,CACH,EAAAhF,EACEiF,EAAMJ,EAAA,IAAIf,EAAWrB,EAAWtC,CAAE,EACxC,OAAOyE,EAAAA,OAAOK,EAAKD,EAAU,CAAE,MAAO,GAAM,CAAA,EAC7C,CAACvC,EAAWF,CAAW,CAAC,EAErB2C,EAAaV,cAAY,MAAO3E,GAA8B,CAChE,GAAI,CAAC0C,EAAa,MAAM,MAAM,qDAAqD,EAC7E,MAAAuB,EAAYC,eAAaxB,CAAW,EACtC,GAAA,CAACuB,GAAa,CAACtB,EAAW,MAAM,MAAM,sDAAsD,EACxF,QAAA,MAAM,WAAY3C,CAAI,EACxB,KAAA,CAAE,IAAA6E,CAAQ,EAAA7E,EAChB,OAAOsF,EAAAA,UAAUN,EAAAA,IAAIf,EAAWtB,EAAWkC,CAAG,CAAC,CAAA,EAChD,CAAClC,EAAWD,CAAW,CAAC,EAErB6C,EAAaZ,cAAaxE,GAA8B,CAC1D,GAAI,CAACuC,EAAa,MAAM,MAAM,qDAAqD,EAC7E,MAAAuB,EAAYC,eAAaxB,CAAW,EACtC,GAAA,CAACuB,GAAa,CAACrB,EAAW,MAAM,MAAM,sDAAsD,EACxF,QAAA,MAAM,WAAYzC,CAAI,EACxB,KAAA,CAAE,GAAAG,CAAO,EAAAH,EACTiF,EAAMJ,EAAA,IAAIf,EAAWrB,EAAWtC,CAAE,EACxC,OAAOgF,EAAAA,UAAUF,CAAG,CAAA,EACrB,CAACxC,EAAWF,CAAW,CAAC,EAErB8C,EAA4Cb,EAAAA,YAAY,CAAC,CACI,WAAA5E,EACA,KAAAC,KACEF,EAA2B,CAC5F,WAAAC,EACA,KAAAC,CAAA,CACH,EAAG,CAAE,CAAA,EAEAyF,EAAuDd,cAAa3E,GAAS,CAC/E,GAAI,CAACyD,EAAO,MAAM,MAAM,kBAAkB,EAE1C,OADiBA,EAAM,KAAUC,GAAAA,EAAE,OAAO,YAAkB,IAAA1D,GAAM,OAAO,YAAa,CAAA,GACrE,KAAA,EAClB,CAACyD,CAAK,CAAC,EAEJiC,EAA+Bf,EAAAA,YAAY,CAAC,CAAE,KAAA3E,KAAW,CAG3D,GAFQ,QAAA,MAAM,sBAAuBA,CAAI,EAErC+D,EACA,eAAQ,KAAK,kCAAkC,EACxC,GASX,GALIN,EAAM,SAAW,GAIJA,EAAM,KAAUC,GAAAA,EAAE,OAAO,YAAkB,IAAA1D,GAAM,OAAO,YAAa,CAAA,EAE3E,MAAA,GAGX,MAAM,MAAM,8EAA8E,CAAA,EAC3F,CAAC+D,EAASN,CAAK,CAAC,EAEZ,MAAA,CACH,QAAAM,EACA,MAAA9D,EACA,MAAAwD,EACA,SAAAiB,EACA,SAAAQ,EACA,WAAAvB,EACA,WAAA0B,EACA,WAAAE,EACA,WAAA1C,EACA,WAAAgB,EACA,aAAcf,IAAiB,OAAY,GAAOA,EAClD,0BAA2BC,IAA8B,OAAY,GAAOA,EAC5E,mCAAoC,EAAQC,EAC5C,sBAAAwC,EACA,eAAAC,EACA,cAAAC,CAAA,CAER,CAEA,MAAMjB,GAAekB,GACVA,EAAK,IAAKX,GAAQ,CACf,MAAA5D,EAAO4D,EAAI,OAOV,MANQ,CACX,IAAKA,EAAI,GACT,GAAG5D,EACH,WAAYA,GAAM,YAAY,OAAO,EACrC,WAAYA,GAAM,YAAY,OAAO,CAAA,CAElC,CACV,EAGCkD,GAAeqB,GACVA,EAAK,IAAKX,IAAS,CACtB,GAAIA,EAAI,GACR,GAAGA,EAAI,KAAK,CACN,EAAA,EC5QDY,EAAwBzC,EAAM,cAAmC,EAAS,EAMhF,SAAS0C,EAA8C,CACnB,SAAAC,EACA,eAAAC,CACJ,EAAsD,CACzF,aACKH,EAAsB,SAAtB,CAA+B,MAAOG,EAClC,SAAAD,CACL,CAAA,CAER,CCfa,MAAAE,EAAoB,IAAyBC,EAAAA,WAAiCL,CAAqB,ECGhG,SAAAM,EAAS,CAAE,KAAA/F,GAAuB,CAC1C,IAAAgG,EACJ,OAAIhG,EAAK,QACSgG,EAAA,aACPhG,EAAK,KAAO,SACLgG,EAAA,cACPhG,EAAK,KAAO,SACLgG,EAAA,YAEAA,EAAAC,EAAA,sBAAsBjG,EAAK,EAAE,EAI3CkG,EAAA,IAACC,EAAA,KAAA,CACG,YAAAH,EAEC,SAAKhG,EAAA,IAAA,EADDA,EAAK,EAAA,CAKtB,CCAa,MAAAoG,EAAgBC,EAAI,OAAO,EAAE,MAAM,CAC5C,GAAIA,EAAI,SAAS,SAAS,UAAU,EACpC,KAAMA,EAAI,SAAS,SAAS,UAAU,CAC1C,CAAC,EAEM,SAASC,EAAiB,CACI,KAAAC,EACA,KAAAvG,EACA,SAAAwG,EACA,YAAAC,EACA,YAAAC,CACJ,EAM9B,CAEO,KAAA,CAAE,SAAA3B,GAAac,IACfc,EAAY,CAAC3G,EAEb,CAAC4G,EAAaC,CAAc,EAAIC,EAA4B,SAAA,EAE5DC,EAAgBvC,cAAaxE,IAC/B6G,EAAe,MAAS,EACjB9B,EAAS/E,CAAI,GACrB,CAAC+E,CAAQ,CAAC,EAEPiC,EAASC,EAAAA,gBAAgB,CAC3B,cAAejH,GAAQ,CACnB,KAAM,EACV,EACA,SAAU,CAACA,EAAYkH,IACZH,EAAc/G,CAAI,EACpB,KAAK,IAAM,CACRkH,EAAiB,UAAU,CACvB,OAAQlH,CAAA,CACX,EACWyG,GAAA,CACf,EACA,MAAWrC,GAAAyC,EAAezC,CAAC,CAAC,EAErC,WAAa+C,GACFf,EAAc,SAASe,EAAQ,CAAE,WAAY,EAAM,CAAC,EACtD,KAAK,KAAO,CAAC,EAAE,EACf,MAAO/C,GAAM,CACV,MAAMgD,EAAiC,CAAA,EACrC,OAAAhD,EAAA,MAAM,QAASiD,GAAe,CAC5BD,EAAOC,EAAM,IAAI,EAAIA,EAAM,OAAA,CAC9B,EACMD,CAAA,CACV,CACT,CAEH,EAEK,CACF,aAAAE,EACA,QAAAC,EACA,OAAAJ,EACA,OAAAC,EACA,aAAAI,EACA,cAAAC,EACA,MAAAC,EACA,gBAAAC,CACA,EAAAX,EAEEY,EAAUT,EAAO,SAAW,GAC5BU,EAAgBV,EAAO,oBAAoB,QAAU,GACrDW,EAAcX,EAAO,oBAAoB,MAAQ,GACjDY,EAAcZ,EAAO,oBAAoB,MAAQ,GACjDa,EAAgBb,EAAO,oBAAoB,QAAU,GAE3D,OAAAnE,EAAM,UAAU,IAAM,CAEd,CADciF,EAAAA,MAAMV,EAAS,IAAI,GACnBJ,EAAO,MACrBM,EAAc,KAAMS,EAAAA,YAAYf,EAAO,IAAI,CAAC,CAEjD,EAAA,CAACI,EAASJ,EAAO,IAAI,CAAC,EAGrBjB,EAAA,IAACiC,EAAA,OAAA,CACG,KAAA5B,EACA,SAAU,MAEV,SAAAL,EAAA,IAACkC,EAAO,OAAA,CAAA,MAAOpB,EACX,SAAAqB,EAAA,KAAC,OAAA,CAAK,WAAU,GACV,aAAc,MACd,SAAUrB,EAAO,aACjB,MAAO,CACH,QAAS,OACT,cAAe,SACf,SAAU,WACV,OAAQ,MACZ,EACF,SAAA,CAACqB,EAAAA,KAAAC,EAAAA,cAAA,CAAc,UAAU,YACrB,SAAA,CAAApC,EAAA,IAAC,MAAA,CACG,UAAU,2BACV,SAAAA,EAAA,IAACqC,EAAA,WAAA,CAAW,QAAS,KACT,UAAU,YAAY,SAAA,MAAA,CAElC,CAAA,CACJ,EAEAF,EAAAA,KAAC,MAAI,CAAA,UAAW,0BAEZ,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAW,4BACZ,SAAA,CAAAnC,EAAA,IAACsC,EAAA,UAAA,CACG,KAAK,OACL,SAAQ,GACR,MAAOjB,EAAQ,MAAQ,EAAQH,EAAO,KACtC,MAAOD,EAAO,KACd,SAAUS,GAAW,CAACpB,EACtB,SAAUgB,EACV,mBAAiB,mBACjB,MAAM,MAAA,CACV,EACAtB,EAAAA,IAACuC,EAAAA,aACI,CAAA,SAAAlB,EAAQ,MAAgBH,EAAO,KAAQA,EAAO,KAAO,mBAC1D,CAAA,CAAA,EACJ,EAEAiB,EAAAA,KAAC,MAAI,CAAA,UAAW,4BACZ,SAAA,CAAAnC,EAAA,IAACsC,EAAA,UAAA,CACG,KAAK,KACL,SAAQ,GACR,MAAOjB,EAAQ,IAAM,EAAQH,EAAO,GACpC,MAAOD,EAAO,GACd,SAAU,CAACR,GAAa,CAACH,EACzB,SAAWpC,GAAM,CACboD,EAAapD,CAAC,EACduD,EAAgB,KAAM,EAAI,CAC9B,EACA,mBAAiB,iBACjB,MAAM,IAAA,CACV,EACAzB,EAAAA,IAACuC,EAAAA,aACI,CAAA,SAAAlB,EAAQ,IAAcH,EAAO,GAAMA,EAAO,GAAK,iBACpD,CAAA,CAAA,EACJ,EAEAiB,EAAAA,KAAC,MAAI,CAAA,UAAW,cACZ,SAAA,CAAAnC,EAAA,IAACwC,EAAA,MAAA,CAEG,UAAU,aACV,gBAACC,QACG,CAAA,SAAA,CAAAN,OAACO,EAAAA,YACG,CAAA,SAAA,CAAA1C,EAAA,IAAC2C,EAAU,UAAA,EAAA,EACX3C,EAAA,IAAC2C,EAAA,UAAA,CACG,MAAM,SAAS,SAAA,iBAAA,CAEnB,EACA3C,EAAA,IAAC2C,EAAA,UAAA,CACG,MAAM,SAAS,SAAA,eAAA,CAEnB,EACA3C,EAAA,IAAC2C,EAAA,UAAA,CACG,MAAM,SAAS,SAAA,iBAAA,CAEnB,EACA3C,EAAA,IAAC2C,EAAA,UAAA,CACG,MAAM,SAAS,SAAA,iBAAA,CAEnB,CAAA,EACJ,SAECC,EAAAA,UACG,CAAA,SAAA,CAAAT,OAACU,EAAAA,SACG,CAAA,SAAA,CAAA7C,EAAA,IAAC2C,EAAA,UAAA,CACG,MAAM,MACN,SAAA3C,EAAAA,IAAC,UAAO,SACO,iBAAA,CAAA,CAAA,CACnB,EACAA,EAAA,IAAC2C,EAAA,UAAA,CACG,MAAM,SACN,SAAA3C,EAAA,IAAC8C,EAAA,QAAA,CACG,MAAM,iCACN,SAAA9C,EAAA,IAAC+C,EAAA,SAAA,CACG,SAAUrB,GAAW,CAACpB,EACtB,SAAUoB,GAAWC,IAAkB,GACvC,gBAAkBqB,GAAYzB,EAAc,4BAA6ByB,CAAO,CAAA,CACpF,CAAA,CACJ,CAAA,CACJ,EAEAhD,EAAA,IAAC2C,EAAA,UAAA,CACG,MAAM,SACN,SAAA3C,EAAA,IAAC8C,EAAA,QAAA,CACG,MAAM,sCACN,SAAA9C,EAAA,IAAC+C,EAAA,SAAA,CACG,SAAUrB,GAAW,CAACpB,EACtB,SAAUoB,GAAWE,IAAgB,GACrC,gBAAkBoB,GAAYzB,EAAc,0BAA2ByB,CAAO,CAAA,CAClF,CAAA,CACJ,CAAA,CACJ,EACAhD,EAAA,IAAC2C,EAAA,UAAA,CACG,MAAM,SACN,SAAA3C,EAAA,IAAC8C,EAAA,QAAA,CACG,MAAM,gCACN,SAAA9C,EAAA,IAAC+C,EAAA,SAAA,CACG,SAAUrB,GAAW,CAACpB,EACtB,SAAUoB,GAAWG,IAAgB,GACrC,gBAAkBmB,GAAYzB,EAAc,0BAA2ByB,CAAO,CAAA,CAClF,CAAA,CACJ,CAAA,CACJ,EACAhD,EAAA,IAAC2C,EAAA,UAAA,CACG,MAAM,SACN,SAAA3C,EAAA,IAAC8C,EAAA,QAAA,CACG,MAAM,gCACN,SAAA9C,EAAA,IAAC+C,EAAA,SAAA,CACG,SAAUrB,GAAW,CAACpB,EACtB,SAAUoB,GAAWI,IAAkB,GACvC,gBAAkBkB,GAAYzB,EAAc,4BAA6ByB,CAAO,CAAA,CACpF,CAAA,CAEJ,CAAA,CACJ,CAAA,EACJ,EACCxC,GAAeA,EAAY,IAAKyC,UAC5BJ,EAAAA,SACG,CAAA,SAAA,CAAA7C,EAAA,IAAC2C,EAAA,UAAA,CACG,MAAM,MACL,SAAIM,EAAA,IAAA,CACT,EACAjD,EAAA,IAAC2C,EAAA,UAAA,CACG,MAAM,SACN,SAAA3C,EAAA,IAAC+C,EAAA,SAAA,CACG,SAAUrB,GAAWC,GAAiB,CAACrB,EACvC,SAAUoB,GAAWC,GAAiBI,EAAA,MAAMd,EAAQ,yBAAyBgC,EAAI,IAAI,SAAS,IAAM,GACpG,gBAAkBD,GAAYzB,EAAc,yBAAyB0B,EAAI,IAAI,UAAWD,CAAO,CAAA,CAAE,CAAA,CACzG,EACAhD,EAAA,IAAC2C,EAAA,UAAA,CACG,MAAM,SACN,SAAA3C,EAAA,IAAC+C,EAAA,SAAA,CACG,SAAUrB,GAAWE,GAAe,CAACtB,EACrC,SAAUoB,GAAWE,GAAeG,EAAA,MAAMd,EAAQ,yBAAyBgC,EAAI,IAAI,OAAO,IAAM,GAChG,gBAAkBD,GAAYzB,EAAc,yBAAyB0B,EAAI,IAAI,QAASD,CAAO,CAAA,CAAE,CAAA,CACvG,EACAhD,EAAA,IAAC2C,EAAA,UAAA,CACG,MAAM,SACN,SAAA3C,EAAA,IAAC+C,EAAA,SAAA,CACG,SAAUrB,GAAWG,GAAe,CAACvB,EACrC,SAAUoB,GAAWG,GAAeE,EAAA,MAAMd,EAAQ,yBAAyBgC,EAAI,IAAI,OAAO,IAAM,GAChG,gBAAkBD,GAAYzB,EAAc,yBAAyB0B,EAAI,IAAI,QAASD,CAAO,CAAA,CAAE,CAAA,CACvG,EACAhD,EAAA,IAAC2C,EAAA,UAAA,CACG,MAAM,SACN,SAAA3C,EAAA,IAAC+C,EAAA,SAAA,CACG,SAAUrB,GAAWI,GAAiB,CAACxB,EACvC,SAAUoB,GAAWI,GAAiBC,EAAA,MAAMd,EAAQ,yBAAyBgC,EAAI,IAAI,SAAS,IAAM,GACpG,gBAAkBD,GAAYzB,EAAc,yBAAyB0B,EAAI,IAAI,UAAWD,CAAO,CAAA,CAAE,CAAA,CACzG,CAAA,GAhCWC,EAAI,IAiCnB,CACH,CAAA,EACL,CAAA,EACJ,CAAA,CACJ,EACAjD,EAAAA,IAACuC,gBAAa,SAKd,sHAAA,CAAA,CAAA,EACJ,EAEAJ,EAAAA,KAAC,MAAI,CAAA,UAAW,4BACZ,SAAA,CAAAA,EAAA,KAACe,EAAA,OAAA,CACG,MAAO7B,EAAQ,QAAU,EAAQH,EAAO,OACxC,GAAG,oBACH,KAAK,oBACL,MAAM,qBACN,SAAU,eACV,SAAUQ,GAAW,CAACpB,EACtB,SAAW6C,GAAU5B,EAAc,2BAA4B4B,EAAM,OAAO,QAAU,MAAM,EAC5F,MAAOzB,GAAWT,EAAO,QAAQ,kBAAoB,OAAS,QAC9D,YAAcmC,GAAeA,IAAU,OAAS,MAAQ,KAExD,SAAA,CAAApD,EAAA,IAACqD,EAAA,WAAA,CACG,MAAO,OAAQ,SAAA,OAAA,CAAK,EACxBrD,EAAA,IAACqD,EAAA,WAAA,CACG,MAAO,QAAS,SAAA,MAAA,CAAI,CAAA,CAAA,CAC5B,EAEArD,EAAAA,IAACuC,EAAAA,aACI,CAAA,SAAAlB,EAAQ,QAAkBH,EAAO,OAAUA,EAAO,OAAS,iCAChE,CAAA,CAAA,EACJ,EAEAiB,EAAAA,KAAC,MAAI,CAAA,UAAW,4BACZ,SAAA,CAAAA,EAAA,KAACe,EAAA,OAAA,CACG,MAAO7B,EAAQ,QAAU,EAAQH,EAAO,OACxC,GAAG,kBACH,KAAK,kBACL,MAAM,mBACN,SAAUQ,GAAW,CAACpB,EACtB,SAAU,eACV,SAAW6C,GAAU5B,EAAc,yBAA0B4B,EAAM,OAAO,QAAU,MAAQ,MAAQA,EAAM,OAAO,QAAU,MAAM,EACjI,MAAOzB,EAAU,OAAUT,EAAO,QAAQ,kBAAoB,MAAQ,MAASA,EAAO,QAAQ,gBAAkB,OAAS,QACzH,YAAcmC,GAAeA,IAAU,MAAQ,MAASA,IAAU,OAAS,MAAQ,KAEnF,SAAA,CAAApD,EAAA,IAACqD,EAAA,WAAA,CACG,MAAO,OAAQ,SAAA,OAAA,CAAK,EACxBrD,EAAA,IAACqD,EAAA,WAAA,CACG,MAAO,QAAS,SAAA,MAAA,CAAI,EACxBrD,EAAA,IAACqD,EAAA,WAAA,CACG,MAAO,MAAO,SAAA,oBAAA,CACF,CAAA,CAAA,CACpB,EAEArD,EAAAA,IAACuC,EAAAA,aACI,CAAA,SAAAlB,EAAQ,QAAkBH,EAAO,OAAUA,EAAO,OAAS,+BAChE,CAAA,CAAA,EACJ,EAEAiB,EAAAA,KAAC,MAAI,CAAA,UAAW,4BACZ,SAAA,CAAAA,EAAA,KAACe,EAAA,OAAA,CACG,MAAO7B,EAAQ,QAAU,EAAQH,EAAO,OACxC,GAAG,oBACH,KAAK,oBACL,MAAM,qBACN,SAAUQ,GAAW,CAACpB,EACtB,SAAU,eACV,SAAW6C,GAAU5B,EAAc,2BAA4B4B,EAAM,OAAO,QAAU,MAAQ,MAAQA,EAAM,OAAO,QAAU,MAAM,EACnI,MAAOzB,EAAU,OAAUT,EAAO,QAAQ,oBAAsB,MAAQ,MAASA,EAAO,QAAQ,kBAAoB,OAAS,QAC7H,YAAcmC,GAAeA,IAAU,MAAQ,MAASA,IAAU,OAAS,MAAQ,KAEnF,SAAA,CAAApD,EAAA,IAACqD,EAAA,WAAA,CACG,MAAO,OAAQ,SAAA,OAAA,CAAK,EACxBrD,EAAA,IAACqD,EAAA,WAAA,CACG,MAAO,QAAS,SAAA,MAAA,CAAI,EACxBrD,EAAA,IAACqD,EAAA,WAAA,CACG,MAAO,MAAO,SAAA,oBAAA,CACF,CAAA,CAAA,CACpB,EAEArD,EAAAA,IAACuC,EAAAA,aACI,CAAA,SAAAlB,EAAQ,QAAkBH,EAAO,OAAUA,EAAO,OAAS,iCAChE,CAAA,CAAA,EAEJ,CAAA,EAEJ,CAAA,EACJ,EAEAiB,EAAAA,KAACmB,EAAAA,cAAc,CAAA,SAAU,SACpB,SAAA,CAAA5C,GAAgBV,EAAA,IAAAqC,aAAA,CAAW,UAAW,eAAgB,SAEvD,sCAAA,EACArC,EAAA,IAACuD,EAAA,OAAA,CAAO,QAAS,OACT,QAAS,IAAM,CACChD,GAChB,EAAG,SAAA,QAAA,CAEX,EACAP,EAAA,IAACwD,EAAA,cAAA,CACG,QAAQ,SACR,MAAM,UACN,KAAK,SACL,SAAU,CAAChC,EACX,QAASJ,EACT,gBAAYqC,EAAQ,SAAA,EAAA,EAEnB,WAAY,cAAgB,QAAA,CACjC,CAAA,EACJ,CAAA,CAAA,CAAA,EAGR,CAAA,CAAA,CAGZ,CC9YO,MAAMC,EAAwB,CACjC,CACI,GAAI,QACJ,KAAM,QACN,QAAS,EACb,EACA,CACI,GAAI,SACJ,KAAM,SACN,QAAS,GACT,mBAAoB,CAChB,KAAM,GACN,OAAQ,GACR,KAAM,GACN,OAAQ,EACZ,EACA,OAAQ,CACJ,kBAAmB,GACnB,gBAAiB,MACjB,kBAAmB,KACvB,CACJ,EACA,CACI,GAAI,SACJ,KAAM,SACN,QAAS,GACT,mBAAoB,CAChB,KAAM,GACN,OAAQ,GACR,KAAM,GACN,OAAQ,EACZ,CACJ,CACJ,ECfO,SAASC,EAAW,CACI,cAAAC,EACA,SAAAtD,CACJ,EAGxB,CAEO,KAAA,CACF,MAAA1G,EACA,SAAAiF,EACA,WAAAK,EACA,0BAAAxC,GACAiD,EAAkB,EAEhB,CAACkE,EAAiBC,CAAkB,EAAIlD,EAAAA,SAA2B,MAAS,EAC5E,CAACmD,EAAkBC,CAAmB,EAAIpD,WAAkB,EAAK,EAEhE,OAAAuB,EAAA,KAAC,MAAA,CACJ,UAAU,uBACV,SAAA,CAAAA,OAACM,EAAAA,MACG,CAAA,SAAA,CAAAN,OAACO,EAAAA,YACG,CAAA,SAAA,CAAA1C,EAAA,IAAC2C,EAAU,UAAA,CAAA,OAAQ,GAAM,UAAU,OAAO,EACzC3C,EAAA,IAAA2C,EAAA,UAAA,CAAU,OAAQ,GAAM,SAAI,OAAA,QAC5BA,EAAAA,UAAU,CAAA,OAAQ,GAAM,UAAW,eAAgB,SAAQ,WAAA,EAC3D3C,EAAA,IAAA2C,EAAA,UAAA,CAAU,OAAQ,GAAM,SAAmB,sBAAA,CAAA,EAChD,SAECC,EAAAA,UACI,CAAA,SAAA,CAAShJ,GAAAA,EAAM,IAAKE,GAAS,CAC1B,MAAMmK,EAAenK,EAAK,SAAWA,EAAK,oBAAoB,OACxDoK,EAAapK,EAAK,SAAWA,EAAK,oBAAoB,KACtDqK,EAAerK,EAAK,SAAWA,EAAK,oBAAoB,KACxDsK,EAAetK,EAAK,SAAWA,EAAK,oBAAoB,OAE1D,OAAAqI,EAAA,KAACU,EAAA,SAAA,CAEG,QAAS,IAAM,CACXe,EAAc9J,CAAI,CACtB,EAEA,SAAA,CAAAkG,EAAA,IAAC2C,EAAU,UAAA,CAAA,MAAO,CAAE,MAAO,MAAO,EAC7B,SAAC,CAAA7I,EAAK,SACHkG,EAAAA,IAAC8C,EAAQ,QAAA,CAAA,MAAO,mBACZ,SAAA9C,EAAA,IAACqE,EAAA,WAAA,CACG,KAAM,QACN,SAAU,CAAC/D,EACX,QAAU6C,IACNA,EAAM,gBAAgB,EACfW,EAAmBhK,CAAI,GAElC,eAACwK,EAAU,WAAA,EAAA,CAAA,GAEnB,CACR,CAAA,EACCtE,MAAA2C,EAAAA,UAAA,CACG,SAAC3C,EAAAA,IAAAH,EAAA,CAAS,KAAA/F,CAAW,CAAA,EACzB,EACAkG,EAAAA,IAAC2C,EAAAA,UAAU,CAAA,UAAW,eAClB,SAAA3C,EAAA,IAAC+C,YAAS,QAASjJ,EAAK,SAAW,EAAA,CAAM,CAC7C,CAAA,EACAkG,EAAA,IAAC2C,EACG,UAAA,CAAA,SAAAR,EAAAA,KAAC,KACI,CAAA,SAAA,CAAgB8B,GAAAjE,EAAAA,IAAC,MAAG,SAAM,QAAA,CAAA,EAC1BkE,GAAelE,EAAAA,IAAA,KAAA,CAAG,SAAI,MAAA,CAAA,EACtBmE,GAAiBnE,EAAAA,IAAA,KAAA,CAAG,SAAM,QAAA,CAAA,EAC1BoE,GAAiBpE,EAAAA,IAAA,KAAA,CAAG,SAAM,QAAA,CAAA,CAAA,CAAA,CAC/B,CACJ,CAAA,CAAA,CAAA,EAhCKlG,EAAK,IAAA,CAiCd,CAEP,GAEC,CAACF,GAASA,EAAM,SAAW,IAAOoG,MAAA6C,EAAAA,SAAA,CAChC,SAAC7C,EAAA,IAAA2C,EAAA,UAAA,CAAU,QAAS,EAChB,SAACR,EAAAA,KAAAoC,EAAAA,aAAA,CAAa,UAAW,wCACrB,SAAA,CAACvE,EAAA,IAAAqC,EAAA,WAAA,CAAW,QAAS,QAAS,SAE9B,gCAAA,EACC3F,GAA6BsD,EAAA,IAACuD,EAAA,OAAA,CAAO,QAAS,WACT,QAAS,IAAM,CACGG,EAAA,QAAS5J,GAAS,CAC5B+E,EAAS/E,CAAI,CAAA,CAChB,CACL,EAAG,SAAA,sBAAA,CAEzC,CAAA,CACJ,CAAA,CACJ,CAAA,EACJ,CAAA,EAEJ,CAAA,EAEJ,EAEAkG,EAAA,IAACwE,EAAA,yBAAA,CACG,KAAM,EAAQX,EACd,QAASE,EACT,SAAU,IAAM,CACRF,IACAG,EAAoB,EAAI,EACb9E,EAAA2E,CAAe,EACrB,KAAK,IAAM,CACRC,EAAmB,MAAS,CAAA,CAC/B,EACA,QAAQ,IAAM,CACXE,EAAoB,EAAK,CAAA,CAC5B,EAEb,EACA,SAAU,IAAM,CACZF,EAAmB,MAAS,CAChC,EACA,wBAAS,SAAO,SAAA,CAAA,EAChB,uBAAQ,SAA0C,4CAAA,CAAA,CAAA,CAAI,CAAA,CAAA,CAAA,CAGlE,CCjIO,MAAMW,EAAY3H,EAAM,KAC3B,SAAmB,CAAE,SAAA2C,GAA4C,CAEvD,KAAA,CAAE,YAAAe,GAAgBkE,EAAAA,0BAClB,CAACC,EAAYC,CAAa,EAAIhE,WAAS,EAAK,EAC5C,CAACiE,EAAcC,CAAe,EAAIlE,EAA2B,SAAA,EAE7D,CAAE,aAAAnE,GAAiBkD,IAEnBiE,EAAgBtF,cAAa3E,GAAe,CAC9CiL,EAAc,EAAI,EAClBE,EAAgBnL,CAAI,CACxB,EAAG,CAAE,CAAA,EAEC4G,EAAc,IAAM,CACtBuE,EAAgB,MAAS,EACzBF,EAAc,EAAK,CAAA,EAGvB,OACKzC,EAAAA,KAAA4C,EAAAA,UAAA,CAAU,UAAU,kCAAkC,SAAU,MAE5D,SAAA,CAAAtF,EAED0C,EAAAA,KAAC,MAAI,CAAA,UAAU,0BACX,SAAA,CAAAnC,EAAA,IAACqC,EAAA,WAAA,CAAW,aAAY,GAAC,QAAQ,KACrB,UAAU,YACV,UAAU,KAAK,SAAA,OAAA,CAE3B,QACCS,EAAAA,QAAQ,CAAA,MAAQrG,EAAmD,OAApC,kCAC5B,SAAAuD,EAAA,IAACuD,EAAA,OAAA,CACG,KAAM,QACN,SAAU,CAAC9G,EACX,gBAAYuI,EAAO,QAAA,EAAA,EACnB,QAAS,IAAMJ,EAAc,EAAI,EAAG,SAAA,UAAA,CAAA,EAG5C,CAAA,EACJ,QAECjB,EAAW,CAAA,cAAAC,EAA8B,SAAU,EAAQnH,EAAc,EAE1EuD,EAAA,IAACI,EAAA,CAEG,KAAMuE,EACN,KAAME,EACN,SAAUpI,EACV,YAAA+D,EACA,YAAAD,CAAA,EALKsE,GAAc,IAAM,KAKA,CAEjC,CAAA,CAAA,CAER,CAAC,ECxCQI,GAAgB9E,EAAI,OAAO,EAAE,MAAM,CAC5C,YAAaA,EAAI,SAAS,SAAS,UAAU,EAC7C,MAAOA,EAAI,OAAA,EAAS,MAAM,EAAE,SAAS,UAAU,EAC/C,MAAOA,EAAI,QAAQ,IAAI,CAAC,CAC5B,CAAC,EAED,SAAS+E,GAAgBC,EAAkBxL,EAAYyD,EAAexD,EAAewL,EAAiB,CAClG,MAAMC,EAASjI,EAAM,OAAOC,GAAKA,EAAE,OAAO,IAAI/C,GAAKA,EAAE,EAAE,EAAE,SAAS,OAAO,CAAC,EACpEgL,EAAoBH,EAAW,OAAO,OAAS7K,EAAE,EAAE,EAAE,SAAS,OAAO,EAGvE,IAFmB,CAAC8K,GAAY,CAAC7K,EAAc6K,EAAS,OAAS,GAAIzL,EAAK,OAAS,CAAE,CAAA,IAEnE,CAAC2L,EACb,MAAA,IAAI,MAAM,8BAA8B,EAO9C,GAHqBF,GAAYA,EAAS,OAAO,IAAS9K,GAAAA,EAAE,EAAE,EAAE,SAAS,OAAO,GAAK,CAACX,EAAK,OAAO,OAASW,EAAE,EAAE,EAAE,SAAS,OAAO,GAG7G+K,EAAO,SAAW,EAChC,MAAA,IAAI,MAAM,kCAAkC,EAE/C,MAAA,EACX,CAEO,SAASE,GAAgB,CACI,KAAAlF,EACA,KAAMmF,EACN,YAAAjF,CACJ,EAI7B,CAEC,MAAMkF,EAAqBC,EAAAA,wBACrB,CACF,KAAMC,GACNC,EAAkB,kBAAA,EAChB,CACF,SAAAvH,EACA,MAAAjB,EACA,MAAAxD,GACA+F,EAAkB,EAChBkG,EAAY,CAACL,EAEbM,EAAgBxH,cAAayH,GAAmC,CAClE,GAAI,CAACJ,EACK,MAAA,IAAI,MAAM,uBAAuB,EAEvC,GAAA,CACA,OAAAT,GAAgBS,EAAcI,EAAW3I,EAAOxD,EAAO4L,CAAQ,EACxDnH,EAAS0H,CAAS,QACpB7H,EAAQ,CACN,OAAA,QAAQ,OAAOA,CAAC,CAC3B,CAAA,EACD,CAACtE,EAAOyE,EAAUmH,EAAUpI,EAAOuI,CAAY,CAAC,EAE7C7E,EAASC,EAAAA,gBAAgB,CAC3B,cAAeyE,GAAY,CACvB,YAAa,GACb,MAAO,GACP,MAAO5L,EAAM,OAAYU,GAAAA,EAAE,KAAO,QAAQ,CAC9C,EACA,WAAa2G,GACFgE,GAAc,SAAShE,EAAQ,CAAE,WAAY,EAAO,CAAA,EACtD,KAAK,KACK,GACV,EAAE,MAAO/C,GACCA,EAAE,MAAM,OAAO,CAAC8H,EAAU7E,KACzB6E,EAAA7E,EAAM,IAAI,EAAIA,EAAM,QACjB6E,GACR,CAAE,CAAA,CACR,EAET,SAAU,CAACrM,EAAYqH,IAEZ8E,EAAcnM,CAAI,EACpB,KAAK,IAAM,CACI4G,IACZS,EAAiB,UAAU,CACvB,OAAQrH,CAAA,CACX,CAAA,CACJ,EAAE,MAAOuE,GAAM,CACZuH,EAAmB,KAAK,CACpB,KAAM,QACN,QAASvH,EAAE,OAAA,CACd,CAAA,CACJ,CACT,CACH,EAEK,CACF,aAAAkD,EACA,QAAAC,EACA,aAAAC,EACA,OAAAL,EACA,OAAAC,EACA,cAAAK,EACA,MAAAC,EACA,aAAAyE,EACA,YAAAC,CACA,EAAApF,EAGA,OAAAd,EAAA,IAACiC,EAAA,OAAA,CACG,KAAA5B,EACA,aAAeA,GAAUA,EAAuB,OAAhBE,IAChC,SAAU,MAEV,SAAAP,EAAA,IAACkC,EAAO,OAAA,CAAA,MAAOpB,EACX,SAAAqB,EAAA,KAAC,OAAA,CACG,SAAU8D,EACV,aAAc,MACd,WAAU,GACV,MAAO,CACH,QAAS,OACT,cAAe,SACf,SAAU,WACV,OAAQ,MACZ,EACA,SAAA,CAAC9D,EAAAA,KAAAC,EAAAA,cAAA,CAAc,UAAU,mBACrB,SAAA,CAAApC,EAAA,IAAC,MAAA,CACG,UAAU,0BACV,SAAAA,EAAA,IAACqC,EAAA,WAAA,CAAW,QAAS,KACT,UAAU,YAAY,SAAA,MAAA,CAElC,CAAA,CACJ,EAEAF,EAAAA,KAAC,MAAI,CAAA,UAAW,0BAEZ,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAW,cACZ,SAAA,CAAAnC,EAAA,IAACsC,EAAA,UAAA,CACG,KAAK,cACL,SAAQ,GACR,MAAO4D,EAAc,GAAK,EAAQhF,EAAO,YACzC,MAAOD,EAAO,aAAe,GAC7B,SAAUK,EACV,mBAAiB,mBACjB,MAAM,MAAA,CACV,EACAtB,EAAAA,IAACuC,EAAAA,aACI,CAAA,SAAA2D,EAAc,GAAahF,EAAO,YAAeA,EAAO,YAAc,mBAC3E,CAAA,CAAA,EACJ,EACAiB,EAAAA,KAAC,MAAI,CAAA,UAAW,cACZ,SAAA,CAAAnC,EAAA,IAACsC,EAAA,UAAA,CACG,SAAQ,GACR,MAAO4D,EAAc,GAAK,EAAQhF,EAAO,MACzC,KAAK,QACL,MAAOD,EAAO,OAAS,GACvB,SAAUK,EACV,mBAAiB,oBACjB,MAAM,OAAA,CACV,EACAtB,EAAAA,IAACuC,EAAAA,aACI,CAAA,SAAA2D,EAAc,GAAahF,EAAO,MAASA,EAAO,MAAQ,oBAC/D,CAAA,CAAA,EACJ,EACAlB,EAAAA,IAAC,MAAI,CAAA,UAAW,cACZ,SAAAA,EAAA,IAACmG,EAAA,YAAA,CACG,MAAM,QACN,MAAOlF,EAAO,OAAO,OAAS3G,EAAE,EAAE,GAAK,CAAC,EACxC,mBAAqB8I,GAAoB7B,EAAc,QAAS6B,EAAM,IAAUnJ,GAAAL,EAAM,KAAUU,GAAAA,EAAE,KAAOL,CAAE,CAAS,CAAC,EACrH,YAAcmJ,GAAkB,CAC5B,MAAMgD,EAAWxM,EACZ,KAAME,GAASA,EAAK,KAAOsJ,CAAK,EACrC,OAAKgD,EACEpG,EAAAA,IAAC,MAAI,CAAA,UAAU,qCAClB,SAAAA,EAAA,IAACH,GAA4B,KAAMuG,CAAA,EAApBA,GAAU,EAAmB,CAChD,CAAA,EAHsB,IAI1B,EACC,SAAAxM,EAAM,IAAgBwM,GAAApG,EAAA,IAACqG,EAAA,gBAAA,CACgB,MAAOD,EAAS,GACpD,SAACpG,EAAA,IAAAH,EAAA,CAA4B,KAAMuG,CAAA,EAApBA,GAAU,EAAmB,CAAA,EAFHA,EAAS,EAAA,CAGpC,CAAA,CAAA,EAE1B,CAAA,EAEJ,CAAA,EAEJ,SAEC9C,EAAAA,cAEG,CAAA,SAAA,CAAAtD,EAAA,IAACuD,EAAA,OAAA,CAAO,QAAS,OACT,QAAS,IAAM,CACChD,GAChB,EAAG,SAAA,QAAA,CAEX,EAEAP,EAAA,IAACwD,EAAA,cAAA,CACG,QAAQ,SACR,MAAM,UACN,KAAK,SACL,SAAU,CAAChC,EACX,QAASJ,EACT,gBAAYqC,EAAQ,SAAA,EAAA,EAEnB,WAAY,cAAgB,QAAA,CACjC,CAAA,EACJ,CAAA,CAAA,CAAA,EAER,CAAA,CAAA,CAIZ,CCzMgB,SAAA6C,GAAW,CAAE,cAAAC,GAE1B,CAEO,KAAA,CACF,MAAAnJ,EACA,SAAAiB,EACA,WAAAW,GACAW,EAAiC,EAE/B6G,EAAiBZ,EAAAA,oBACjBH,EAAqBC,EAAAA,wBAErBe,EAA0BC,EAAAA,6BAC1BC,EAAkBF,GAAyB,OAASG,GAAQH,GAAyB,MAA8B,EAAI,OACvHI,EAAqBJ,GAAyB,gBAAkBK,oBAEhE,CAACC,EAAiBC,CAAkB,EAAIpG,EAAAA,SAA2B,MAAS,EAC5E,CAACmD,EAAkBC,CAAmB,EAAIpD,WAAkB,EAAK,EAGnE,OAAAuB,EAAA,KAAC,MAAI,CAAA,UAAU,gBAEX,SAAA,CAAAA,OAACM,EAAAA,MAEG,CAAA,SAAA,CAAAN,OAACO,EAAAA,YACG,CAAA,SAAA,CAAC1C,EAAAA,IAAA2C,EAAA,UAAA,CAAU,UAAU,eAAgB,CAAA,EACrC3C,EAAAA,IAAC2C,aAAU,SAAE,IAAA,CAAA,EACb3C,EAAAA,IAAC2C,aAAU,SAAK,OAAA,CAAA,EAChB3C,EAAAA,IAAC2C,aAAU,SAAI,MAAA,CAAA,EACf3C,EAAAA,IAAC2C,aAAU,SAAK,OAAA,CAAA,EAChB3C,EAAAA,IAAC2C,aAAU,SAAU,YAAA,CAAA,CAAA,EACzB,SACCC,EAAAA,UACI,CAAA,SAAA,CAASxF,GAAAA,EAAM,IAAKzD,GAAS,CAE1B,MAAMsN,EAAgCtN,EAAK,MAErCuN,EAAgBvN,EAAK,WAAawN,GAAO,OAAAxN,EAAK,WAAYkN,EAAY,CAAE,OAAQF,CAAiB,CAAA,EAAI,GAGvG,OAAAxE,EAAA,KAACU,EAAA,SAAA,CAEG,QAAS,IAAM,CACX0D,EAAc5M,CAAI,CACtB,EAEA,SAAA,CAAAqG,EAAAA,IAAC2C,aAAU,UAAW,OAClB,SAAC3C,MAAA8C,EAAAA,QAAA,CAAQ,MAAO,mBACZ,SAAA9C,EAAA,IAACqE,EAAA,WAAA,CACG,KAAM,QACN,QAAUlB,IACNA,EAAM,gBAAgB,EACf6D,EAAmBrN,CAAI,GAElC,eAAC2K,EAAU,WAAA,EAAA,CAAA,GAEnB,CACJ,CAAA,EACAtE,EAAAA,IAAC2C,EAAAA,UAAW,CAAA,SAAAhJ,EAAK,GAAI,CAAA,EACrBqG,EAAAA,IAAC2C,EAAAA,UAAW,CAAA,SAAAhJ,EAAK,KAAM,CAAA,EACtBqG,EAAA,IAAA2C,EAAA,UAAA,CAAU,UAAW,yBAA2B,WAAK,YAAY,EAClE3C,EAAAA,IAAC2C,EAAAA,WAAU,UAAU,aAChB,WACM3C,MAAA,MAAA,CAAI,UAAU,uBACZ,SAAUiH,EAAA,OACNjH,EAAA,IAAAH,EAAA,CAA4B,KAAMuG,CAAA,EAApBA,GAAU,EAAmB,CAAA,CAEpD,CAAA,EACE,KACV,EACApG,EAAAA,IAAC2C,aAAW,SAAcuE,CAAA,CAAA,CAAA,CAAA,EA7BrB,OAASvN,EAAK,GAAA,CA8BvB,CAEP,GAEC,CAACyD,GAASA,EAAM,SAAW,IAAO4C,MAAA6C,EAAAA,SAAA,CAChC,SAAC7C,EAAA,IAAA2C,EAAA,UAAA,CAAU,QAAS,EAChB,SAACR,EAAAA,KAAAoC,EAAAA,aAAA,CAAa,UAAW,wCACrB,SAAA,CAACvE,EAAA,IAAAqC,EAAA,WAAA,CAAW,QAAS,QAAS,SAE9B,yBAAA,EACArC,EAAA,IAACuD,EAAA,OAAA,CAAO,QAAS,WACT,QAAS,IAAM,CACP,GAAA,CAACiD,EAAe,MAAM,IACtB,MAAM,MAAM,6CAA6C,EAEpDnI,EAAA,CACL,IAAKmI,EAAe,MAAM,IAC1B,MAAOA,EAAe,MAAM,MAC5B,YAAaA,EAAe,MAAM,YAClC,SAAUA,EAAe,MAAM,SAC/B,WAAYA,EAAe,MAAM,WACjC,YAAaA,EAAe,MAAM,YAClC,MAAO,CAAC,CAAE,GAAI,QAAS,KAAM,QAAS,EACtC,eAAgB,IAAK,CACxB,EACI,KAAK,IAAM,CACRf,EAAmB,KAAK,CACpB,KAAM,UACN,QAAS,yBAAA,CACZ,CAAA,CACJ,EACA,MAAOtE,GAAU,CACdsE,EAAmB,KAAK,CACpB,KAAM,QACN,QAAS,sBAAwBtE,EAAM,OAAA,CAC1C,CAAA,CACJ,CACT,EAAG,SAAA,iCAAA,CAGX,CAAA,CACJ,CAAA,CACJ,CAAA,EACJ,CAAA,EAEJ,CAAA,EACJ,EAEAnB,EAAA,IAACwE,EAAA,yBAAA,CACG,KAAM,EAAQuC,EACd,QAAShD,EACT,SAAU,IAAM,CACRgD,IACA/C,EAAoB,EAAI,EACbhF,EAAA+H,CAAe,EACrB,KAAK,IAAM,CACRC,EAAmB,MAAS,CAAA,CAC/B,EACA,MAAO7F,GAAU,CACdsE,EAAmB,KAAK,CACpB,KAAM,QACN,QAAS,wBAA0BtE,EAAM,OAAA,CAC5C,CAAA,CACJ,EACA,QAAQ,IAAM,CACX6C,EAAoB,EAAK,CAAA,CAC5B,EAEb,EACA,SAAU,IAAM,CACZgD,EAAmB,MAAS,CAChC,EACA,wBAAS,SAAO,SAAA,CAAA,EAChB,uBAAQ,SAA0C,4CAAA,CAAA,CAAA,CAAI,CAC9D,CAAA,CAAA,CACR,CCxKa,MAAAI,GAAY,SAAmB,CAAE,SAAA3H,GAA4C,CAEtF,KAAM,CAACkF,EAAYC,CAAa,EAAIhE,EAAkB,SAAA,EAChD,CAACyG,EAAcC,CAAe,EAAI1G,EAA2B,SAAA,EAE7D,CAAE,MAAAxD,EAAO,WAAAZ,CAAW,EAAImD,EAAkB,EAE1C4H,EAAoB/K,IAAe,QAAcY,GAASA,EAAM,QAAUZ,EAE1E+J,EAAgBjI,cAAa3E,GAAe,CAC9C2N,EAAgB3N,CAAI,EACpBiL,EAAc,EAAI,CACtB,EAAG,CAAE,CAAA,EAECrE,EAAcjC,EAAAA,YAAY,IAAM,CAClCsG,EAAc,EAAK,EACnB0C,EAAgB,MAAS,CAC7B,EAAG,CAAE,CAAA,EAEL,OACKnF,EAAAA,KAAA4C,EAAAA,UAAA,CAAU,UAAU,kCAAkC,SAAU,MAE5D,SAAA,CAAAtF,EAED0C,EAAA,KAAC,MAAA,CACG,UAAU,0BACV,SAAA,CAAAnC,EAAA,IAACqC,EAAA,WAAA,CAAW,aAAY,GAAC,QAAQ,KACrB,UAAU,YACV,UAAU,KAAK,SAAA,OAAA,CAE3B,EACArC,EAAA,IAACuD,EAAA,OAAA,CACG,KAAM,QACN,SAAUgE,EACV,gBAAYvC,EAAO,QAAA,EAAA,EACnB,QAAS,IAAMJ,EAAc,EAAI,EAAG,SAAA,UAAA,CAExC,CAAA,CAAA,CACJ,EAEA5E,MAACsG,IAAW,cAAAC,EAA6B,EAEzCvG,EAAA,IAACuF,GAAA,CAEG,KAAMZ,GAAc,GACpB,KAAM0C,EACN,YAAA9G,CAAA,EAHK8G,GAAc,KAAO,KAGD,CAEjC,CAAA,CAAA,CAER,ECpDgB,SAAAG,GAAwB,CAAE,eAAA9H,GAExB,CAER,MAAA+H,EAAU/H,EAAe,MAAM,SAAW,EAC1CgI,EAAUhI,EAAe,MAAM,SAAW,EAEzC,MAAA,CACH,IAAK,kBACL,QAASA,EAAe,QAExB,SAAU,CACN,wBAAyB+H,GAAWC,EAC9B1H,EAAA,IAAC2H,GAAA,CACC,QAAAF,EACA,QAAAC,EACA,eAAAhI,CAAA,CACF,EAAA,MACV,EACA,SAAU,CACN,UAAWF,EACX,MAAO,CACH,eAAAE,CACJ,CACJ,CAAA,CAER,CAEO,SAASiI,GAAY,CACI,QAAAF,EACA,QAAAC,EACA,eAAAhI,CACJ,EAIzB,CAEC,MAAM8G,EAAiBZ,EAAAA,oBACjBH,EAAqBC,EAAAA,wBAErBkC,EAAcH,GAAWC,EACzB,qDACAD,EACI,4BACAC,EAAU,uBAAyB,OAGzC,OAAAvF,EAAA,KAACK,EAAA,MAAA,CACG,UAAW,gEACX,SAAA,CAAAxC,MAACqC,EAAAA,WAAW,CAAA,QAAS,YAAa,UAAW,YAAa,SAA2B,8BAAA,EACrFrC,EAAAA,IAACqC,cAAW,SAEZ,qGAAA,CAAA,EACAF,OAACoB,EAAAA,OAAO,CAAA,QAAS,IAAM,CACf,GAAA,CAACiD,EAAe,MAAM,IACtB,MAAM,MAAM,6CAA6C,EAEzDiB,GACA/H,EAAe,SAAS,CACpB,IAAK8G,EAAe,MAAM,IAC1B,MAAOA,EAAe,MAAM,MAC5B,YAAaA,EAAe,MAAM,YAClC,SAAUA,EAAe,MAAM,SAC/B,WAAYA,EAAe,MAAM,WACjC,YAAaA,EAAe,MAAM,YAClC,MAAO,CAAC,CACJ,GAAI,QACJ,KAAM,OAAA,CACT,EACD,eAAgB,IAAK,CACxB,EACI,KAAK,IAAM,CACRf,EAAmB,KAAK,CACpB,KAAM,UACN,QAAS,yBAAA,CACZ,CAAA,CACJ,EACA,MAAOtE,GAAU,CACdsE,EAAmB,KAAK,CACpB,KAAM,QACN,QAAS,sBAAwBtE,EAAM,OAAA,CAC1C,CAAA,CACJ,EAELuG,GACchE,EAAA,QAAS5J,GAAS,CAC5B4F,EAAe,SAAS5F,CAAI,CAAA,CAC/B,CAGL,EAAA,SAAA,CAAAkG,EAAA,IAACgF,EAAO,QAAA,EAAA,EACP4C,CAAA,EACL,CAAA,CAAA,CAAA,CAIZ,CCpGO,MAAMC,GAAsC,CAC/C,CACI,KAAM,QACN,KAAM,YACN,MAAO,QACP,KAAM,OACN,WAAOT,GAAS,EAAA,CACpB,EACA,CACI,KAAM,QACN,KAAM,QACN,MAAO,QACP,KAAM,WACN,WAAO3C,EAAS,EAAA,CACpB,CACJ"}