import F, { useEffect as ce, useCallback as k, useContext as Ie, useState as P } from "react";
import { getFirestore as Y, onSnapshot as ue, collection as ee, setDoc as me, doc as H, addDoc as Fe, deleteDoc as he } from "firebase/firestore";
import { jsx as e, jsxs as s, Fragment as K } from "react/jsx-runtime";
import { getColorSchemeForSeed as Pe, Chip as Ae, Dialog as fe, DialogContent as ge, Typography as A, TextField as Q, Paper as pe, Table as re, TableHeader as ie, TableCell as d, TableBody as oe, TableRow as W, Tooltip as V, Checkbox as I, Select as ne, SelectItem as L, DialogActions as Ce, Button as O, LoadingButton as ve, DoneIcon as we, IconButton as ye, DeleteIcon as be, CenteredView as Ne, Container as Ue, AddIcon as le, MultiSelect as Te, MultiSelectItem as Le } from "@firecms/ui";
import * as M from "yup";
import { toSnakeCase as Be, FieldCaption as B, DeleteConfirmationDialog as xe, useNavigationController as _e, useSnackbarController as se, useAuthController as ae, useCustomizationController as Ve, defaultDateFormat as Me } from "@firecms/core";
import { useCreateFormex as Re, getIn as J, Formex as De } from "@firecms/formex";
import { format as Oe } from "date-fns";
import * as $e from "date-fns/locale";
const fn = ["Admin"], qe = {
  read: !1,
  edit: !1,
  create: !1,
  delete: !1
};
function Ye({
  collection: t,
  user: r
}) {
  const n = r?.roles;
  if (n) {
    if (t.ownerId === r?.uid)
      return {
        read: !0,
        create: !0,
        edit: !0,
        delete: !0
      };
    {
      const l = {
        read: !1,
        create: !1,
        edit: !1,
        delete: !1
      };
      return n.map((i) => We(i, t.id)).reduce(te, l);
    }
  } else
    return qe;
}
function We(t, r) {
  const n = {
    read: t.isAdmin || t.defaultPermissions?.read,
    create: t.isAdmin || t.defaultPermissions?.create,
    edit: t.isAdmin || t.defaultPermissions?.edit,
    delete: t.isAdmin || t.defaultPermissions?.delete
  };
  return t.collectionPermissions && t.collectionPermissions[r] ? te(t.collectionPermissions[r], n) : t.defaultPermissions ? te(t.defaultPermissions, n) : n;
}
const te = (t, r) => ({
  read: t.read || r.read,
  create: t.create || r.create,
  edit: t.edit || r.edit,
  delete: t.delete || r.delete
});
function gn(t, r) {
  return t ? r.roles ? r.roles.map((n) => t.find((l) => l.id === n.id)).filter(Boolean) : [] : void 0;
}
const je = (t, r) => {
  const n = t.map((i) => i.id), l = r.map((i) => i.id);
  return n.length === r.length && n.every((i) => l.includes(i));
};
function pn(t, r) {
  if (!r)
    return;
  const n = ze(r), l = new Date(n.exp * 1e3);
  localStorage.setItem(`auth_token::${t}`, JSON.stringify({
    token: r,
    expiry: l
  }));
}
function Cn(t) {
  const r = localStorage.getItem(`auth_token::${t}`);
  if (r) {
    const n = JSON.parse(r);
    if (n.expiry = new Date(n.expiry), n.expiry > /* @__PURE__ */ new Date())
      return n.token;
  }
}
function vn() {
  for (let t = 0; t < localStorage.length; t++) {
    const r = localStorage.key(t);
    r?.startsWith("auth_token::") && localStorage.removeItem(r);
  }
}
function ze(t) {
  if (!t)
    throw new Error("No JWT token");
  const n = t.split(".")[1].replace(/-/g, "+").replace(/_/g, "/"), l = decodeURIComponent(window.atob(n).split("").map(function(i) {
    return "%" + ("00" + i.charCodeAt(0).toString(16)).slice(-2);
  }).join(""));
  return JSON.parse(l);
}
function wn(t, r = 10) {
  if (!/^#([0-9A-Fa-f]{3}){1,2}$/.test(t))
    throw new Error("Invalid color format");
  let n = t.substring(1).split("");
  n.length === 3 && (n = [n[0], n[0], n[1], n[1], n[2], n[2]]);
  let l = parseInt(n[0] + n[1], 16), i = parseInt(n[2] + n[3], 16), m = parseInt(n[4] + n[5], 16);
  return l = Math.floor(l * (1 - r / 100)), i = Math.floor(i * (1 - r / 100)), m = Math.floor(m * (1 - r / 100)), "#" + (l < 16 ? "0" : "") + l.toString(16) + (i < 16 ? "0" : "") + i.toString(16) + (m < 16 ? "0" : "") + m.toString(16);
}
function yn(t, r = 10) {
  if (!/^#([0-9A-Fa-f]{3}){1,2}$/.test(t))
    throw new Error("Invalid color format");
  let n = t.substring(1).split("");
  n.length === 3 && (n = [n[0], n[0], n[1], n[1], n[2], n[2]]);
  const l = parseInt(n[0] + n[1], 16), i = parseInt(n[2] + n[3], 16), m = parseInt(n[4] + n[5], 16), f = r / 100;
  return `rgba(${l}, ${i}, ${m}, ${f})`;
}
function bn({
  firebaseApp: t,
  usersPath: r = "__FIRECMS/config/users",
  rolesPath: n = "__FIRECMS/config/roles",
  usersLimit: l,
  canEditRoles: i = !0,
  allowDefaultRolesCreation: m,
  includeCollectionConfigPermissions: f
}) {
  const [v, R] = F.useState(!0), [w, c] = F.useState(!0), [S, U] = F.useState([]), [a, C] = F.useState([]), y = a.map((g) => ({
    ...g,
    roles: S.filter((p) => g.roles?.includes(p.id))
  })), [b, _] = F.useState(), [z, u] = F.useState(), h = v || w;
  ce(() => {
    if (!t || !n)
      return;
    const g = Y(t);
    return ue(
      ee(g, n),
      {
        next: (p) => {
          _(void 0);
          try {
            const N = Ge(p.docs);
            U(N);
          } catch (N) {
            console.error("Error loading roles", N), _(N);
          }
          R(!1);
        },
        error: (p) => {
          console.error("Error loading roles", p), _(p), R(!1);
        }
      }
    );
  }, [t, n]), ce(() => {
    if (!t || !r)
      return;
    const g = Y(t);
    return ue(
      ee(g, r),
      {
        next: (p) => {
          u(void 0);
          try {
            const N = Je(p.docs);
            C(N);
          } catch (N) {
            console.error("Error loading users", N), u(N);
          }
          c(!1);
        },
        error: (p) => {
          console.error("Error loading users", p), u(p), c(!1);
        }
      }
    );
  }, [t, r]);
  const x = k(async (g) => {
    if (!t)
      throw Error("useFirestoreUserManagement Firebase not initialised");
    const p = Y(t);
    if (!p || !r)
      throw Error("useFirestoreUserManagement Firestore not initialised");
    console.debug("Persisting user", g);
    const N = g.roles?.map((ke) => ke.id), {
      uid: q,
      ...Z
    } = g, de = {
      ...Z,
      roles: N
    };
    return q ? me(H(p, r, q), de, { merge: !0 }).then(() => g) : Fe(ee(p, r), de).then(() => g);
  }, [r, t]), D = k((g) => {
    if (!t)
      throw Error("useFirestoreUserManagement Firebase not initialised");
    const p = Y(t);
    if (!p || !n)
      throw Error("useFirestoreUserManagement Firestore not initialised");
    console.debug("Persisting role", g);
    const {
      id: N,
      ...q
    } = g, Z = H(p, n, N);
    return me(Z, q, { merge: !0 });
  }, [n, t]), T = k(async (g) => {
    if (!t)
      throw Error("useFirestoreUserManagement Firebase not initialised");
    const p = Y(t);
    if (!p || !r)
      throw Error("useFirestoreUserManagement Firestore not initialised");
    console.debug("Deleting", g);
    const { uid: N } = g;
    return he(H(p, r, N));
  }, [r, t]), o = k((g) => {
    if (!t)
      throw Error("useFirestoreUserManagement Firebase not initialised");
    const p = Y(t);
    if (!p || !n)
      throw Error("useFirestoreUserManagement Firestore not initialised");
    console.debug("Deleting", g);
    const { id: N } = g, q = H(p, n, N);
    return he(q);
  }, [n, t]), E = k(({
    collection: g,
    user: p
  }) => Ye({
    collection: g,
    user: p
  }), []), $ = k((g) => {
    if (!y)
      throw Error("Users not loaded");
    return y.find((N) => N.email?.toLowerCase() === g?.email?.toLowerCase())?.roles;
  }, [y]), G = k(({ user: g }) => {
    if (console.debug("Authenticating user", g), h)
      return console.warn("User management is still loading"), !1;
    if (y.length === 0 || y.find((N) => N.email?.toLowerCase() === g?.email?.toLowerCase()))
      return !0;
    throw Error("Could not find a user with the provided email in the user management system.");
  }, [h, y]);
  return {
    loading: h,
    roles: S,
    users: y,
    saveUser: x,
    saveRole: D,
    rolesError: b,
    deleteUser: T,
    deleteRole: o,
    usersLimit: l,
    usersError: z,
    canEditRoles: i === void 0 ? !0 : i,
    allowDefaultRolesCreation: m === void 0 ? !0 : m,
    includeCollectionConfigPermissions: !!f,
    collectionPermissions: E,
    defineRolesFor: $,
    authenticator: G
  };
}
const Je = (t) => t.map((r) => {
  const n = r.data();
  return {
    uid: r.id,
    ...n,
    created_on: n?.created_on?.toDate(),
    updated_on: n?.updated_on?.toDate()
  };
}), Ge = (t) => t.map((r) => ({
  id: r.id,
  ...r.data()
})), Ee = F.createContext({});
function He({
  children: t,
  userManagement: r
}) {
  return /* @__PURE__ */ e(Ee.Provider, { value: r, children: t });
}
const j = () => Ie(Ee);
function X({ role: t }) {
  let r;
  return t.isAdmin ? r = "blueDarker" : t.id === "editor" ? r = "yellowLight" : t.id === "viewer" ? r = "grayLight" : r = Pe(t.id), /* @__PURE__ */ e(
    Ae,
    {
      colorScheme: r,
      children: t.name
    },
    t.id
  );
}
const Ke = M.object().shape({
  id: M.string().required("Required"),
  name: M.string().required("Required")
});
function Qe({
  open: t,
  role: r,
  editable: n,
  handleClose: l,
  collections: i
}) {
  const { saveRole: m } = j(), f = !r, [v, R] = P(), w = k((o) => (R(void 0), m(o)), [m]), c = Re({
    initialValues: r ?? {
      name: ""
    },
    onSubmit: (o, E) => w(o).then(() => {
      E.resetForm({
        values: o
      }), l();
    }).catch(($) => R($)),
    validation: (o) => Ke.validate(o, { abortEarly: !1 }).then(() => ({})).catch((E) => {
      const $ = {};
      return E.inner.forEach((G) => {
        $[G.path] = G.message;
      }), $;
    })
  }), {
    isSubmitting: S,
    touched: U,
    values: a,
    errors: C,
    handleChange: y,
    setFieldValue: b,
    dirty: _,
    setFieldTouched: z
  } = c, u = a.isAdmin ?? !1, h = a.defaultPermissions?.create ?? !1, x = a.defaultPermissions?.read ?? !1, D = a.defaultPermissions?.edit ?? !1, T = a.defaultPermissions?.delete ?? !1;
  return F.useEffect(() => {
    !J(U, "id") && a.name && b("id", Be(a.name));
  }, [U, a.name]), /* @__PURE__ */ e(
    fe,
    {
      open: t,
      maxWidth: "4xl",
      children: /* @__PURE__ */ e(De, { value: c, children: /* @__PURE__ */ s(
        "form",
        {
          noValidate: !0,
          autoComplete: "off",
          onSubmit: c.handleSubmit,
          style: {
            display: "flex",
            flexDirection: "column",
            position: "relative",
            height: "100%"
          },
          children: [
            /* @__PURE__ */ s(ge, { className: "flex-grow", children: [
              /* @__PURE__ */ e(
                "div",
                {
                  className: "flex flex-row pt-12 pb-8",
                  children: /* @__PURE__ */ e(
                    A,
                    {
                      variant: "h4",
                      className: "flex-grow",
                      children: "Role"
                    }
                  )
                }
              ),
              /* @__PURE__ */ s("div", { className: "grid grid-cols-12 gap-8", children: [
                /* @__PURE__ */ s("div", { className: "col-span-12 md:col-span-8", children: [
                  /* @__PURE__ */ e(
                    Q,
                    {
                      name: "name",
                      required: !0,
                      error: U.name && !!C.name,
                      value: a.name,
                      disabled: u || !n,
                      onChange: y,
                      "aria-describedby": "name-helper-text",
                      label: "Name"
                    }
                  ),
                  /* @__PURE__ */ e(B, { children: U.name && C.name ? C.name : "Name of this role" })
                ] }),
                /* @__PURE__ */ s("div", { className: "col-span-12 md:col-span-4", children: [
                  /* @__PURE__ */ e(
                    Q,
                    {
                      name: "id",
                      required: !0,
                      error: U.id && !!C.id,
                      value: a.id,
                      disabled: !f || !n,
                      onChange: (o) => {
                        y(o), z("id", !0);
                      },
                      "aria-describedby": "id-helper-text",
                      label: "ID"
                    }
                  ),
                  /* @__PURE__ */ e(B, { children: U.id && C.id ? C.id : "ID of this role" })
                ] }),
                /* @__PURE__ */ s("div", { className: "col-span-12", children: [
                  /* @__PURE__ */ e(
                    pe,
                    {
                      className: "bg-inherit",
                      children: /* @__PURE__ */ s(re, { children: [
                        /* @__PURE__ */ s(ie, { children: [
                          /* @__PURE__ */ e(d, {}),
                          /* @__PURE__ */ e(
                            d,
                            {
                              align: "center",
                              children: "Create entities"
                            }
                          ),
                          /* @__PURE__ */ e(
                            d,
                            {
                              align: "center",
                              children: "Read entities"
                            }
                          ),
                          /* @__PURE__ */ e(
                            d,
                            {
                              align: "center",
                              children: "Update entities"
                            }
                          ),
                          /* @__PURE__ */ e(
                            d,
                            {
                              align: "center",
                              children: "Delete entities"
                            }
                          )
                        ] }),
                        /* @__PURE__ */ s(oe, { children: [
                          /* @__PURE__ */ s(W, { children: [
                            /* @__PURE__ */ e(
                              d,
                              {
                                scope: "row",
                                children: /* @__PURE__ */ e("strong", { children: "All collections" })
                              }
                            ),
                            /* @__PURE__ */ e(
                              d,
                              {
                                align: "center",
                                children: /* @__PURE__ */ e(
                                  V,
                                  {
                                    title: "Create entities in collections",
                                    children: /* @__PURE__ */ e(
                                      I,
                                      {
                                        disabled: u || !n,
                                        checked: (u || h) ?? !1,
                                        onCheckedChange: (o) => b("defaultPermissions.create", o)
                                      }
                                    )
                                  }
                                )
                              }
                            ),
                            /* @__PURE__ */ e(
                              d,
                              {
                                align: "center",
                                children: /* @__PURE__ */ e(
                                  V,
                                  {
                                    title: "Access all data in every collection",
                                    children: /* @__PURE__ */ e(
                                      I,
                                      {
                                        disabled: u || !n,
                                        checked: (u || x) ?? !1,
                                        onCheckedChange: (o) => b("defaultPermissions.read", o)
                                      }
                                    )
                                  }
                                )
                              }
                            ),
                            /* @__PURE__ */ e(
                              d,
                              {
                                align: "center",
                                children: /* @__PURE__ */ e(
                                  V,
                                  {
                                    title: "Update data in any collection",
                                    children: /* @__PURE__ */ e(
                                      I,
                                      {
                                        disabled: u || !n,
                                        checked: (u || D) ?? !1,
                                        onCheckedChange: (o) => b("defaultPermissions.edit", o)
                                      }
                                    )
                                  }
                                )
                              }
                            ),
                            /* @__PURE__ */ e(
                              d,
                              {
                                align: "center",
                                children: /* @__PURE__ */ e(
                                  V,
                                  {
                                    title: "Delete data in any collection",
                                    children: /* @__PURE__ */ e(
                                      I,
                                      {
                                        disabled: u || !n,
                                        checked: (u || T) ?? !1,
                                        onCheckedChange: (o) => b("defaultPermissions.delete", o)
                                      }
                                    )
                                  }
                                )
                              }
                            )
                          ] }),
                          i && i.map((o) => /* @__PURE__ */ s(W, { children: [
                            /* @__PURE__ */ e(
                              d,
                              {
                                scope: "row",
                                children: o.name
                              }
                            ),
                            /* @__PURE__ */ e(
                              d,
                              {
                                align: "center",
                                children: /* @__PURE__ */ e(
                                  I,
                                  {
                                    disabled: u || h || !n,
                                    checked: (u || h || J(a, `collectionPermissions.${o.path}.create`)) ?? !1,
                                    onCheckedChange: (E) => b(`collectionPermissions.${o.path}.create`, E)
                                  }
                                )
                              }
                            ),
                            /* @__PURE__ */ e(
                              d,
                              {
                                align: "center",
                                children: /* @__PURE__ */ e(
                                  I,
                                  {
                                    disabled: u || x || !n,
                                    checked: (u || x || J(a, `collectionPermissions.${o.path}.read`)) ?? !1,
                                    onCheckedChange: (E) => b(`collectionPermissions.${o.path}.read`, E)
                                  }
                                )
                              }
                            ),
                            /* @__PURE__ */ e(
                              d,
                              {
                                align: "center",
                                children: /* @__PURE__ */ e(
                                  I,
                                  {
                                    disabled: u || D || !n,
                                    checked: (u || D || J(a, `collectionPermissions.${o.path}.edit`)) ?? !1,
                                    onCheckedChange: (E) => b(`collectionPermissions.${o.path}.edit`, E)
                                  }
                                )
                              }
                            ),
                            /* @__PURE__ */ e(
                              d,
                              {
                                align: "center",
                                children: /* @__PURE__ */ e(
                                  I,
                                  {
                                    disabled: u || T || !n,
                                    checked: (u || T || J(a, `collectionPermissions.${o.path}.delete`)) ?? !1,
                                    onCheckedChange: (E) => b(`collectionPermissions.${o.path}.delete`, E)
                                  }
                                )
                              }
                            )
                          ] }, o.name))
                        ] })
                      ] })
                    }
                  ),
                  /* @__PURE__ */ e(B, { children: "You can customise the permissions that the users related to this role can perform in the entities of each collection" })
                ] }),
                /* @__PURE__ */ s("div", { className: "col-span-12 md:col-span-4", children: [
                  /* @__PURE__ */ s(
                    ne,
                    {
                      error: U.config && !!C.config,
                      id: "createCollections",
                      name: "createCollections",
                      label: "Create collections",
                      position: "item-aligned",
                      disabled: u || !n,
                      onChange: (o) => b("config.createCollections", o.target.value === "true"),
                      value: u || a.config?.createCollections ? "true" : "false",
                      renderValue: (o) => o === "true" ? "Yes" : "No",
                      children: [
                        /* @__PURE__ */ e(
                          L,
                          {
                            value: "true",
                            children: " Yes "
                          }
                        ),
                        /* @__PURE__ */ e(
                          L,
                          {
                            value: "false",
                            children: " No "
                          }
                        )
                      ]
                    }
                  ),
                  /* @__PURE__ */ e(B, { children: U.config && C.config ? C.config : "Can the user create collections" })
                ] }),
                /* @__PURE__ */ s("div", { className: "col-span-12 md:col-span-4", children: [
                  /* @__PURE__ */ s(
                    ne,
                    {
                      error: U.config && !!C.config,
                      id: "editCollections",
                      name: "editCollections",
                      label: "Edit collections",
                      disabled: u || !n,
                      position: "item-aligned",
                      onChange: (o) => b("config.editCollections", o.target.value === "own" ? "own" : o.target.value === "true"),
                      value: u ? "true" : a.config?.editCollections === "own" ? "own" : a.config?.editCollections ? "true" : "false",
                      renderValue: (o) => o === "own" ? "Own" : o === "true" ? "Yes" : "No",
                      children: [
                        /* @__PURE__ */ e(
                          L,
                          {
                            value: "true",
                            children: " Yes "
                          }
                        ),
                        /* @__PURE__ */ e(
                          L,
                          {
                            value: "false",
                            children: " No "
                          }
                        ),
                        /* @__PURE__ */ e(
                          L,
                          {
                            value: "own",
                            children: " Only his/her own "
                          }
                        )
                      ]
                    }
                  ),
                  /* @__PURE__ */ e(B, { children: U.config && C.config ? C.config : "Can the user edit collections" })
                ] }),
                /* @__PURE__ */ s("div", { className: "col-span-12 md:col-span-4", children: [
                  /* @__PURE__ */ s(
                    ne,
                    {
                      error: U.config && !!C.config,
                      id: "deleteCollections",
                      name: "deleteCollections",
                      label: "Delete collections",
                      disabled: u || !n,
                      position: "item-aligned",
                      onChange: (o) => b("config.deleteCollections", o.target.value === "own" ? "own" : o.target.value === "true"),
                      value: u ? "true" : a.config?.deleteCollections === "own" ? "own" : a.config?.deleteCollections ? "true" : "false",
                      renderValue: (o) => o === "own" ? "Own" : o === "true" ? "Yes" : "No",
                      children: [
                        /* @__PURE__ */ e(
                          L,
                          {
                            value: "true",
                            children: " Yes "
                          }
                        ),
                        /* @__PURE__ */ e(
                          L,
                          {
                            value: "false",
                            children: " No "
                          }
                        ),
                        /* @__PURE__ */ e(
                          L,
                          {
                            value: "own",
                            children: " Only his/her own "
                          }
                        )
                      ]
                    }
                  ),
                  /* @__PURE__ */ e(B, { children: U.config && C.config ? C.config : "Can the user delete collections" })
                ] })
              ] })
            ] }),
            /* @__PURE__ */ s(Ce, { position: "sticky", children: [
              v && /* @__PURE__ */ e(A, { className: "text-red-500", children: "There was an error saving this role" }),
              /* @__PURE__ */ e(
                O,
                {
                  variant: "text",
                  onClick: () => {
                    l();
                  },
                  children: "Cancel"
                }
              ),
              /* @__PURE__ */ e(
                ve,
                {
                  variant: "filled",
                  color: "primary",
                  type: "submit",
                  disabled: !_,
                  loading: S,
                  startIcon: /* @__PURE__ */ e(we, {}),
                  children: f ? "Create role" : "Update"
                }
              )
            ] })
          ]
        }
      ) })
    }
  );
}
const Se = [
  {
    id: "admin",
    name: "Admin",
    isAdmin: !0
  },
  {
    id: "editor",
    name: "Editor",
    isAdmin: !1,
    defaultPermissions: {
      read: !0,
      create: !0,
      edit: !0,
      delete: !0
    },
    config: {
      createCollections: !0,
      editCollections: "own",
      deleteCollections: "own"
    }
  },
  {
    id: "viewer",
    name: "Viewer",
    isAdmin: !1,
    defaultPermissions: {
      read: !0,
      create: !1,
      edit: !1,
      delete: !1
    }
  }
];
function Xe({
  onRoleClicked: t,
  editable: r
}) {
  const {
    roles: n,
    saveRole: l,
    deleteRole: i,
    allowDefaultRolesCreation: m
  } = j(), [f, v] = P(void 0), [R, w] = P(!1);
  return /* @__PURE__ */ s(
    "div",
    {
      className: "w-full overflow-auto",
      children: [
        /* @__PURE__ */ s(re, { children: [
          /* @__PURE__ */ s(ie, { children: [
            /* @__PURE__ */ e(d, { header: !0, className: "w-16" }),
            /* @__PURE__ */ e(d, { header: !0, children: "Role" }),
            /* @__PURE__ */ e(d, { header: !0, className: "items-center", children: "Is Admin" }),
            /* @__PURE__ */ e(d, { header: !0, children: "Default permissions" })
          ] }),
          /* @__PURE__ */ s(oe, { children: [
            n && n.map((c) => {
              const S = c.isAdmin || c.defaultPermissions?.create, U = c.isAdmin || c.defaultPermissions?.read, a = c.isAdmin || c.defaultPermissions?.edit, C = c.isAdmin || c.defaultPermissions?.delete;
              return /* @__PURE__ */ s(
                W,
                {
                  onClick: () => {
                    t(c);
                  },
                  children: [
                    /* @__PURE__ */ e(d, { style: { width: "64px" }, children: !c.isAdmin && /* @__PURE__ */ e(V, { title: "Delete this role", children: /* @__PURE__ */ e(
                      ye,
                      {
                        size: "small",
                        disabled: !r,
                        onClick: (y) => (y.stopPropagation(), v(c)),
                        children: /* @__PURE__ */ e(be, {})
                      }
                    ) }) }),
                    /* @__PURE__ */ e(d, { children: /* @__PURE__ */ e(X, { role: c }) }),
                    /* @__PURE__ */ e(d, { className: "items-center", children: /* @__PURE__ */ e(I, { checked: c.isAdmin ?? !1 }) }),
                    /* @__PURE__ */ e(d, { children: /* @__PURE__ */ s("ul", { children: [
                      S && /* @__PURE__ */ e("li", { children: "Create" }),
                      U && /* @__PURE__ */ e("li", { children: "Read" }),
                      a && /* @__PURE__ */ e("li", { children: "Update" }),
                      C && /* @__PURE__ */ e("li", { children: "Delete" })
                    ] }) })
                  ]
                },
                c.name
              );
            }),
            (!n || n.length === 0) && /* @__PURE__ */ e(W, { children: /* @__PURE__ */ e(d, { colspan: 4, children: /* @__PURE__ */ s(Ne, { className: "flex flex-col gap-4 my-8 items-center", children: [
              /* @__PURE__ */ e(A, { variant: "label", children: "You don't have any roles yet." }),
              m && /* @__PURE__ */ e(
                O,
                {
                  variant: "outlined",
                  onClick: () => {
                    Se.forEach((c) => {
                      l(c);
                    });
                  },
                  children: "Create default roles"
                }
              )
            ] }) }) })
          ] })
        ] }),
        /* @__PURE__ */ e(
          xe,
          {
            open: !!f,
            loading: R,
            onAccept: () => {
              f && (w(!0), i(f).then(() => {
                v(void 0);
              }).finally(() => {
                w(!1);
              }));
            },
            onCancel: () => {
              v(void 0);
            },
            title: /* @__PURE__ */ e(K, { children: "Delete?" }),
            body: /* @__PURE__ */ e(K, { children: "Are you sure you want to delete this role?" })
          }
        )
      ]
    }
  );
}
const Ze = F.memo(
  function({ children: r }) {
    const { collections: n } = _e(), [l, i] = P(!1), [m, f] = P(), { canEditRoles: v } = j(), R = k((c) => {
      i(!0), f(c);
    }, []);
    return /* @__PURE__ */ s(Ue, { className: "w-full flex flex-col py-4 gap-4", maxWidth: "6xl", children: [
      r,
      /* @__PURE__ */ s("div", { className: "flex items-center mt-12", children: [
        /* @__PURE__ */ e(
          A,
          {
            gutterBottom: !0,
            variant: "h4",
            className: "flex-grow",
            component: "h4",
            children: "Roles"
          }
        ),
        /* @__PURE__ */ e(V, { title: v ? void 0 : "Update plans to customise roles", children: /* @__PURE__ */ e(
          O,
          {
            size: "large",
            disabled: !v,
            startIcon: /* @__PURE__ */ e(le, {}),
            onClick: () => i(!0),
            children: "Add role"
          }
        ) })
      ] }),
      /* @__PURE__ */ e(Xe, { onRoleClicked: R, editable: !!v }),
      /* @__PURE__ */ e(
        Qe,
        {
          open: l,
          role: m,
          editable: v,
          collections: n,
          handleClose: () => {
            f(void 0), i(!1);
          }
        },
        m?.id ?? "new"
      )
    ] });
  }
), en = M.object().shape({
  displayName: M.string().required("Required"),
  email: M.string().email().required("Required"),
  roles: M.array().min(1)
});
function nn(t, r, n, l, i) {
  const m = n.filter((w) => w.roles?.map((c) => c.id).includes("admin")), f = t.roles?.map((w) => w.id).includes("admin");
  if ((!i || !je(i.roles ?? [], r.roles ?? [])) && !f)
    throw new Error("Only admins can change roles");
  if (i && i.roles?.map((w) => w.id).includes("admin") && !r.roles?.map((w) => w.id).includes("admin") && m.length === 1)
    throw new Error("There must be at least one admin");
  return !0;
}
function tn({
  open: t,
  user: r,
  handleClose: n
}) {
  const l = se(), {
    user: i
  } = ae(), {
    saveUser: m,
    users: f,
    roles: v
  } = j(), R = !r, w = k((h) => {
    if (!i)
      throw new Error("Logged user not found");
    try {
      return nn(i, h, f, v, r), m(h);
    } catch (x) {
      return Promise.reject(x);
    }
  }, [v, m, r, f, i]), c = Re({
    initialValues: r ?? {
      displayName: "",
      email: "",
      roles: v.filter((h) => h.id === "editor")
    },
    validation: (h) => en.validate(h, { abortEarly: !1 }).then(() => ({})).catch((x) => x.inner.reduce((D, T) => (D[T.path] = T.message, D), {})),
    onSubmit: (h, x) => w(h).then(() => {
      n(), x.resetForm({
        values: h
      });
    }).catch((D) => {
      l.open({
        type: "error",
        message: D.message
      });
    })
  }), {
    isSubmitting: S,
    touched: U,
    handleChange: a,
    values: C,
    errors: y,
    setFieldValue: b,
    dirty: _,
    handleSubmit: z,
    submitCount: u
  } = c;
  return /* @__PURE__ */ e(
    fe,
    {
      open: t,
      onOpenChange: (h) => h ? void 0 : n(),
      maxWidth: "4xl",
      children: /* @__PURE__ */ e(De, { value: c, children: /* @__PURE__ */ s(
        "form",
        {
          onSubmit: z,
          autoComplete: "off",
          noValidate: !0,
          style: {
            display: "flex",
            flexDirection: "column",
            position: "relative",
            height: "100%"
          },
          children: [
            /* @__PURE__ */ s(ge, { className: "h-full flex-grow", children: [
              /* @__PURE__ */ e(
                "div",
                {
                  className: "flex flex-row pt-4 pb-4",
                  children: /* @__PURE__ */ e(
                    A,
                    {
                      variant: "h4",
                      className: "flex-grow",
                      children: "User"
                    }
                  )
                }
              ),
              /* @__PURE__ */ s("div", { className: "grid grid-cols-12 gap-8", children: [
                /* @__PURE__ */ s("div", { className: "col-span-12", children: [
                  /* @__PURE__ */ e(
                    Q,
                    {
                      name: "displayName",
                      required: !0,
                      error: u > 0 && !!y.displayName,
                      value: C.displayName ?? "",
                      onChange: a,
                      "aria-describedby": "name-helper-text",
                      label: "Name"
                    }
                  ),
                  /* @__PURE__ */ e(B, { children: u > 0 && y.displayName ? y.displayName : "Name of this user" })
                ] }),
                /* @__PURE__ */ s("div", { className: "col-span-12", children: [
                  /* @__PURE__ */ e(
                    Q,
                    {
                      required: !0,
                      error: u > 0 && !!y.email,
                      name: "email",
                      value: C.email ?? "",
                      onChange: a,
                      "aria-describedby": "email-helper-text",
                      label: "Email"
                    }
                  ),
                  /* @__PURE__ */ e(B, { children: u > 0 && y.email ? y.email : "Email of this user" })
                ] }),
                /* @__PURE__ */ e("div", { className: "col-span-12", children: /* @__PURE__ */ e(
                  Te,
                  {
                    label: "Roles",
                    value: C.roles?.map((h) => h.id) ?? [],
                    onMultiValueChange: (h) => b("roles", h.map((x) => v.find((D) => D.id === x))),
                    renderValue: (h) => {
                      const x = v.find((D) => D.id === h);
                      return x ? /* @__PURE__ */ e("div", { className: "flex flex-wrap space-x-2 space-y-2", children: /* @__PURE__ */ e(X, { role: x }, x?.id) }) : null;
                    },
                    children: v.map((h) => /* @__PURE__ */ e(
                      Le,
                      {
                        value: h.id,
                        children: /* @__PURE__ */ e(X, { role: h }, h?.id)
                      },
                      h.id
                    ))
                  }
                ) })
              ] })
            ] }),
            /* @__PURE__ */ s(Ce, { children: [
              /* @__PURE__ */ e(
                O,
                {
                  variant: "text",
                  onClick: () => {
                    n();
                  },
                  children: "Cancel"
                }
              ),
              /* @__PURE__ */ e(
                ve,
                {
                  variant: "filled",
                  color: "primary",
                  type: "submit",
                  disabled: !_,
                  loading: S,
                  startIcon: /* @__PURE__ */ e(we, {}),
                  children: R ? "Create user" : "Update"
                }
              )
            ] })
          ]
        }
      ) })
    }
  );
}
function rn({ onUserClicked: t }) {
  const {
    users: r,
    saveUser: n,
    deleteUser: l
  } = j(), i = ae(), m = se(), f = Ve(), v = f?.locale ? $e[f?.locale] : void 0, R = f?.dateTimeFormat ?? Me, [w, c] = P(void 0), [S, U] = P(!1);
  return /* @__PURE__ */ s("div", { className: "overflow-auto", children: [
    /* @__PURE__ */ s(re, { children: [
      /* @__PURE__ */ s(ie, { children: [
        /* @__PURE__ */ e(d, { className: "truncate w-16" }),
        /* @__PURE__ */ e(d, { children: "ID" }),
        /* @__PURE__ */ e(d, { children: "Email" }),
        /* @__PURE__ */ e(d, { children: "Name" }),
        /* @__PURE__ */ e(d, { children: "Roles" }),
        /* @__PURE__ */ e(d, { children: "Created on" })
      ] }),
      /* @__PURE__ */ s(oe, { children: [
        r && r.map((a) => {
          const C = a.roles, y = a.created_on ? Oe(a.created_on, R, { locale: v }) : "";
          return /* @__PURE__ */ s(
            W,
            {
              onClick: () => {
                t(a);
              },
              children: [
                /* @__PURE__ */ e(d, { className: "w-10", children: /* @__PURE__ */ e(V, { title: "Delete this user", children: /* @__PURE__ */ e(
                  ye,
                  {
                    size: "small",
                    onClick: (b) => (b.stopPropagation(), c(a)),
                    children: /* @__PURE__ */ e(be, {})
                  }
                ) }) }),
                /* @__PURE__ */ e(d, { children: a.uid }),
                /* @__PURE__ */ e(d, { children: a.email }),
                /* @__PURE__ */ e(d, { className: "font-medium align-left", children: a.displayName }),
                /* @__PURE__ */ e(d, { className: "align-left", children: C ? /* @__PURE__ */ e("div", { className: "flex flex-wrap gap-2", children: C.map(
                  (b) => /* @__PURE__ */ e(X, { role: b }, b?.id)
                ) }) : null }),
                /* @__PURE__ */ e(d, { children: y })
              ]
            },
            "row_" + a.uid
          );
        }),
        (!r || r.length === 0) && /* @__PURE__ */ e(W, { children: /* @__PURE__ */ e(d, { colspan: 6, children: /* @__PURE__ */ s(Ne, { className: "flex flex-col gap-4 my-8 items-center", children: [
          /* @__PURE__ */ e(A, { variant: "label", children: "There are no users yet" }),
          /* @__PURE__ */ e(
            O,
            {
              variant: "outlined",
              onClick: () => {
                if (!i.user?.uid)
                  throw Error("UsersTable, authController misconfiguration");
                n({
                  uid: i.user?.uid,
                  email: i.user?.email,
                  displayName: i.user?.displayName,
                  photoURL: i.user?.photoURL,
                  providerId: i.user?.providerId,
                  isAnonymous: i.user?.isAnonymous,
                  roles: [{ id: "admin", name: "Admin" }],
                  created_on: /* @__PURE__ */ new Date()
                }).then(() => {
                  m.open({
                    type: "success",
                    message: "User added successfully"
                  });
                }).catch((a) => {
                  m.open({
                    type: "error",
                    message: "Error adding user: " + a.message
                  });
                });
              },
              children: "Add the logged user as an admin"
            }
          )
        ] }) }) })
      ] })
    ] }),
    /* @__PURE__ */ e(
      xe,
      {
        open: !!w,
        loading: S,
        onAccept: () => {
          w && (U(!0), l(w).then(() => {
            c(void 0);
          }).catch((a) => {
            m.open({
              type: "error",
              message: "Error deleting user: " + a.message
            });
          }).finally(() => {
            U(!1);
          }));
        },
        onCancel: () => {
          c(void 0);
        },
        title: /* @__PURE__ */ e(K, { children: "Delete?" }),
        body: /* @__PURE__ */ e(K, { children: "Are you sure you want to delete this user?" })
      }
    )
  ] });
}
const on = function({ children: r }) {
  const [n, l] = P(), [i, m] = P(), { users: f, usersLimit: v } = j(), R = v !== void 0 && f && f.length >= v, w = k((S) => {
    m(S), l(!0);
  }, []), c = k(() => {
    l(!1), m(void 0);
  }, []);
  return /* @__PURE__ */ s(Ue, { className: "w-full flex flex-col py-4 gap-4", maxWidth: "6xl", children: [
    r,
    /* @__PURE__ */ s(
      "div",
      {
        className: "flex items-center mt-12",
        children: [
          /* @__PURE__ */ e(
            A,
            {
              gutterBottom: !0,
              variant: "h4",
              className: "flex-grow",
              component: "h4",
              children: "Users"
            }
          ),
          /* @__PURE__ */ e(
            O,
            {
              size: "large",
              disabled: R,
              startIcon: /* @__PURE__ */ e(le, {}),
              onClick: () => l(!0),
              children: "Add user"
            }
          )
        ]
      }
    ),
    /* @__PURE__ */ e(rn, { onUserClicked: w }),
    /* @__PURE__ */ e(
      tn,
      {
        open: n ?? !1,
        user: i,
        handleClose: c
      },
      i?.uid ?? "new"
    )
  ] });
};
function Nn({ userManagement: t }) {
  const r = t.users.length === 0, n = t.roles.length === 0;
  return {
    key: "user_management",
    loading: t.loading,
    homePage: {
      additionalChildrenStart: r || n ? /* @__PURE__ */ e(
        ln,
        {
          noUsers: r,
          noRoles: n,
          userManagement: t
        }
      ) : void 0
    },
    provider: {
      Component: He,
      props: {
        userManagement: t
      }
    }
  };
}
function ln({
  noUsers: t,
  noRoles: r,
  userManagement: n
}) {
  const l = ae(), i = se();
  return /* @__PURE__ */ s(
    pe,
    {
      className: "my-4 flex flex-col px-4 py-6 bg-white dark:bg-slate-800 gap-2",
      children: [
        /* @__PURE__ */ e(A, { variant: "subtitle2", className: "uppercase", children: "Create your users and roles" }),
        /* @__PURE__ */ e(A, { children: "You have no users or roles defined. You can create default roles and add the current user as admin." }),
        /* @__PURE__ */ s(O, { onClick: () => {
          if (!l.user?.uid)
            throw Error("UsersTable, authController misconfiguration");
          t && n.saveUser({
            uid: l.user?.uid,
            email: l.user?.email,
            displayName: l.user?.displayName,
            photoURL: l.user?.photoURL,
            providerId: l.user?.providerId,
            isAnonymous: l.user?.isAnonymous,
            roles: [{
              id: "admin",
              name: "Admin"
            }],
            created_on: /* @__PURE__ */ new Date()
          }).then(() => {
            i.open({
              type: "success",
              message: "User added successfully"
            });
          }).catch((f) => {
            i.open({
              type: "error",
              message: "Error adding user: " + f.message
            });
          }), r && Se.forEach((f) => {
            n.saveRole(f);
          });
        }, children: [
          /* @__PURE__ */ e(le, {}),
          t && r ? "Create default roles and add current user as admin" : t ? "Add current user as admin" : r ? "Create default roles" : void 0
        ] })
      ]
    }
  );
}
const Un = [
  {
    path: "users",
    name: "CMS Users",
    group: "Admin",
    icon: "face",
    view: /* @__PURE__ */ e(on, {})
  },
  {
    path: "roles",
    name: "Roles",
    group: "Admin",
    icon: "gpp_good",
    view: /* @__PURE__ */ e(Ze, {})
  }
];
export {
  ln as IntroWidget,
  fn as RESERVED_GROUPS,
  X as RoleChip,
  Ke as RoleYupSchema,
  Qe as RolesDetailsForm,
  Xe as RolesTable,
  Ze as RolesView,
  tn as UserDetailsForm,
  Ee as UserManagementContext,
  He as UserManagementProvider,
  en as UserYupSchema,
  rn as UsersTable,
  on as UsersView,
  je as areRolesEqual,
  pn as cacheDelegatedLoginToken,
  vn as clearDelegatedLoginTokensCache,
  wn as darkenColor,
  Cn as getDelegatedLoginTokenFromCache,
  gn as getUserRoles,
  yn as hexToRgbaWithOpacity,
  Ye as resolveUserRolePermissions,
  bn as useFirestoreUserManagement,
  j as useUserManagement,
  Nn as useUserManagementPlugin,
  Un as userManagementAdminViews
};
//# sourceMappingURL=index.es.js.map
