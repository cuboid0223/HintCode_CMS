import { jsx as e, jsxs as a, Fragment as R } from "react/jsx-runtime";
import { FieldCaption as X, SearchIconsView as yr, toSnakeCase as xt, singular as br, IconForView as dt, ArrayContainer as Cr, serializeRegExp as Nr, useSnackbarController as Ie, resolveEnumValues as xr, isPropertyBuilder as ie, useCustomizationController as Ae, getFieldConfig as Le, ErrorBoundary as me, PropertyConfigBadge as $e, unslugify as wt, useNavigationController as Te, mergeDeep as K, DEFAULT_FIELD_CONFIGS as Kt, isValidRegExp as Pr, getFieldId as Wt, DeleteConfirmationDialog as ct, useLargeLayout as wr, makePropertiesEditable as He, resolveEntityView as Tr, useSelectionController as kr, CircularProgressCenter as ut, EntityCollectionTable as Or, slugify as Vr, useAuthController as _e, randomString as Ft, removeUndefined as Et, ErrorView as Zt, removeInitialAndTrailingSlashes as Ir, getDefaultPropertiesOrder as _r, joinCollectionLists as Fr } from "@firecms/core";
import * as Ue from "react";
import Y, { useState as j, useEffect as ue, useMemo as Jt, useCallback as J, useRef as je, useDeferredValue as Er, useContext as Qt } from "react";
import be from "react-fast-compare";
import { useAutoComplete as Sr, Container as ht, Typography as V, Tooltip as te, IconButton as ae, Chip as Pt, TextField as Oe, cn as fe, DebouncedTextField as W, Autocomplete as Ar, AutocompleteItem as Dr, ExpandablePanel as Tt, SettingsIcon as Ye, Select as Ne, SelectItem as ee, BooleanSwitchWithLabel as pt, Dialog as Fe, AutoAwesomeIcon as ft, Badge as Br, ListIcon as Mr, Button as z, CircularProgress as Ge, Paper as ge, DialogContent as De, DialogActions as Be, RuleIcon as zr, FileUploadIcon as Rr, MultiSelect as Ur, MultiSelectItem as St, Checkbox as At, cardMixin as Xt, cardClickableMixin as er, cardSelectedMixin as tr, FunctionsIcon as jr, RemoveCircleIcon as qr, defaultBorderMixin as kt, RemoveIcon as Lr, DragHandleIcon as $r, AddIcon as ce, SelectGroup as Dt, InfoLabel as Hr, DeleteIcon as mt, ContentCopyIcon as Yr, CodeIcon as Gr, Table as Bt, TableBody as Mt, TableRow as Ct, TableCell as Re, Alert as Kr, Icon as it, Card as rr, coolIconKeys as zt, Tabs as Wr, Tab as Nt, ArrowBackIcon as nt, LoadingButton as Rt, DoneIcon as Zr, Menu as Jr, MoreVertIcon as Qr, MenuItem as Xr, SaveIcon as ei, UndoIcon as ti } from "@firecms/ui";
import * as at from "yup";
import { useFormex as G, Field as $, getIn as I, useCreateFormex as Ot, Formex as Vt } from "@firecms/formex";
import { extractEnumFromValues as ri, buildPropertyFromData as ii, buildEntityPropertiesFromData as ni } from "@firecms/schema_inference";
import { DragDropContext as ai, Droppable as oi, Draggable as li } from "@hello-pangea/dnd";
import si from "json5";
import { Highlight as di, themes as ci } from "prism-react-renderer";
import { ImportFileUpload as ui, DataNewPropertiesMapping as pi, ImportNewPropertyFieldPreview as mi, getInferenceType as ir, convertDataToEntity as hi, useImportConfig as fi, ImportSaveInProgress as gi } from "@firecms/data_import_export";
import { useNavigate as vi } from "react-router";
const yi = at.object().shape({
  id: at.string().required("Required"),
  name: at.string().required("Required"),
  path: at.string().required("Required")
});
function bi({
  isNewCollection: t,
  reservedGroups: r,
  existingPaths: n,
  existingIds: i,
  groups: l,
  parentCollection: o
}) {
  const d = Y.useRef(null), {
    values: c,
    setFieldValue: u,
    handleChange: m,
    touched: p,
    errors: s,
    setFieldTouched: f,
    isSubmitting: g,
    submitCount: P
  } = G(), [y, x] = j(!1), [v, b] = j(!1), T = (h) => {
    u("name", h), !I(p, "path") && t && h && u("path", xt(h)), !I(p, "id") && t && h && u("id", xt(h)), !I(p, "singularName") && t && h && u("singularName", br(h));
  };
  ue(() => {
    s.id && b(!0);
  }, [s.id]);
  const w = /* @__PURE__ */ e(dt, { collectionOrView: c }), C = l?.filter((h) => !r?.includes(h)), {
    inputFocused: O,
    autoCompleteOpen: N,
    setAutoCompleteOpen: F
  } = Sr({
    ref: d
  }), D = !!o;
  let _;
  typeof c.customId == "object" ? _ = "code_defined" : c.customId === !0 ? _ = "true" : c.customId === !1 ? _ = "false" : c.customId === "optional" && (_ = "optional");
  const S = P > 0;
  return /* @__PURE__ */ e("div", { className: "overflow-auto my-auto", children: /* @__PURE__ */ a(ht, { maxWidth: "4xl", className: "flex flex-col gap-4 p-8 m-auto", children: [
    /* @__PURE__ */ a("div", { children: [
      /* @__PURE__ */ a(
        "div",
        {
          className: "flex flex-row py-2 pt-3 items-center",
          children: [
            /* @__PURE__ */ e(V, { variant: t ? "h4" : "h5", className: "flex-grow", children: t ? "New collection" : `${c?.name} collection` }),
            /* @__PURE__ */ e(te, { title: "Change icon", children: /* @__PURE__ */ e(
              ae,
              {
                shape: "square",
                onClick: () => x(!0),
                children: w
              }
            ) })
          ]
        }
      ),
      o && /* @__PURE__ */ e(Pt, { colorScheme: "tealDarker", children: /* @__PURE__ */ a(V, { variant: "caption", children: [
        "This is a subcollection of ",
        /* @__PURE__ */ e("b", { children: o.name })
      ] }) })
    ] }),
    /* @__PURE__ */ a("div", { className: "grid grid-cols-12 gap-4", children: [
      /* @__PURE__ */ a("div", { className: "col-span-12", children: [
        /* @__PURE__ */ e(
          Oe,
          {
            value: c.name ?? "",
            onChange: (h) => T(h.target.value),
            label: "Name",
            required: !0,
            error: S && !!s.name
          }
        ),
        /* @__PURE__ */ e(X, { error: p.name && !!s.name, children: p.name && s.name ? s.name : "Name of in this collection, usually a plural name (e.g. Products)" })
      ] }),
      /* @__PURE__ */ a("div", { className: fe("col-span-12 ", D ? "" : "sm:col-span-8"), children: [
        /* @__PURE__ */ e(
          $,
          {
            name: "path",
            as: W,
            label: "Path",
            disabled: !t,
            required: !0,
            error: S && !!s.path
          }
        ),
        /* @__PURE__ */ e(X, { error: p.path && !!s.path, children: p.path && s.path ? s.path : D ? "Relative path to the parent (no need to include the parent path)" : "Path that this collection is stored in, in the database" })
      ] }),
      !D && /* @__PURE__ */ a("div", { className: "col-span-12 sm:col-span-4 relative", children: [
        /* @__PURE__ */ e(
          Oe,
          {
            error: S && !!s.group,
            disabled: g,
            value: c.group ?? "",
            autoComplete: "off",
            onChange: (h) => u("group", h.target.value),
            name: "group",
            inputRef: d,
            label: "Group"
          }
        ),
        /* @__PURE__ */ e(
          Ar,
          {
            open: N && (C ?? []).length > 0,
            setOpen: F,
            children: C?.map((h, B) => /* @__PURE__ */ e(
              Dr,
              {
                onClick: () => {
                  F(!1), u("group", h ?? null);
                },
                children: /* @__PURE__ */ e("div", { className: "flex-grow", children: h })
              },
              B + "_" + h
            ))
          }
        ),
        /* @__PURE__ */ e(X, { children: S && s.group ? s.group : "Group of the collection" })
      ] }),
      /* @__PURE__ */ e("div", { className: "col-span-12", children: /* @__PURE__ */ e(
        Tt,
        {
          expanded: v,
          onExpandedChange: b,
          title: /* @__PURE__ */ a("div", { className: "flex flex-row text-gray-500", children: [
            /* @__PURE__ */ e(Ye, {}),
            /* @__PURE__ */ e(
              V,
              {
                variant: "subtitle2",
                className: "ml-2",
                children: "Advanced"
              }
            )
          ] }),
          initiallyExpanded: !1,
          children: /* @__PURE__ */ a("div", { className: "grid grid-cols-12 gap-4 p-4", children: [
            /* @__PURE__ */ a("div", { className: "col-span-12", children: [
              /* @__PURE__ */ e(
                $,
                {
                  name: "id",
                  as: W,
                  disabled: !t,
                  label: "Collection id",
                  error: S && !!s.id
                }
              ),
              /* @__PURE__ */ e(X, { error: p.id && !!s.id, children: p.id && s.id ? s.id : "This id identifies this collection. Typically the same as the path." })
            ] }),
            /* @__PURE__ */ a("div", { className: "col-span-12", children: [
              /* @__PURE__ */ e(
                Oe,
                {
                  error: S && !!s.singularName,
                  name: "singularName",
                  "aria-describedby": "singularName-helper",
                  onChange: (h) => (f("singularName", !0), m(h)),
                  value: c.singularName ?? "",
                  label: "Singular name"
                }
              ),
              /* @__PURE__ */ e(X, { error: S && !!s.singularName, children: S && s.singularName ? s.singularName : "Optionally define a singular name for your entities" })
            ] }),
            /* @__PURE__ */ a("div", { className: "col-span-12", children: [
              /* @__PURE__ */ e(
                Oe,
                {
                  error: S && !!s.description,
                  name: "description",
                  value: c.description ?? "",
                  onChange: m,
                  multiline: !0,
                  rows: 2,
                  "aria-describedby": "description-helper-text",
                  label: "Description"
                }
              ),
              /* @__PURE__ */ e(X, { error: S && !!s.description, children: S && s.description ? s.description : "Description of the collection, you can use markdown" })
            ] }),
            /* @__PURE__ */ e("div", { className: "col-span-12", children: /* @__PURE__ */ e(
              Ne,
              {
                name: "defaultSize",
                label: "Default row size",
                position: "item-aligned",
                onChange: m,
                value: c.defaultSize ?? "",
                renderValue: (h) => h.toUpperCase(),
                children: ["xs", "s", "m", "l", "xl"].map((h) => /* @__PURE__ */ e(
                  ee,
                  {
                    value: h,
                    children: h.toUpperCase()
                  },
                  `size-select-${h}`
                ))
              }
            ) }),
            /* @__PURE__ */ e("div", { className: "col-span-12", children: /* @__PURE__ */ a(
              Ne,
              {
                name: "customId",
                label: "Data IDs generation",
                position: "item-aligned",
                disabled: _ === "code_defined",
                onValueChange: (h) => {
                  if (h === "code_defined")
                    throw new Error("This should not happen");
                  h === "true" ? u("customId", !0) : h === "false" ? u("customId", !1) : h === "optional" && u("customId", "optional");
                },
                value: _ ?? "",
                renderValue: (h) => h === "code_defined" ? "Code defined" : h === "true" ? "Users must define an ID" : h === "optional" ? "Users can define an ID, but it is not required" : "Document ID is generated automatically",
                children: [
                  /* @__PURE__ */ e(ee, { value: "false", children: "Document ID is generated automatically" }),
                  /* @__PURE__ */ e(ee, { value: "true", children: "Users must define an ID" }),
                  /* @__PURE__ */ e(ee, { value: "optional", children: "Users can define an ID, but it is not required" })
                ]
              }
            ) }),
            /* @__PURE__ */ a("div", { className: "col-span-12", children: [
              /* @__PURE__ */ e(
                pt,
                {
                  position: "start",
                  label: "Collection group",
                  onValueChange: (h) => u("collectionGroup", h),
                  value: c.collectionGroup ?? !1
                }
              ),
              /* @__PURE__ */ e(X, { children: "A collection group consists of all collections with the same path. This allows you to query over multiple collections at once." })
            ] }),
            /* @__PURE__ */ a("div", { className: "col-span-12", children: [
              /* @__PURE__ */ e(
                pt,
                {
                  position: "start",
                  label: "Enable text search for this collection",
                  onValueChange: (h) => u("textSearchEnabled", h),
                  value: c.textSearchEnabled ?? !1
                }
              ),
              /* @__PURE__ */ e(X, { children: "Allow text search for this collection. If you have not specified a text search delegate, this will use the built-in local text search. This is not recommended for large collections, as it may incur in performance and cost issues." })
            ] })
          ] })
        }
      ) })
    ] }),
    /* @__PURE__ */ e("div", { style: { height: "52px" } }),
    /* @__PURE__ */ e(
      Fe,
      {
        open: y,
        onOpenChange: x,
        maxWidth: "xl",
        fullWidth: !0,
        children: /* @__PURE__ */ e("div", { className: "p-4 overflow-auto min-h-[200px]", children: /* @__PURE__ */ e(
          yr,
          {
            selectedIcon: c.icon,
            onIconSelected: (h) => {
              x(!1), u("icon", h);
            }
          }
        ) })
      }
    )
  ] }) });
}
function he(t) {
  return "properties." + t.replaceAll(".", ".properties.");
}
function nr(t) {
  return t ? "properties." + t.replaceAll(".", ".properties.") + ".properties" : "properties";
}
function Ce(t) {
  return t ? "properties." + t.replaceAll(".", ".properties.") + ".propertiesOrder" : "propertiesOrder";
}
function ne(t, r) {
  return r ? `${r}.${t}` : t;
}
function ar(t, r) {
  const n = r ? `${r}.${t}` : t;
  return he(n);
}
function Ci({
  enumValues: t,
  onValuesChanged: r,
  onError: n,
  updateIds: i,
  disabled: l,
  allowDataInference: o,
  getData: d
}) {
  const c = Ot({
    initialValues: { enumValues: t },
    validateOnChange: !0,
    validation: (p) => {
      const s = {};
      p.enumValues && p.enumValues.forEach((g, P) => {
        g?.label || (s.enumValues = s.enumValues ?? [], s.enumValues[P] = s.enumValues[P] ?? {}, s.enumValues[P].label = "You must specify a label for this enum value entry"), g?.id || (s.enumValues = s.enumValues ?? [], s.enumValues[P] = s.enumValues[P] ?? {}, s.enumValues[P].id = "You must specify an ID for this enum value entry");
      });
      const f = !!(s?.enumValues && Object.keys(s?.enumValues).length > 0);
      return n?.(f), s;
    }
  }), { values: u, errors: m } = c;
  return ue(() => {
    r && r(u.enumValues);
  }, [u.enumValues]), /* @__PURE__ */ e(Vt, { value: c, children: /* @__PURE__ */ e(
    Ni,
    {
      enumValuesPath: "enumValues",
      values: u,
      errors: m,
      shouldUpdateId: i,
      disabled: l,
      allowDataInference: o,
      getData: d
    }
  ) });
}
function Ni({
  values: t,
  errors: r,
  disabled: n,
  enumValuesPath: i,
  shouldUpdateId: l,
  allowDataInference: o,
  getData: d
}) {
  const {
    setFieldValue: c
  } = G(), [u, m] = Y.useState(), [p, s] = Y.useState(), [f, g] = Y.useState(!1), y = Y.useRef(/* @__PURE__ */ new Set()).current, x = (b, T) => {
    const w = u === T, C = r?.enumValues && r?.enumValues[b];
    return /* @__PURE__ */ e(
      xi,
      {
        index: b,
        disabled: n,
        enumValuesPath: i,
        autoFocus: w,
        entryError: C,
        shouldUpdateId: l || w,
        onDialogOpen: () => s(b),
        inferredEntry: y.has(t.enumValues[b]?.id)
      },
      `${T}`
    );
  };
  return /* @__PURE__ */ a("div", { className: "col-span-12", children: [
    /* @__PURE__ */ a("div", { className: "ml-3.5 flex flex-row items-center", children: [
      /* @__PURE__ */ e(Mr, {}),
      /* @__PURE__ */ e(
        V,
        {
          variant: "subtitle2",
          className: "ml-2 grow",
          children: "Values"
        }
      ),
      o && /* @__PURE__ */ a(
        z,
        {
          loading: f,
          disabled: n || f,
          variant: "text",
          size: "small",
          onClick: async () => {
            d && (g(!0), d?.().then((b) => {
              if (!b)
                return;
              const T = b.flat(), w = Array.from(new Set(T)), C = t.enumValues, N = ri(w).filter((F) => !C?.some((D) => D.id === F.id));
              N.forEach((F) => {
                y.add(F.id);
              }), c(i, [...N, ...C], !0);
            }).catch((b) => {
              console.error(b);
            }).finally(() => g(!1)));
          },
          children: [
            f ? /* @__PURE__ */ e(Ge, { size: "small" }) : /* @__PURE__ */ e(ft, {}),
            "Infer values from data"
          ]
        }
      )
    ] }),
    /* @__PURE__ */ a(ge, { className: "p-4 m-1", children: [
      /* @__PURE__ */ e(
        Cr,
        {
          droppableId: i,
          addLabel: "Add enum value",
          value: t.enumValues,
          disabled: n,
          size: "small",
          buildEntry: x,
          onInternalIdAdded: m,
          includeAddButton: !0,
          onValueChange: (b) => c(i, b),
          newDefaultEntry: { id: "", label: "" }
        }
      ),
      /* @__PURE__ */ e(
        Pi,
        {
          index: p,
          open: p !== void 0,
          enumValuesPath: i,
          onClose: () => s(void 0)
        }
      )
    ] })
  ] });
}
const xi = Y.memo(
  function({
    index: r,
    shouldUpdateId: n,
    enumValuesPath: i,
    autoFocus: l,
    onDialogOpen: o,
    disabled: d,
    inferredEntry: c,
    entryError: u
  }) {
    const {
      values: m,
      handleChange: p,
      errors: s,
      setFieldValue: f,
      touched: g
    } = G(), P = Y.useRef(!I(m, `${i}[${r}].id`)), y = n || P.current, x = I(m, `${i}[${r}].id`), v = I(m, `${i}[${r}].label`), b = Y.useRef(v);
    return Y.useEffect(() => {
      (b.current === x || !x) && y && f(`${i}[${r}].id`, v), b.current = v;
    }, [v]), /* @__PURE__ */ a(R, { children: [
      /* @__PURE__ */ a("div", { className: "flex w-full align-center justify-center", children: [
        /* @__PURE__ */ e(
          $,
          {
            name: `${i}[${r}].label`,
            as: W,
            className: "flex-grow",
            required: !0,
            disabled: d,
            size: "small",
            autoFocus: l,
            autoComplete: "off",
            endAdornment: c && /* @__PURE__ */ e(ft, { size: "small" }),
            error: !!u?.label
          }
        ),
        !d && /* @__PURE__ */ e(Br, { color: "error", invisible: !u?.id, children: /* @__PURE__ */ e(
          ae,
          {
            size: "small",
            "aria-label": "edit",
            className: "m-1",
            onClick: () => o(),
            children: /* @__PURE__ */ e(Ye, { size: "small" })
          }
        ) })
      ] }),
      u?.label && /* @__PURE__ */ e(
        V,
        {
          variant: "caption",
          className: "ml-3.5 text-red-500 dark:text-red-500",
          children: u?.label
        }
      ),
      u?.id && /* @__PURE__ */ e(
        V,
        {
          variant: "caption",
          className: "ml-3.5 text-red-500 dark:text-red-500",
          children: u?.id
        }
      )
    ] });
  },
  function(r, n) {
    return r.index === n.index && r.enumValuesPath === n.enumValuesPath && r.shouldUpdateId === n.shouldUpdateId && r.inferredEntry === n.inferredEntry && be(r.entryError, n.entryError) && r.autoFocus === n.autoFocus;
  }
);
function Pi({
  index: t,
  open: r,
  onClose: n,
  enumValuesPath: i
}) {
  const {
    errors: l
  } = G(), o = t !== void 0 ? I(l, `${i}[${t}].id`) : void 0;
  return /* @__PURE__ */ a(
    Fe,
    {
      maxWidth: "md",
      "aria-labelledby": "enum-edit-dialog",
      open: r,
      onOpenChange: (d) => d ? void 0 : n(),
      children: [
        /* @__PURE__ */ e(De, { children: t !== void 0 && /* @__PURE__ */ a("div", { children: [
          /* @__PURE__ */ e(
            $,
            {
              name: `${i}[${t}].id`,
              as: W,
              required: !0,
              label: "ID",
              size: "small",
              autoComplete: "off",
              error: !!o
            }
          ),
          /* @__PURE__ */ e(X, { error: !!o, children: o ?? "Value saved in the data source" })
        ] }) }),
        /* @__PURE__ */ e(Be, { children: /* @__PURE__ */ e(
          z,
          {
            autoFocus: !0,
            variant: "outlined",
            onClick: n,
            color: "primary",
            children: "Ok"
          }
        ) })
      ]
    }
  );
}
function le({
  field: t,
  form: r,
  label: n,
  tooltip: i,
  disabled: l,
  size: o = "small",
  allowIndeterminate: d
}) {
  const c = /* @__PURE__ */ e(
    pt,
    {
      label: n,
      size: o,
      position: "start",
      value: t.value,
      disabled: l,
      allowIndeterminate: d,
      onValueChange: (u) => r.setFieldValue(t.name, u)
    }
  );
  return i ? /* @__PURE__ */ e(
    te,
    {
      title: i,
      children: c
    }
  ) : c;
}
function Ee({ disabled: t }) {
  const { values: r, handleChange: n } = G(), i = "validation.required", l = "validation.requiredMessage";
  return /* @__PURE__ */ a(R, { children: [
    /* @__PURE__ */ e("div", { className: "col-span-6", children: /* @__PURE__ */ e(
      $,
      {
        name: i,
        type: "checkbox",
        children: ({ field: d, form: c }) => /* @__PURE__ */ e(
          le,
          {
            disabled: t,
            label: "Required",
            tooltip: "You won't be able to save this entity if this value is not set",
            form: c,
            field: d
          }
        )
      }
    ) }),
    /* @__PURE__ */ e("div", { className: "col-span-6", children: /* @__PURE__ */ e(
      $,
      {
        name: "validation.unique",
        type: "checkbox",
        children: ({ field: d, form: c }) => /* @__PURE__ */ e(
          le,
          {
            disabled: t,
            label: "Unique",
            tooltip: "There cannot be multiple entities with the same value",
            form: c,
            field: d
          }
        )
      }
    ) }),
    I(r, i) && /* @__PURE__ */ e("div", { className: "col-span-12", children: /* @__PURE__ */ e(
      W,
      {
        disabled: t,
        value: I(r, l),
        label: "Required message",
        name: l,
        size: "small",
        onChange: n
      }
    ) })
  ] });
}
function Se({
  length: t,
  lowercase: r,
  matches: n,
  max: i,
  min: l,
  trim: o,
  uppercase: d,
  disabled: c,
  showErrors: u
}) {
  const {
    values: m,
    handleChange: p,
    errors: s
  } = G(), f = "validation.length", g = "validation.min", P = "validation.max", y = "validation.trim", x = "validation.matches", v = "validation.lowercase", b = "validation.uppercase", T = I(s, x), w = I(m, x), C = typeof w == "string" ? w : Nr(w);
  return /* @__PURE__ */ a("div", { className: "grid grid-cols-12 gap-2", children: [
    /* @__PURE__ */ e(Ee, { disabled: c }),
    /* @__PURE__ */ a("div", { className: "grid grid-cols-12 gap-2 col-span-12", children: [
      r && /* @__PURE__ */ e("div", { className: "col-span-4", children: /* @__PURE__ */ e(
        $,
        {
          name: v,
          type: "checkbox",
          children: ({ field: O, form: N }) => /* @__PURE__ */ e(
            le,
            {
              label: "Lowercase",
              disabled: c,
              form: N,
              field: O
            }
          )
        }
      ) }),
      d && /* @__PURE__ */ e("div", { className: "col-span-4", children: /* @__PURE__ */ e(
        $,
        {
          name: b,
          type: "checkbox",
          children: ({ field: O, form: N }) => /* @__PURE__ */ e(
            le,
            {
              label: "Uppercase",
              disabled: c,
              form: N,
              field: O
            }
          )
        }
      ) }),
      o && /* @__PURE__ */ e("div", { className: "col-span-4", children: /* @__PURE__ */ e(
        $,
        {
          name: y,
          type: "checkbox",
          children: ({ field: O, form: N }) => /* @__PURE__ */ e(
            le,
            {
              label: "Trim",
              disabled: c,
              form: N,
              field: O
            }
          )
        }
      ) })
    ] }),
    /* @__PURE__ */ a("div", { className: "grid grid-cols-12 gap-2 col-span-12", children: [
      t && /* @__PURE__ */ e("div", { className: "col-span-4", children: /* @__PURE__ */ e(
        W,
        {
          value: I(m, f),
          label: "Exact length",
          name: f,
          type: "number",
          size: "small",
          disabled: c,
          onChange: p
        }
      ) }),
      l && /* @__PURE__ */ e("div", { className: "col-span-4", children: /* @__PURE__ */ e(
        W,
        {
          value: I(m, g),
          label: "Min length",
          name: g,
          type: "number",
          size: "small",
          disabled: c,
          onChange: p
        }
      ) }),
      i && /* @__PURE__ */ e("div", { className: "col-span-4", children: /* @__PURE__ */ e(
        W,
        {
          value: I(m, P),
          label: "Max length",
          name: P,
          type: "number",
          size: "small",
          disabled: c,
          onChange: p
        }
      ) })
    ] }),
    n && /* @__PURE__ */ a("div", { className: "col-span-12", children: [
      /* @__PURE__ */ e(
        $,
        {
          name: x,
          as: W,
          label: "Matches regex",
          size: "small",
          disabled: c,
          value: C,
          error: !!T
        }
      ),
      /* @__PURE__ */ e(X, { error: !!T, children: T ? "Not a valid regexp" : "e.g. /^\\d+$/ for digits only" })
    ] })
  ] });
}
function It({
  max: t = !0,
  min: r = !0,
  disabled: n
}) {
  const {
    values: i,
    handleChange: l
  } = G(), o = "validation.min", d = "validation.max";
  return /* @__PURE__ */ a("div", { className: "grid grid-cols-12 gap-2", children: [
    /* @__PURE__ */ e(Ee, { disabled: n }),
    r && /* @__PURE__ */ e("div", { className: "col-span-6", children: /* @__PURE__ */ e(
      W,
      {
        value: I(i, o),
        disabled: n,
        label: "Min length",
        name: o,
        type: "number",
        size: "small",
        onChange: l
      }
    ) }),
    t && /* @__PURE__ */ e("div", { className: "col-span-6", children: /* @__PURE__ */ e(
      W,
      {
        value: I(i, d),
        disabled: n,
        label: "Max length",
        name: d,
        type: "number",
        size: "small",
        onChange: l
      }
    ) })
  ] });
}
function xe({
  children: t
}) {
  return /* @__PURE__ */ e(
    Tt,
    {
      initiallyExpanded: !1,
      asField: !0,
      className: "p-4",
      title: /* @__PURE__ */ a("div", { className: "flex flex-row text-gray-500", children: [
        /* @__PURE__ */ e(zr, {}),
        /* @__PURE__ */ e(
          V,
          {
            variant: "subtitle2",
            className: "ml-2",
            children: "Validation"
          }
        )
      ] }),
      children: t
    }
  );
}
function Ut({
  multiselect: t,
  updateIds: r,
  disabled: n,
  showErrors: i,
  allowDataInference: l,
  getData: o
}) {
  const {
    values: d,
    setFieldError: c,
    setFieldValue: u
  } = G(), m = Ie(), p = t ? "of.enumValues" : "enumValues", s = I(d, "defaultValue"), f = I(d, p), g = Jt(() => !f || typeof f == "boolean" ? [] : xr(f) ?? [], [f]);
  return /* @__PURE__ */ a(R, { children: [
    /* @__PURE__ */ e("div", { className: "col-span-12", children: /* @__PURE__ */ e(
      Ci,
      {
        enumValues: g,
        updateIds: r,
        disabled: n,
        allowDataInference: l,
        onError: (y) => {
          c(p, y ? "This enum property is missing some values" : void 0);
        },
        getData: o ? () => o().then((y) => y.map((x) => d.id && I(x, d.id)).filter(Boolean)) : void 0,
        onValuesChanged: (y) => {
          if (d && (u(p, y), !t)) {
            const x = y.filter((v) => !!v?.id).map((v) => v.id);
            s && !x.includes(s) && (u("defaultValue", void 0), m.open({
              type: "warning",
              message: "Default value was cleared"
            }));
          }
        }
      }
    ) }),
    /* @__PURE__ */ e("div", { className: "col-span-12", children: /* @__PURE__ */ a(xe, { children: [
      !t && /* @__PURE__ */ e(
        Se,
        {
          disabled: n,
          showErrors: i
        }
      ),
      t && /* @__PURE__ */ e(It, { disabled: n })
    ] }) }),
    !t && /* @__PURE__ */ e("div", { className: "col-span-12", children: /* @__PURE__ */ e(
      Ne,
      {
        disabled: n,
        position: "item-aligned",
        onValueChange: (y) => {
          u("defaultValue", y);
        },
        label: "Default value",
        value: s ?? "",
        children: g.filter((y) => !!y?.id).map((y) => /* @__PURE__ */ e(
          ee,
          {
            value: y.id?.toString(),
            children: y.label
          },
          y.id
        ))
      }
    ) })
  ] });
}
const ot = {
  "image/*": "Images",
  "video/*": "Videos",
  "audio/*": "Audio files",
  "application/*": "Files (pdf, zip, csv, excel...)",
  "text/*": "Text files"
};
function jt({
  multiple: t,
  existing: r,
  disabled: n
}) {
  const {
    values: i,
    setFieldValue: l
  } = G(), o = t ? "of.storage" : "storage", d = `${o}.acceptedFiles`, c = `${o}.fileName`, u = `${o}.storagePath`, m = `${o}.storeUrl`, p = I(i, c) ?? "{rand}_{file}", s = I(i, u) ?? "/", f = I(i, d), g = Array.isArray(f) ? f : void 0, P = !g || g.length === 0, y = (b) => {
    b ? b.includes("all") || b.length >= Object.keys(ot).length ? l(d, void 0) : P ? l(d, Object.keys(ot).filter((T) => !b.includes(T))) : l(d, b) : l(d, void 0);
  }, x = typeof p == "function", v = typeof s == "function";
  return /* @__PURE__ */ a(R, { children: [
    /* @__PURE__ */ e("div", { className: "col-span-12", children: /* @__PURE__ */ e(
      Tt,
      {
        title: /* @__PURE__ */ a("div", { className: "flex flex-row text-gray-500", children: [
          /* @__PURE__ */ e(Rr, {}),
          /* @__PURE__ */ e(
            V,
            {
              variant: "subtitle2",
              className: "ml-2",
              children: "File upload config"
            }
          )
        ] }),
        children: /* @__PURE__ */ a("div", { className: "grid grid-cols-12 gap-2 p-4", children: [
          /* @__PURE__ */ e("div", { className: "col-span-12", children: /* @__PURE__ */ a(
            Ur,
            {
              disabled: n,
              name: d,
              value: g ?? [],
              onMultiValueChange: y,
              label: P ? void 0 : "Allowed file types",
              renderValues: (b) => !b || b.length === 0 ? "All file types allowed" : b.map((T) => ot[T]).filter((T) => !!T).join(", "),
              children: [
                /* @__PURE__ */ a(St, { value: "all", className: "flex items-center gap-2", children: [
                  /* @__PURE__ */ e(
                    At,
                    {
                      checked: !g
                    }
                  ),
                  "All"
                ] }, "all"),
                Object.entries(ot).map(([b, T]) => /* @__PURE__ */ a(St, { value: b, className: "flex items-center gap-2", children: [
                  /* @__PURE__ */ e(
                    At,
                    {
                      checked: P || g.indexOf(b) > -1
                    }
                  ),
                  /* @__PURE__ */ e("div", { className: "flex-grow", children: T }),
                  /* @__PURE__ */ e(
                    z,
                    {
                      size: "small",
                      variant: "outlined",
                      onClick: (w) => (w.preventDefault(), w.stopPropagation(), l(d, [b])),
                      children: "Only"
                    }
                  )
                ] }, b))
              ]
            }
          ) }),
          /* @__PURE__ */ e("div", { className: "col-span-12", children: /* @__PURE__ */ e(
            $,
            {
              name: c,
              as: W,
              label: "File name",
              size: "small",
              disabled: x || n,
              value: x ? "-" : p
            }
          ) }),
          /* @__PURE__ */ a("div", { className: "col-span-12", children: [
            /* @__PURE__ */ e(
              $,
              {
                name: u,
                as: W,
                label: "Storage path",
                disabled: v || n,
                size: "small",
                value: v ? "-" : s
              }
            ),
            /* @__PURE__ */ a(V, { variant: "caption", className: "ml-3.5 mt-1 mb-2", children: [
              /* @__PURE__ */ e("p", { children: "You can use the following placeholders in the file name and storage path values:" }),
              /* @__PURE__ */ a("ul", { children: [
                /* @__PURE__ */ e("li", { children: "{file} - Full name of the uploaded file" }),
                /* @__PURE__ */ e("li", { children: "{file.name} - Name of the uploaded file without extension" }),
                /* @__PURE__ */ e("li", { children: "{file.ext} - Extension of the uploaded file" }),
                /* @__PURE__ */ e("li", { children: "{entityId} - ID of the entity" }),
                /* @__PURE__ */ e("li", { children: "{propertyKey} - ID of this field" }),
                /* @__PURE__ */ e("li", { children: "{path} - Path of this entity" }),
                /* @__PURE__ */ e("li", { children: "{rand} - Random value used to avoid name collisions" })
              ] })
            ] }),
            /* @__PURE__ */ e(
              $,
              {
                name: m,
                type: "checkbox",
                children: ({ field: b, form: T }) => /* @__PURE__ */ e(
                  le,
                  {
                    label: "Save URL instead of storage path",
                    disabled: r || n,
                    form: T,
                    field: b
                  }
                )
              }
            ),
            /* @__PURE__ */ e(V, { variant: "caption", className: "ml-3.5 mt-1 mb-2", children: "Turn this setting on, if you prefer to save the download URL of the uploaded file instead of the storage path. You can only change this prop upon creation." })
          ] })
        ] })
      }
    ) }),
    /* @__PURE__ */ e("div", { className: "col-span-12", children: /* @__PURE__ */ a(xe, { children: [
      !t && /* @__PURE__ */ e("div", { className: "grid grid-cols-12 gap-2", children: /* @__PURE__ */ e(Ee, { disabled: n }) }),
      t && /* @__PURE__ */ e("div", { className: "col-span-12", children: /* @__PURE__ */ e(It, { disabled: n }) })
    ] }) })
  ] });
}
function qe(t) {
  if (ie(t) || ie(t))
    return !1;
  {
    const r = t;
    return r.dataType === "array" && typeof r.of == "function" || r.dataType === "array" && Array.isArray(r.of) ? !1 : !!r.editable;
  }
}
function wi(t) {
  return Object.entries(t).filter(([r, n]) => qe(n)).map(([r, n]) => {
    const i = n;
    if (qe(i))
      return i.dataType === "map" && i.properties ? {
        [r]: {
          ...i,
          properties: wi(i.properties)
        }
      } : { [r]: i };
  }).filter((r) => !!r).reduce((r, n) => ({ ...r, ...n }), {});
}
function or({
  property: t,
  onClick: r,
  hasError: n,
  includeName: i,
  includeEditButton: l,
  selected: o
}) {
  const { propertyConfigs: d } = Ae(), c = Le(t, d);
  qe(t);
  const u = n ? "border-red-500 dark:border-red-500 border-opacity-100 dark:border-opacity-100 ring-0 dark:ring-0" : o ? "border-primary" : "border-transparent";
  return n && console.log("PropertyFieldPreview", t), /* @__PURE__ */ e(me, { children: /* @__PURE__ */ a(
    "div",
    {
      onClick: r,
      className: "flex flex-row w-full cursor-pointer",
      children: [
        /* @__PURE__ */ e("div", { className: "m-4", children: /* @__PURE__ */ e($e, { propertyConfig: c }) }),
        /* @__PURE__ */ a(
          ge,
          {
            className: fe(
              "border",
              "pl-2 w-full flex flex-row gap-4 items-center",
              Xt,
              r ? er : "",
              o ? tr : "",
              "flex-grow p-4 border transition-colors duration-200",
              u
            ),
            children: [
              /* @__PURE__ */ a("div", { className: "w-full flex flex-col", children: [
                i && /* @__PURE__ */ e(me, { children: /* @__PURE__ */ e(
                  V,
                  {
                    variant: "body1",
                    component: "span",
                    className: "flex-grow pr-2",
                    children: t.name ? t.name : " "
                  }
                ) }),
                /* @__PURE__ */ a("div", { className: "flex flex-row items-center", children: [
                  /* @__PURE__ */ e(me, { children: /* @__PURE__ */ e(
                    V,
                    {
                      className: "flex-grow pr-2",
                      variant: i ? "body2" : "subtitle1",
                      component: "span",
                      color: "secondary",
                      children: c?.name
                    }
                  ) }),
                  /* @__PURE__ */ e(me, { children: /* @__PURE__ */ e(
                    V,
                    {
                      variant: "body2",
                      component: "span",
                      color: "disabled",
                      children: t.dataType
                    }
                  ) })
                ] })
              ] }),
              l && /* @__PURE__ */ e(V, { variant: "button", children: "EDIT" })
            ]
          }
        )
      ]
    }
  ) });
}
function Ti({
  name: t,
  selected: r,
  onClick: n,
  property: i
}) {
  const { propertyConfigs: l } = Ae(), o = !ie(i) && i ? Le(i, l) : void 0;
  return /* @__PURE__ */ a(
    "div",
    {
      onClick: n,
      className: "flex flex-row w-full cursor-pointer",
      children: [
        /* @__PURE__ */ a("div", { className: "relative m-4", children: [
          o && /* @__PURE__ */ e($e, { propertyConfig: o }),
          !o && /* @__PURE__ */ e(
            "div",
            {
              className: "h-8 w-8 p-1 rounded-full shadow text-white bg-gray-500",
              children: /* @__PURE__ */ e(jr, { color: "inherit", size: "medium" })
            }
          ),
          /* @__PURE__ */ e(qr, { color: "disabled", size: "small", className: "absolute -right-2 -top-2" })
        ] }),
        /* @__PURE__ */ e(
          ge,
          {
            className: fe(
              "pl-2 w-full flex flex-row gap-4 items-center",
              Xt,
              n ? er : "",
              r ? tr : "",
              "flex-grow p-4 border transition-colors duration-200",
              r ? "border-primary" : "border-transparent"
            ),
            children: /* @__PURE__ */ a("div", { className: "w-full flex flex-col", children: [
              /* @__PURE__ */ e(
                V,
                {
                  variant: "body1",
                  component: "span",
                  className: "flex-grow pr-2",
                  children: i?.name ? i.name : t
                }
              ),
              /* @__PURE__ */ a("div", { className: "flex flex-row items-center", children: [
                o && /* @__PURE__ */ e(
                  V,
                  {
                    className: "flex-grow pr-2",
                    variant: "body2",
                    component: "span",
                    color: "secondary",
                    children: o?.name
                  }
                ),
                i && !ie(i) && /* @__PURE__ */ e(me, { children: /* @__PURE__ */ e(
                  V,
                  {
                    variant: "body2",
                    component: "span",
                    color: "disabled",
                    children: i.dataType
                  }
                ) }),
                i && ie(i) && /* @__PURE__ */ e(me, { children: /* @__PURE__ */ e(
                  V,
                  {
                    variant: "body2",
                    component: "span",
                    color: "disabled",
                    children: "This property is defined as a property builder in code"
                  }
                ) }),
                !i && /* @__PURE__ */ e(me, { children: /* @__PURE__ */ e(
                  V,
                  {
                    variant: "body2",
                    component: "span",
                    color: "disabled",
                    children: "This field is defined as an additional field in code"
                  }
                ) })
              ] })
            ] })
          }
        )
      ]
    }
  );
}
const gt = Y.memo(
  function({
    namespace: r,
    selectedPropertyKey: n,
    onPropertyClick: i,
    properties: l,
    propertiesOrder: o,
    additionalFields: d,
    errors: c,
    onPropertyMove: u,
    onPropertyRemove: m,
    className: p,
    inferredPropertyKeys: s,
    collectionEditable: f
  }) {
    const g = o ?? Object.keys(l), P = J((y) => {
      if (!y.destination)
        return;
      const x = y.source.index, v = y.destination.index, b = Array.from(g), [T] = b.splice(x, 1);
      b.splice(v, 0, T), u && u(b, r);
    }, [r, u, g]);
    return /* @__PURE__ */ e(R, { children: /* @__PURE__ */ e(ai, { onDragEnd: P, children: /* @__PURE__ */ e(oi, { droppableId: `droppable_${r}`, children: (y, x) => /* @__PURE__ */ a(
      "div",
      {
        ...y.droppableProps,
        ref: y.innerRef,
        className: p,
        children: [
          g && g.map((v, b) => {
            const T = l[v], w = d?.find((C) => C.key === v);
            return !T && !w ? (console.warn(`Property ${v} not found in properties or additionalFields`), null) : /* @__PURE__ */ e(
              li,
              {
                draggableId: `array_field_${r}_${v}}`,
                index: b,
                children: (C, O) => /* @__PURE__ */ e(me, { children: /* @__PURE__ */ e(
                  ki,
                  {
                    propertyKey: v,
                    propertyOrBuilder: T,
                    additionalField: w,
                    provided: C,
                    errors: c,
                    namespace: r,
                    inferredPropertyKeys: s,
                    onPropertyMove: u,
                    onPropertyRemove: m,
                    onPropertyClick: O.isDragging ? void 0 : i,
                    selectedPropertyKey: n,
                    collectionEditable: f
                  }
                ) })
              },
              `array_field_${r}_${v}}`
            );
          }).filter(Boolean),
          y.placeholder
        ]
      }
    ) }) }) });
  },
  (t, r) => {
    const n = r.selectedPropertyKey?.startsWith(r.namespace ?? ""), i = t.selectedPropertyKey?.startsWith(t.namespace ?? "");
    return n || i ? !1 : be(t.properties, r.properties) && t.propertiesOrder === r.propertiesOrder && be(t.additionalFields, r.additionalFields) && be(t.errors, r.errors) && be(t.onPropertyClick, r.onPropertyClick) && // equal(prevProps.onPropertyMove, nextProps.onPropertyMove) &&
    // equal(prevProps.onPropertyRemove, nextProps.onPropertyRemove) &&
    t.namespace === r.namespace && t.collectionEditable === r.collectionEditable;
  }
);
function ki({
  propertyKey: t,
  namespace: r,
  propertyOrBuilder: n,
  additionalField: i,
  provided: l,
  selectedPropertyKey: o,
  errors: d,
  onPropertyClick: c,
  onPropertyMove: u,
  onPropertyRemove: m,
  inferredPropertyKeys: p,
  collectionEditable: s
}) {
  const f = p?.includes(r ? `${r}.${t}` : t), g = ne(t, r), y = ar(t, r) in d;
  let x;
  if (typeof n == "object") {
    const T = n;
    T.dataType === "map" && T.properties && (x = /* @__PURE__ */ e(
      gt,
      {
        selectedPropertyKey: o,
        namespace: g,
        properties: T.properties,
        propertiesOrder: T.propertiesOrder,
        errors: d,
        onPropertyClick: c,
        onPropertyMove: u,
        onPropertyRemove: m,
        collectionEditable: s
      }
    ));
  }
  const v = o === g, b = n && (s && !ie(n) || qe(n));
  return /* @__PURE__ */ a(
    "div",
    {
      ref: l.innerRef,
      ...l.draggableProps,
      ...l.dragHandleProps,
      className: "relative -ml-8",
      children: [
        x && /* @__PURE__ */ e(
          "div",
          {
            className: "absolute border-l " + kt,
            style: {
              left: "32px",
              top: "64px",
              bottom: "16px"
            }
          }
        ),
        !ie(n) && !i && b ? /* @__PURE__ */ e(
          or,
          {
            property: n,
            onClick: c ? () => c(t, r) : void 0,
            includeName: !0,
            selected: v,
            hasError: y
          }
        ) : /* @__PURE__ */ e(
          Ti,
          {
            name: t,
            property: n,
            onClick: c ? () => c(t, r) : void 0,
            selected: v
          }
        ),
        /* @__PURE__ */ a("div", { className: "absolute top-2 right-2 flex flex-row ", children: [
          f && /* @__PURE__ */ e(te, { title: "Inferred property", children: /* @__PURE__ */ e(ft, { size: "small", className: "p-2" }) }),
          m && /* @__PURE__ */ e(te, { title: "Remove", children: /* @__PURE__ */ e(
            ae,
            {
              size: "small",
              color: "inherit",
              onClick: () => m(t, r),
              children: /* @__PURE__ */ e(Lr, { size: "small" })
            }
          ) }),
          u && /* @__PURE__ */ e(te, { title: "Move", children: /* @__PURE__ */ e(
            ae,
            {
              component: "span",
              size: "small",
              children: /* @__PURE__ */ e($r, { size: "small" })
            }
          ) })
        ] }),
        x && /* @__PURE__ */ e("div", { className: "ml-16", children: x })
      ]
    }
  );
}
function Oi({ disabled: t, getData: r, allowDataInference: n, propertyConfigs: i, collectionEditable: l }) {
  const {
    values: o,
    setFieldValue: d
  } = G(), [c, u] = j(!1), [m, p] = j(), [s, f] = j(), g = o.propertiesOrder ?? Object.keys(o.properties ?? {}), P = ({
    id: w,
    property: C
  }) => {
    if (!w)
      throw Error();
    d("properties", {
      ...o.properties ?? {},
      [w]: C
    }, !1);
    const O = o.propertiesOrder ?? Object.keys(o.properties ?? {}), N = O.includes(w) ? O : [...O, w];
    d("propertiesOrder", N, !1), u(!1);
  }, y = J((w, C) => {
    const O = w ? ne(w, C) : void 0;
    if (!O)
      throw Error("collection editor miss config");
    const N = he(O), F = Ce(C), D = I(o, F) ?? Object.keys(I(o, nr(C)));
    d(N, void 0, !1), d(F, D.filter((_) => _ !== w), !1), u(!1), p(void 0), f(void 0);
  }, [d, o]), x = m ? ne(m, s) : void 0, v = x ? I(o.properties, x.replaceAll(".", ".properties.")) : void 0, b = !g || g.length < 1, T = J((w, C) => {
    d(Ce(C), w, !1);
  }, []);
  return /* @__PURE__ */ a(R, { children: [
    /* @__PURE__ */ a("div", { className: "col-span-12", children: [
      /* @__PURE__ */ a("div", { className: "flex justify-between items-end my-4", children: [
        /* @__PURE__ */ e(V, { variant: "subtitle2", children: "Properties in this group" }),
        /* @__PURE__ */ a(
          z,
          {
            color: "primary",
            variant: "outlined",
            onClick: () => u(!0),
            startIcon: /* @__PURE__ */ e(ce, {}),
            children: [
              "Add property to ",
              o.name ?? "this group"
            ]
          }
        )
      ] }),
      /* @__PURE__ */ a(ge, { className: "p-2 pl-8", children: [
        /* @__PURE__ */ e(
          gt,
          {
            properties: o.properties ?? {},
            propertiesOrder: g,
            errors: {},
            collectionEditable: l,
            onPropertyClick: (w, C) => {
              p(w), f(C), u(!0);
            },
            onPropertyMove: T
          }
        ),
        b && /* @__PURE__ */ e(
          V,
          {
            variant: "label",
            className: "h-full flex items-center justify-center p-4",
            children: "Add the first property to this group"
          }
        )
      ] })
    ] }),
    /* @__PURE__ */ a("div", { className: "col-span-12", children: [
      /* @__PURE__ */ e(
        pt,
        {
          position: "start",
          size: "small",
          label: "Spread children as columns",
          onValueChange: (w) => d("spreadChildren", w),
          value: o.spreadChildren ?? !1
        }
      ),
      /* @__PURE__ */ e(X, { children: "Set this flag to true if you want to display the children of this group as individual columns." })
    ] }),
    /* @__PURE__ */ e(
      Ve,
      {
        inArray: !1,
        forceShowErrors: !1,
        open: c,
        allowDataInference: n,
        collectionEditable: l,
        onCancel: () => {
          u(!1), p(void 0), f(void 0);
        },
        onOkClicked: () => {
          u(!1), p(void 0), f(void 0);
        },
        getData: r,
        onDelete: y,
        propertyKey: m,
        propertyNamespace: s,
        property: v,
        existingProperty: !!m,
        autoUpdateId: !m,
        autoOpenTypeSelect: !m,
        onPropertyChanged: P,
        existingPropertyKeys: m ? void 0 : g,
        propertyConfigs: i
      }
    )
  ] });
}
function Vi({
  showErrors: t,
  existing: r,
  disabled: n,
  getData: i,
  allowDataInference: l,
  propertyConfigs: o,
  collectionEditable: d
}) {
  const {
    values: c,
    handleChange: u,
    errors: m,
    setFieldValue: p,
    touched: s
  } = G(), [f, g] = j(!1), P = I(c, "of"), y = I(s, "of") && I(m, "of"), x = ({ id: b, property: T, namespace: w }) => {
    console.log("onPropertyChanged", b, T, w), p("of", T);
  }, v = P && Le(P, o);
  return /* @__PURE__ */ a(R, { children: [
    /* @__PURE__ */ a("div", { className: "col-span-12", children: [
      /* @__PURE__ */ e(V, { variant: "subtitle2", children: "Repeat component" }),
      /* @__PURE__ */ e(
        $,
        {
          name: "of",
          value: P,
          children: ({}) => /* @__PURE__ */ a(ge, { className: "p-2 mt-4", children: [
            P && /* @__PURE__ */ e(
              or,
              {
                property: P,
                onClick: n ? void 0 : () => g(!0),
                includeName: !1,
                includeEditButton: !0,
                selected: !1,
                hasError: !1
              }
            ),
            !n && !P && /* @__PURE__ */ a(
              z,
              {
                variant: "text",
                size: "large",
                color: y ? "error" : "primary",
                onClick: () => g(!0),
                children: [
                  "Edit ",
                  `${v ? v.name : "repeat component"}`
                ]
              }
            ),
            /* @__PURE__ */ e(
              Ve,
              {
                inArray: !0,
                open: f,
                existingProperty: r,
                getData: i,
                autoUpdateId: !r,
                autoOpenTypeSelect: !r,
                onOkClicked: () => g(!1),
                allowDataInference: l,
                property: P,
                includeIdAndName: !1,
                onPropertyChanged: x,
                forceShowErrors: t,
                propertyConfigs: o,
                collectionEditable: d
              }
            )
          ] })
        }
      )
    ] }),
    /* @__PURE__ */ e("div", { className: "col-span-12", children: /* @__PURE__ */ e(xe, { children: /* @__PURE__ */ e(It, { disabled: n }) }) })
  ] });
}
const Ii = Y.forwardRef(
  function({
    showErrors: r,
    disabledId: n,
    disabled: i,
    autoUpdateId: l,
    isNewProperty: o
  }, d) {
    const {
      errors: c,
      values: u,
      setFieldValue: m,
      setFieldTouched: p,
      touched: s,
      validate: f
    } = G(), g = "name", P = r && I(c, g), y = "id", x = r && I(c, y), v = "description", b = r && I(c, v);
    return /* @__PURE__ */ a("div", { className: "flex flex-col gap-2 col-span-12", children: [
      /* @__PURE__ */ a("div", { children: [
        /* @__PURE__ */ e(
          $,
          {
            name: g,
            inputRef: d,
            as: W,
            value: u[g],
            onChange: (T) => {
              const w = T.target.value;
              !I(s, y) && l && m(y, w ? xt(w) : "", !1), m(g, w, !0), p(g, !0);
            },
            style: { fontSize: 20 },
            placeholder: "Field name",
            required: !0,
            disabled: i,
            error: !!P
          }
        ),
        /* @__PURE__ */ e(X, { error: !!P, children: P })
      ] }),
      /* @__PURE__ */ a("div", { children: [
        /* @__PURE__ */ e(
          $,
          {
            name: y,
            as: W,
            label: "ID",
            value: u[y],
            onChange: (T) => {
              const w = T.target.value;
              !I(s, g) && l && m(g, w ? wt(w) : ""), m(y, w, !0), p(y, !0);
            },
            disabled: n || i,
            required: !0,
            size: "small",
            error: !!x
          }
        ),
        /* @__PURE__ */ e(X, { error: !!x, children: x })
      ] }),
      /* @__PURE__ */ a("div", { children: [
        /* @__PURE__ */ e(
          $,
          {
            name: v,
            as: W,
            label: "Description",
            disabled: i,
            error: !!b
          }
        ),
        /* @__PURE__ */ e(X, { error: !!b, children: b })
      ] })
    ] });
  }
);
function _i({
  widgetId: t,
  disabled: r,
  showErrors: n
}) {
  const { values: i, setFieldValue: l } = G();
  return /* @__PURE__ */ a(R, { children: [
    /* @__PURE__ */ e("div", { className: "col-span-12", children: /* @__PURE__ */ a(xe, { children: [
      t === "text_field" && /* @__PURE__ */ e(
        Se,
        {
          disabled: r,
          length: !0,
          lowercase: !0,
          matches: !0,
          max: !0,
          min: !0,
          trim: !0,
          uppercase: !0,
          showErrors: n
        }
      ),
      t === "multiline" && /* @__PURE__ */ e(
        Se,
        {
          disabled: r,
          length: !0,
          lowercase: !0,
          max: !0,
          min: !0,
          trim: !0,
          uppercase: !0,
          showErrors: n
        }
      ),
      t === "markdown" && /* @__PURE__ */ e(
        Se,
        {
          disabled: r,
          length: !0,
          lowercase: !0,
          max: !0,
          min: !0,
          trim: !0,
          uppercase: !0,
          showErrors: n
        }
      ),
      t === "email" && /* @__PURE__ */ e(
        Se,
        {
          disabled: r,
          max: !0,
          min: !0,
          trim: !0,
          showErrors: n
        }
      )
    ] }) }),
    /* @__PURE__ */ e("div", { className: "col-span-12", children: /* @__PURE__ */ e(
      Oe,
      {
        name: "defaultValue",
        disabled: r,
        onChange: (o) => {
          l("defaultValue", o.target.value === "" ? void 0 : o.target.value);
        },
        label: "Default value",
        value: I(i, "defaultValue") ?? ""
      }
    ) })
  ] });
}
function Fi({ disabled: t }) {
  const { values: r } = G(), n = I(r, "defaultValue");
  return /* @__PURE__ */ a(R, { children: [
    /* @__PURE__ */ e("div", { className: "col-span-12", children: /* @__PURE__ */ e(xe, { children: /* @__PURE__ */ e(Ee, { disabled: t }) }) }),
    /* @__PURE__ */ e("div", { className: "col-span-12", children: /* @__PURE__ */ e(
      $,
      {
        name: "defaultValue",
        children: ({ field: i, form: l }) => /* @__PURE__ */ e(
          le,
          {
            label: n == null ? "Default value not set" : "Default value is " + n.toString(),
            disabled: t,
            allowIndeterminate: !0,
            field: i,
            form: l
          }
        )
      }
    ) })
  ] });
}
function Ei({
  disabled: t,
  getData: r,
  allowDataInference: n,
  propertyConfigs: i,
  collectionEditable: l
}) {
  const {
    values: o,
    setFieldValue: d
  } = G(), [c, u] = j(!1), [m, p] = j(), [s, f] = j(), g = ({
    id: T,
    property: w
  }) => {
    if (!T)
      throw Error();
    d("oneOf.properties", {
      ...o.oneOf?.properties ?? {},
      [T]: w
    }, !1);
    const C = o.oneOf?.propertiesOrder ?? Object.keys(o.oneOf?.properties ?? {}), O = C.includes(T) ? C : [...C, T];
    d("oneOf.propertiesOrder", O, !1), u(!1);
  }, P = m ? ne(m, s) : void 0, y = P ? I(o.oneOf?.properties, P.replaceAll(".", ".properties.")) : void 0, x = J((T, w) => {
    const C = T ? ne(T, w) : void 0;
    if (!C)
      throw Error("collection editor miss config");
    d(`oneOf.${he(C)}`, void 0, !1);
    const O = `oneOf.${Ce(w)}`, N = I(o, O) ?? Object.keys(I(o, nr(w)));
    d(O, N.filter((F) => F !== T), !1), u(!1), p(void 0), f(void 0);
  }, [d, o]), v = /* @__PURE__ */ a(
    z,
    {
      autoFocus: !0,
      color: "primary",
      onClick: () => u(!0),
      startIcon: /* @__PURE__ */ e(ce, {}),
      children: [
        "Add property to ",
        o.name ?? "this block"
      ]
    }
  ), b = J((T, w) => {
    d(`oneOf.${Ce(w)}`, T, !1);
  }, []);
  return /* @__PURE__ */ a(R, { children: [
    /* @__PURE__ */ a("div", { className: "col-span-12", children: [
      /* @__PURE__ */ a("div", { className: "flex justify-between items-end mt-8 mb-4", children: [
        /* @__PURE__ */ e(V, { variant: "subtitle2", children: "Properties in this block" }),
        v
      ] }),
      /* @__PURE__ */ a(ge, { className: "p-2 pl-8", children: [
        /* @__PURE__ */ e(
          gt,
          {
            properties: o.oneOf?.properties ?? {},
            propertiesOrder: o.oneOf?.propertiesOrder,
            errors: {},
            collectionEditable: l,
            onPropertyClick: t ? void 0 : (T, w) => {
              p(T), f(w), u(!0);
            },
            onPropertyMove: t ? void 0 : b
          }
        ),
        !t && !o.oneOf?.propertiesOrder?.length && /* @__PURE__ */ e("div", { className: "h-full flex items-center justify-center p-4", children: "Add the first property to this block" })
      ] })
    ] }),
    !t && /* @__PURE__ */ e(
      Ve,
      {
        inArray: !1,
        forceShowErrors: !1,
        open: c,
        getData: r,
        allowDataInference: n,
        onCancel: () => {
          u(!1), p(void 0), f(void 0);
        },
        onOkClicked: () => {
          u(!1), p(void 0), f(void 0);
        },
        collectionEditable: l,
        onDelete: x,
        propertyKey: m,
        propertyNamespace: s,
        property: y,
        existingProperty: !!m,
        autoUpdateId: !m,
        autoOpenTypeSelect: !m,
        onPropertyChanged: g,
        existingPropertyKeys: m ? void 0 : o.oneOf?.propertiesOrder,
        propertyConfigs: i
      }
    )
  ] });
}
function Si({ disabled: t }) {
  const {
    values: r,
    handleChange: n
  } = G(), i = "validation.min", l = "validation.max", o = "validation.lessThan", d = "validation.moreThan";
  return /* @__PURE__ */ a("div", { className: "grid grid-cols-12 gap-2", children: [
    /* @__PURE__ */ e(Ee, { disabled: t }),
    /* @__PURE__ */ e("div", { className: "col-span-6", children: /* @__PURE__ */ e(
      W,
      {
        value: I(r, i),
        label: "Min value",
        name: i,
        type: "number",
        size: "small",
        disabled: t,
        onChange: n
      }
    ) }),
    /* @__PURE__ */ e("div", { className: "col-span-6", children: /* @__PURE__ */ e(
      W,
      {
        value: I(r, l),
        label: "Max value",
        name: l,
        type: "number",
        size: "small",
        disabled: t,
        onChange: n
      }
    ) }),
    /* @__PURE__ */ e("div", { className: "col-span-6", children: /* @__PURE__ */ e(
      W,
      {
        value: I(r, o),
        label: "Less than",
        name: o,
        type: "number",
        size: "small",
        disabled: t,
        onChange: n
      }
    ) }),
    /* @__PURE__ */ e("div", { className: "col-span-6", children: /* @__PURE__ */ e(
      W,
      {
        value: I(r, d),
        label: "More than",
        name: d,
        type: "number",
        size: "small",
        disabled: t,
        onChange: n
      }
    ) }),
    /* @__PURE__ */ e("div", { className: "col-span-4", children: /* @__PURE__ */ e(
      $,
      {
        name: "validation.positive",
        type: "checkbox",
        children: ({ field: p, form: s }) => /* @__PURE__ */ e(
          le,
          {
            label: "Positive value",
            disabled: t,
            form: s,
            field: p
          }
        )
      }
    ) }),
    /* @__PURE__ */ e("div", { className: "col-span-4", children: /* @__PURE__ */ e(
      $,
      {
        name: "validation.negative",
        type: "checkbox",
        children: ({ field: p, form: s }) => /* @__PURE__ */ e(
          le,
          {
            label: "Negative value",
            disabled: t,
            form: s,
            field: p
          }
        )
      }
    ) }),
    /* @__PURE__ */ e("div", { className: "col-span-4", children: /* @__PURE__ */ e(
      $,
      {
        name: "validation.integer",
        type: "checkbox",
        children: ({ field: p, form: s }) => /* @__PURE__ */ e(
          le,
          {
            label: "Integer value",
            disabled: t,
            form: s,
            field: p
          }
        )
      }
    ) })
  ] });
}
function Ai({ disabled: t }) {
  const { values: r, setFieldValue: n } = G();
  return /* @__PURE__ */ a(R, { children: [
    /* @__PURE__ */ e("div", { className: "col-span-12", children: /* @__PURE__ */ e(xe, { children: /* @__PURE__ */ e(Si, { disabled: t }) }) }),
    /* @__PURE__ */ e("div", { className: "col-span-12", children: /* @__PURE__ */ e(
      Oe,
      {
        name: "defaultValue",
        disabled: t,
        type: "number",
        onChange: (i) => {
          n("defaultValue", i.target.value === "" ? void 0 : parseFloat(i.target.value));
        },
        label: "Default value",
        value: I(r, "defaultValue") ?? ""
      }
    ) })
  ] });
}
function qt({
  existing: t,
  multiple: r,
  disabled: n,
  showErrors: i
}) {
  const {
    values: l,
    handleChange: o,
    errors: d
  } = G();
  if (!Te())
    return /* @__PURE__ */ e("div", { className: "col-span-12", children: /* @__PURE__ */ e(Ge, {}) });
  const u = r ? "of.path" : "path", m = I(l, u), p = i && I(d, u);
  return /* @__PURE__ */ e(R, { children: /* @__PURE__ */ e("div", { className: "col-span-12", children: /* @__PURE__ */ e(
    $,
    {
      name: u,
      pathPath: u,
      type: "select",
      disabled: t && !!m || n,
      value: m,
      error: p,
      handleChange: o,
      as: Di
    }
  ) }) });
}
function Di({
  disabled: t,
  pathPath: r,
  value: n,
  handleChange: i,
  error: l,
  ...o
}) {
  const d = Te();
  if (!d)
    return /* @__PURE__ */ e("div", { className: "col-span-12", children: /* @__PURE__ */ e(Ge, {}) });
  const c = d?.collections ?? [], u = Array.from(new Set(
    Object.values(c).map((p) => p.group).filter(Boolean)
  ).values()), m = c.filter((p) => !p.group);
  return /* @__PURE__ */ a(R, { children: [
    /* @__PURE__ */ a(
      Ne,
      {
        error: !!l,
        disabled: t,
        value: n ?? "",
        position: "item-aligned",
        name: r,
        onChange: i,
        label: "Target collection",
        renderValue: (p) => {
          const s = c.find((f) => f.id === p || f.path === p);
          return s ? /* @__PURE__ */ a("div", { className: "flex flex-row", children: [
            /* @__PURE__ */ e(dt, { collectionOrView: s }),
            /* @__PURE__ */ e(
              V,
              {
                variant: "subtitle2",
                className: "font-medium ml-4",
                children: s?.name.toUpperCase()
              }
            )
          ] }) : null;
        },
        ...o,
        children: [
          u.flatMap((p) => /* @__PURE__ */ e(
            Dt,
            {
              label: p || "Views",
              children: c.filter((s) => s.group === p).map((s) => /* @__PURE__ */ e(
                ee,
                {
                  value: s.id ?? s.path,
                  children: /* @__PURE__ */ a("div", { className: "flex flex-row", children: [
                    /* @__PURE__ */ e(dt, { collectionOrView: s }),
                    /* @__PURE__ */ e(
                      V,
                      {
                        variant: "subtitle2",
                        className: "font-medium ml-4",
                        children: s?.name.toUpperCase()
                      }
                    )
                  ] })
                },
                `${s.id ?? s.path}-${p}`
              ))
            },
            `group_${p}`
          )),
          m && /* @__PURE__ */ e(Dt, { label: "Views", children: m.map((p) => /* @__PURE__ */ e(
            ee,
            {
              value: p.id ?? p.path,
              children: /* @__PURE__ */ a("div", { className: "flex flex-row", children: [
                /* @__PURE__ */ e(dt, { collectionOrView: p }),
                /* @__PURE__ */ e(
                  V,
                  {
                    variant: "subtitle2",
                    className: "font-medium ml-4",
                    children: p?.name.toUpperCase()
                  }
                )
              ] })
            },
            p.id ?? p.path
          )) })
        ]
      }
    ),
    /* @__PURE__ */ e(X, { children: "You can only edit the reference collection upon field creation." })
  ] });
}
function Bi({ disabled: t }) {
  const {
    values: r,
    errors: n,
    touched: i,
    setFieldValue: l
  } = G(), o = "mode", d = I(r, o), c = I(i, o) && I(n, o), u = "autoValue", m = I(r, u), p = I(i, u) && I(n, u);
  return /* @__PURE__ */ a(R, { children: [
    /* @__PURE__ */ a("div", { className: "flex flex-col col-span-12", children: [
      /* @__PURE__ */ a(
        Ne,
        {
          name: o,
          value: d ?? "date",
          error: !!c,
          onValueChange: (s) => l(o, s),
          label: "Mode",
          renderValue: (s) => {
            switch (s) {
              case "date_time":
                return "Date/Time";
              case "date":
                return "Date";
              default:
                return "";
            }
          },
          disabled: t,
          children: [
            /* @__PURE__ */ e(ee, { value: "date_time", children: " Date/Time " }),
            /* @__PURE__ */ e(ee, { value: "date", children: " Date " })
          ]
        }
      ),
      /* @__PURE__ */ e(X, { error: !!c, children: c }),
      /* @__PURE__ */ a(
        Ne,
        {
          name: u,
          disabled: t,
          value: m ?? "",
          onValueChange: (s) => l(u, s === "none" ? null : s),
          renderValue: (s) => {
            switch (s) {
              case "on_create":
                return "On create";
              case "on_update":
                return "On any update";
              default:
                return "None";
            }
          },
          error: !!p,
          label: "Automatic value",
          children: [
            /* @__PURE__ */ e(ee, { value: "none", children: " None " }),
            /* @__PURE__ */ e(ee, { value: "on_create", children: " On create " }),
            /* @__PURE__ */ e(ee, { value: "on_update", children: " On any update " })
          ]
        }
      ),
      /* @__PURE__ */ e(X, { error: !!p, children: p ?? "Update this field automatically when creating or updating the entity" })
    ] }),
    /* @__PURE__ */ e("div", { className: "col-span-12", children: /* @__PURE__ */ e(xe, { children: /* @__PURE__ */ e(Ee, { disabled: t }) }) })
  ] });
}
function Mi({ disabled: t }) {
  return /* @__PURE__ */ a("div", { className: "grid grid-cols-12 gap-2", children: [
    /* @__PURE__ */ e("div", { className: "col-span-12", children: /* @__PURE__ */ e($, { type: "checkbox", name: "hideFromCollection", children: ({ field: i, form: l }) => /* @__PURE__ */ e(
      le,
      {
        label: "Hide from collection",
        disabled: t,
        form: l,
        tooltip: "Hide this field from the collection view. It will still be visible in the form view",
        field: i
      }
    ) }) }),
    /* @__PURE__ */ e("div", { className: "col-span-12", children: /* @__PURE__ */ e(
      $,
      {
        name: "readOnly",
        type: "checkbox",
        children: ({ field: i, form: l }) => /* @__PURE__ */ e(
          le,
          {
            label: "Read only",
            disabled: t,
            tooltip: "Is this a read only field. Display only as a preview",
            form: l,
            field: i
          }
        )
      }
    ) })
  ] });
}
function zi({ disabled: t }) {
  return /* @__PURE__ */ e(R, { children: /* @__PURE__ */ e("div", { className: "col-span-12", children: /* @__PURE__ */ e(xe, { children: /* @__PURE__ */ e(Ee, { disabled: t }) }) }) });
}
function lr(t, r, n) {
  let i;
  return r === "text_field" ? i = K(
    t,
    {
      dataType: "string",
      propertyConfig: "text_field",
      editable: t.editable !== void 0 ? t.editable : !0,
      storage: void 0,
      multiline: void 0,
      markdown: void 0,
      email: void 0,
      url: void 0,
      enumValues: void 0
    }
  ) : r === "multiline" ? i = K(
    t,
    {
      dataType: "string",
      propertyConfig: "multiline",
      editable: t.editable !== void 0 ? t.editable : !0,
      multiline: !0,
      storage: void 0,
      markdown: void 0,
      email: void 0,
      url: void 0,
      enumValues: void 0
    }
  ) : r === "markdown" ? i = K(
    t,
    {
      dataType: "string",
      propertyConfig: "markdown",
      editable: t.editable !== void 0 ? t.editable : !0,
      storage: void 0,
      multiline: void 0,
      markdown: !0,
      email: void 0,
      url: void 0
    }
  ) : r === "url" ? i = K(
    t,
    {
      dataType: "string",
      propertyConfig: "url",
      editable: t.editable !== void 0 ? t.editable : !0,
      storage: void 0,
      multiline: void 0,
      markdown: void 0,
      email: void 0,
      url: !0,
      enumValues: void 0
    }
  ) : r === "email" ? i = K(
    t,
    {
      dataType: "string",
      propertyConfig: "email",
      editable: t.editable !== void 0 ? t.editable : !0,
      storage: void 0,
      multiline: void 0,
      markdown: void 0,
      email: !0,
      url: void 0,
      enumValues: void 0
    }
  ) : r === "select" ? i = K(
    t,
    {
      dataType: "string",
      propertyConfig: "select",
      editable: t.editable !== void 0 ? t.editable : !0,
      storage: void 0,
      multiline: void 0,
      markdown: void 0,
      email: void 0,
      url: void 0,
      enumValues: t.enumValues ?? []
    }
  ) : r === "multi_select" ? i = K(
    t,
    {
      dataType: "array",
      propertyConfig: "multi_select",
      editable: t.editable !== void 0 ? t.editable : !0,
      of: {
        dataType: "string",
        enumValues: t.of?.enumValues ?? []
      }
    }
  ) : r === "number_input" ? i = K(
    t,
    {
      dataType: "number",
      propertyConfig: "number_input",
      editable: t.editable !== void 0 ? t.editable : !0,
      enumValues: void 0
    }
  ) : r === "number_select" ? i = K(
    t,
    {
      dataType: "number",
      propertyConfig: "number_select",
      editable: t.editable !== void 0 ? t.editable : !0,
      enumValues: t.enumValues ?? []
    }
  ) : r === "multi_number_select" ? i = K(
    t,
    {
      dataType: "array",
      propertyConfig: "multi_number_select",
      editable: t.editable !== void 0 ? t.editable : !0,
      of: {
        dataType: "number",
        enumValues: t.of?.enumValues ?? []
      }
    }
  ) : r === "file_upload" ? i = K(
    t,
    {
      dataType: "string",
      propertyConfig: "file_upload",
      editable: t.editable !== void 0 ? t.editable : !0,
      storage: {
        storagePath: "/"
      }
    }
  ) : r === "multi_file_upload" ? i = K(
    t,
    {
      dataType: "array",
      propertyConfig: "multi_file_upload",
      editable: t.editable !== void 0 ? t.editable : !0,
      of: {
        dataType: "string",
        storage: t.of?.storage ?? {
          storagePath: "/"
        }
      }
    }
  ) : r === "group" ? i = K(
    t,
    {
      dataType: "map",
      propertyConfig: "group",
      editable: t.editable !== void 0 ? t.editable : !0,
      keyValue: !1,
      properties: t.properties ?? {}
    }
  ) : r === "key_value" ? i = K(
    t,
    {
      dataType: "map",
      propertyConfig: "key_value",
      editable: t.editable !== void 0 ? t.editable : !0,
      keyValue: !0,
      properties: void 0
    }
  ) : r === "reference" ? i = K(
    t,
    {
      dataType: "reference",
      propertyConfig: "reference",
      editable: t.editable !== void 0 ? t.editable : !0
    }
  ) : r === "multi_references" ? i = K(
    t,
    {
      dataType: "array",
      propertyConfig: "multi_references",
      editable: t.editable !== void 0 ? t.editable : !0,
      of: {
        dataType: "reference"
      }
    }
  ) : r === "switch" ? i = K(
    t,
    {
      dataType: "boolean",
      propertyConfig: "switch",
      editable: t.editable !== void 0 ? t.editable : !0
    }
  ) : r === "date_time" ? i = K(
    t,
    {
      dataType: "date",
      propertyConfig: "date_time",
      editable: t.editable !== void 0 ? t.editable : !0,
      mode: "date_time"
    }
  ) : r === "repeat" ? i = K(
    t,
    {
      dataType: "array",
      propertyConfig: "repeat",
      editable: t.editable !== void 0 ? t.editable : !0
    }
  ) : r === "block" ? i = K(
    t,
    {
      dataType: "array",
      propertyConfig: "block",
      editable: t.editable !== void 0 ? t.editable : !0,
      oneOf: {
        properties: {}
      }
    }
  ) : r && n[r] && (i = {
    ...n[r].property,
    propertyConfig: r
  }), i;
}
function sr({ value: t, optionDisabled: r, propertyConfig: n, existing: i }) {
  return /* @__PURE__ */ e(
    ee,
    {
      value: t,
      disabled: r,
      className: "flex flex-row items-center",
      children: /* @__PURE__ */ a(
        "div",
        {
          className: fe(
            "flex flex-row items-center text-base min-h-[52px]",
            r ? "w-full" : ""
          ),
          children: [
            /* @__PURE__ */ e("div", { className: "mr-8", children: /* @__PURE__ */ e($e, { propertyConfig: n }) }),
            /* @__PURE__ */ a("div", { children: [
              /* @__PURE__ */ e("div", { children: n.name }),
              /* @__PURE__ */ e(
                V,
                {
                  variant: "caption",
                  color: "disabled",
                  className: "max-w-sm",
                  children: i && r ? "You can only switch to widgets that use the same data type" : n.description
                }
              )
            ] })
          ]
        }
      )
    }
  );
}
function Ri({
  disabled: t,
  showErrors: r
}) {
  const { values: n, setFieldValue: i } = G(), l = I(n, "url");
  return /* @__PURE__ */ a(R, { children: [
    /* @__PURE__ */ e("div", { className: "col-span-12", children: /* @__PURE__ */ a(
      Ne,
      {
        disabled: t,
        position: "item-aligned",
        onValueChange: (o) => {
          o === "[NONE]" ? i("url", !0) : i("url", o);
        },
        label: "Preview type",
        renderValue: (o) => {
          switch (o) {
            case "image":
              return "Image";
            case "video":
              return "Video";
            case "audio":
              return "Audio";
            default:
              return "Display URL";
          }
        },
        value: l ?? "[NONE]",
        children: [
          /* @__PURE__ */ e(ee, { value: "[NONE]", children: "Display URL" }),
          /* @__PURE__ */ e(ee, { value: "image", children: "Image" }),
          /* @__PURE__ */ e(ee, { value: "video", children: "Video" }),
          /* @__PURE__ */ e(ee, { value: "audio", children: "Audio" })
        ]
      }
    ) }),
    /* @__PURE__ */ e("div", { className: "col-span-12", children: /* @__PURE__ */ e(xe, { children: /* @__PURE__ */ e(
      Se,
      {
        disabled: t,
        max: !0,
        min: !0,
        trim: !0,
        showErrors: r
      }
    ) }) }),
    /* @__PURE__ */ e("div", { className: "col-span-12", children: /* @__PURE__ */ e(
      Oe,
      {
        name: "defaultValue",
        disabled: t,
        onChange: (o) => {
          i("defaultValue", o.target.value === "" ? void 0 : o.target.value);
        },
        label: "Default value",
        value: I(n, "defaultValue") ?? ""
      }
    ) })
  ] });
}
const Ui = [
  "text_field",
  "multiline",
  "markdown",
  "url",
  "email",
  "select",
  "multi_select",
  "number_input",
  "number_select",
  "multi_number_select",
  "file_upload",
  "multi_file_upload",
  "reference",
  "multi_references",
  "switch",
  "date_time",
  "group",
  "key_value",
  "repeat",
  "block"
], dr = Object.entries(Kt).filter(([t]) => Ui.includes(t)).map(([t, r]) => ({ [t]: r })).reduce((t, r) => ({ ...t, ...r }), {}), cr = Y.memo(
  function(r) {
    const {
      includeIdAndName: n = !0,
      autoOpenTypeSelect: i,
      existingProperty: l,
      autoUpdateId: o,
      inArray: d,
      propertyKey: c,
      existingPropertyKeys: u,
      propertyNamespace: m,
      property: p,
      onPropertyChanged: s,
      onPropertyChangedImmediate: f = !0,
      onDelete: g,
      onError: P,
      initialErrors: y,
      forceShowErrors: x,
      allowDataInference: v,
      getController: b,
      getData: T,
      propertyConfigs: w,
      collectionEditable: C
    } = r, O = {
      id: "",
      name: ""
    }, N = !!(p && !qe(p)) && !C, F = je(p ? {
      id: c,
      previousId: c,
      property: p
    } : void 0), D = ({
      id: S,
      property: h
    }) => {
      const B = {
        id: S,
        previousId: F.current?.id,
        property: h,
        namespace: m
      };
      F.current = B, s?.(B);
    }, _ = Ot({
      initialValues: p ? { id: c, ...p } : O,
      initialErrors: y,
      validateOnChange: !0,
      validateOnInitialRender: !0,
      onSubmit: (S, h) => {
        console.debug("onSubmit", S);
        const {
          id: B,
          ...oe
        } = S;
        D({
          id: B,
          property: { ...oe, editable: oe.editable ?? !0 }
        }), l || h.resetForm({ values: O });
      },
      validation: (S) => {
        const h = {};
        if (n) {
          if (!S.name)
            h.name = "Required";
          else {
            const B = $i(S.name);
            B && (h.name = B);
          }
          if (!S.id)
            h.id = "Required";
          else {
            const B = Li(S.id, u);
            B && (h.id = B);
          }
        }
        return S.dataType === "string" && S.validation?.matches && !Pr(S.validation?.matches.toString()) && (h.validation = {
          matches: "Invalid regular expression"
        }), S.dataType === "reference" && !S.path && (h.path = "You must specify a target collection for the field"), S.propertyConfig === "repeat" && (S.of || (h.of = "You need to specify a repeat field")), S.propertyConfig === "block" && (S.oneOf || (h.oneOf = "You need to specify the properties of this block")), h;
      }
    });
    return ue(() => {
      b?.(_);
    }, [_, b]), /* @__PURE__ */ e(Vt, { value: _, children: /* @__PURE__ */ e(
      ji,
      {
        onPropertyChanged: f ? D : void 0,
        onDelete: g,
        includeIdAndTitle: n,
        propertyNamespace: m,
        onError: P,
        showErrors: x || _.submitCount > 0,
        existing: l,
        autoUpdateId: o,
        inArray: d,
        autoOpenTypeSelect: i,
        disabled: N,
        getData: T,
        allowDataInference: v,
        propertyConfigs: w,
        collectionEditable: C,
        ..._
      }
    ) });
  },
  (t, r) => t.getData === r.getData && t.propertyKey === r.propertyKey && t.propertyNamespace === r.propertyNamespace && t.includeIdAndName === r.includeIdAndName && t.autoOpenTypeSelect === r.autoOpenTypeSelect && t.autoUpdateId === r.autoUpdateId && t.existingProperty === r.existingProperty
);
function Ve({
  open: t,
  onCancel: r,
  onOkClicked: n,
  onPropertyChanged: i,
  getData: l,
  collectionEditable: o,
  ...d
}) {
  const c = je();
  return /* @__PURE__ */ e(
    Fe,
    {
      open: t ?? !1,
      maxWidth: "xl",
      fullWidth: !0,
      children: /* @__PURE__ */ a(
        "form",
        {
          noValidate: !0,
          autoComplete: "off",
          onSubmit: (m) => {
            m.preventDefault(), m.stopPropagation(), c.current?.handleSubmit(m);
          },
          children: [
            /* @__PURE__ */ e(De, { children: /* @__PURE__ */ e(
              cr,
              {
                ...d,
                onPropertyChanged: (m) => {
                  i?.(m), n?.();
                },
                collectionEditable: o,
                onPropertyChangedImmediate: !1,
                getController: (m) => {
                  c.current = m;
                },
                getData: l
              }
            ) }),
            /* @__PURE__ */ a(Be, { children: [
              r && /* @__PURE__ */ e(
                z,
                {
                  variant: "text",
                  onClick: () => {
                    r(), c.current?.resetForm();
                  },
                  children: "Cancel"
                }
              ),
              /* @__PURE__ */ e(
                z,
                {
                  variant: "outlined",
                  type: "submit",
                  color: "primary",
                  children: "Ok"
                }
              )
            ] })
          ]
        }
      )
    }
  );
}
function ji({
  values: t,
  errors: r,
  setValues: n,
  existing: i,
  autoUpdateId: l = !1,
  autoOpenTypeSelect: o,
  includeIdAndTitle: d,
  onPropertyChanged: c,
  onDelete: u,
  propertyNamespace: m,
  onError: p,
  showErrors: s,
  disabled: f,
  inArray: g,
  getData: P,
  allowDataInference: y,
  propertyConfigs: x,
  collectionEditable: v
}) {
  const [b, T] = j(o), [w, C] = j(!1), [O, N] = j(t?.dataType ? Wt(t) : void 0), F = Object.entries(dr).concat(Object.entries(x)), D = g ? F.filter(([Z, H]) => !ie(H.property) && H.property?.dataType !== "array") : F, _ = Er(t), S = je(null), h = je(t), B = s && I(r, "selectedWidget");
  ue(() => {
    if (c && (!d || _.id)) {
      const {
        id: Z,
        ...H
      } = _;
      be(_, h.current) || (c({
        id: Z,
        property: H,
        namespace: m
      }), h.current = _);
    }
  }, [_, d, c, m]), ue(() => {
    t?.id && p && p(t?.id, m, r);
  }, [r, p, m, t?.id]);
  const oe = (Z) => {
    N(Z), n(lr(t, Z, x)), setTimeout(() => {
      S.current?.focus();
    }, 0);
  };
  let q;
  return O === "text_field" || O === "multiline" || O === "markdown" || O === "email" ? q = /* @__PURE__ */ e(
    _i,
    {
      widgetId: O,
      disabled: f,
      showErrors: s
    }
  ) : O === "url" ? q = /* @__PURE__ */ e(
    Ri,
    {
      disabled: f,
      showErrors: s
    }
  ) : O === "select" || O === "number_select" ? q = /* @__PURE__ */ e(
    Ut,
    {
      multiselect: !1,
      allowDataInference: y,
      updateIds: !i,
      disabled: f,
      getData: P,
      showErrors: s
    }
  ) : O === "multi_select" || O === "multi_number_select" ? q = /* @__PURE__ */ e(
    Ut,
    {
      multiselect: !0,
      updateIds: !i,
      disabled: f,
      allowDataInference: y,
      getData: P,
      showErrors: s
    }
  ) : O === "file_upload" ? q = /* @__PURE__ */ e(
    jt,
    {
      existing: i,
      multiple: !1,
      disabled: f
    }
  ) : O === "multi_file_upload" ? q = /* @__PURE__ */ e(
    jt,
    {
      existing: i,
      multiple: !0,
      disabled: f
    }
  ) : O === "switch" ? q = /* @__PURE__ */ e(Fi, { disabled: f }) : O === "number_input" ? q = /* @__PURE__ */ e(Ai, { disabled: f }) : O === "group" ? q = /* @__PURE__ */ e(
    Oi,
    {
      disabled: f,
      getData: P,
      allowDataInference: y,
      collectionEditable: v,
      propertyConfigs: x
    }
  ) : O === "block" ? q = /* @__PURE__ */ e(
    Ei,
    {
      disabled: f,
      getData: P,
      allowDataInference: y,
      collectionEditable: v,
      propertyConfigs: x
    }
  ) : O === "reference" ? q = /* @__PURE__ */ e(
    qt,
    {
      showErrors: s,
      existing: i,
      multiple: !1,
      disabled: f
    }
  ) : O === "date_time" ? q = /* @__PURE__ */ e(Bi, { disabled: f }) : O === "multi_references" ? q = /* @__PURE__ */ e(
    qt,
    {
      showErrors: s,
      existing: i,
      multiple: !0,
      disabled: f
    }
  ) : O === "repeat" ? q = /* @__PURE__ */ e(
    Vi,
    {
      showErrors: s,
      existing: i,
      getData: P,
      allowDataInference: y,
      disabled: f,
      collectionEditable: v,
      propertyConfigs: x
    }
  ) : O === "key_value" ? q = /* @__PURE__ */ e(zi, { disabled: f }) : q = null, /* @__PURE__ */ a(R, { children: [
    f && /* @__PURE__ */ a(Hr, { mode: "warn", children: [
      /* @__PURE__ */ e(V, { children: "This property can't be edited" }),
      /* @__PURE__ */ a(V, { variant: "caption", children: [
        "You may not have permission to edit it or it is defined in code with no ",
        /* @__PURE__ */ e("code", { children: "editable" }),
        " flag"
      ] })
    ] }),
    /* @__PURE__ */ a("div", { className: "flex mt-2 justify-between", children: [
      /* @__PURE__ */ a("div", { className: "w-full flex flex-col gap-2", children: [
        /* @__PURE__ */ e(
          Ne,
          {
            error: !!B,
            value: O ?? "",
            placeholder: "Select a property widget",
            open: b,
            onOpenChange: T,
            position: "item-aligned",
            disabled: f,
            renderValue: (Z) => {
              if (!Z)
                return /* @__PURE__ */ e("em", { children: "Select a property widget" });
              const H = Z, Q = Kt[H] ?? x[H], se = Q.property, Me = se && !ie(se) ? Le(se, x) : void 0, we = ie(se) || i && se.dataType !== t?.dataType, de = Me ? K(Me, Q) : Q;
              return /* @__PURE__ */ a(
                "div",
                {
                  onClick: (re) => {
                    we && (re.stopPropagation(), re.preventDefault());
                  },
                  className: fe(
                    "flex items-center",
                    we ? "w-full pointer-events-none opacity-50" : ""
                  ),
                  children: [
                    /* @__PURE__ */ e("div", { className: "mr-8", children: /* @__PURE__ */ e($e, { propertyConfig: de }) }),
                    /* @__PURE__ */ a("div", { className: "flex flex-col items-start text-base text-left", children: [
                      /* @__PURE__ */ e("div", { children: de.name }),
                      /* @__PURE__ */ e(
                        V,
                        {
                          variant: "caption",
                          color: "disabled",
                          children: we ? "You can only switch to widgets that use the same data type" : de.description
                        }
                      )
                    ] })
                  ]
                }
              );
            },
            onValueChange: (Z) => {
              oe(Z);
            },
            children: D.map(([Z, H]) => {
              const Q = H.property, se = i && !ie(Q) && Q.dataType !== t?.dataType;
              return /* @__PURE__ */ e(
                sr,
                {
                  value: Z,
                  optionDisabled: se,
                  propertyConfig: H,
                  existing: i
                },
                Z
              );
            })
          }
        ),
        B && /* @__PURE__ */ e(
          V,
          {
            variant: "caption",
            className: "ml-3.5",
            color: "error",
            children: "Required"
          }
        )
      ] }),
      u && t?.id && /* @__PURE__ */ e(
        ae,
        {
          variant: "ghost",
          className: "m-4",
          disabled: f,
          onClick: () => C(!0),
          children: /* @__PURE__ */ e(mt, {})
        }
      )
    ] }),
    /* @__PURE__ */ a("div", { className: "grid grid-cols-12 gap-y-12 mt-8 mb-8", children: [
      d && /* @__PURE__ */ e(
        Ii,
        {
          showErrors: s,
          disabledId: i,
          isNewProperty: !i,
          disabled: f,
          autoUpdateId: l,
          ref: S
        }
      ),
      q,
      /* @__PURE__ */ e("div", { className: "col-span-12", children: /* @__PURE__ */ e(Mi, { disabled: f }) })
    ] }),
    u && /* @__PURE__ */ e(
      ct,
      {
        open: w,
        onAccept: () => u(t?.id, m),
        onCancel: () => C(!1),
        title: /* @__PURE__ */ e("div", { children: "Delete this property?" }),
        body: /* @__PURE__ */ a("div", { children: [
          " This will ",
          /* @__PURE__ */ e("b", { children: "not delete any data" }),
          ", only modify the collection."
        ] })
      }
    )
  ] });
}
const qi = /^[a-zA-Z_][a-zA-Z0-9_]*$/;
function Li(t, r) {
  let n;
  return t || (n = "You must specify an id for the field"), t && !t.match(qi) && (n = "The id can only contain letters, numbers and underscores (_), and not start with a number"), t && r && r.includes(t) && (n = "There is another field with this ID already"), n;
}
function $i(t) {
  let r;
  return t || (r = "You must specify a title for the field"), r;
}
function Hi(t) {
  return t ? (t.slice(0, 1).toLowerCase() + t.slice(1)).replace(/([-_ ]){1,}/g, " ").split(/[-_ ]/).reduce((r, n) => r + n[0].toUpperCase() + n.substring(1), "") : "";
}
function Yi({
  collection: t,
  onOpenChange: r,
  open: n
}) {
  const i = Ie(), l = t ? `import { EntityCollection } from "firecms";

const ` + (t?.name ? Hi(t.name) : "my") + "Collection:EntityCollection = " + si.stringify(ur(t), null, "	") : "No collection selected";
  return /* @__PURE__ */ a(
    Fe,
    {
      open: n,
      onOpenChange: r,
      maxWidth: "4xl",
      children: [
        /* @__PURE__ */ a(De, { children: [
          /* @__PURE__ */ a(V, { variant: "h6", className: "my-4", children: [
            "Code for ",
            t.name
          ] }),
          /* @__PURE__ */ a(V, { variant: "body2", className: "my-4 mb-8", children: [
            "If you want to customise the collection in code, you can add this collection code to your CMS app configuration. More info in the ",
            /* @__PURE__ */ e(
              "a",
              {
                rel: "noopener noreferrer",
                href: "https://firecms.co/docs/customization_quickstart",
                children: "docs"
              }
            ),
            "."
          ] }),
          /* @__PURE__ */ e(
            di,
            {
              theme: ci.vsDark,
              code: l,
              language: "typescript",
              children: ({
                className: o,
                style: d,
                tokens: c,
                getLineProps: u,
                getTokenProps: m
              }) => /* @__PURE__ */ e("pre", { style: d, className: "p-4 rounded text-sm", children: c.map((p, s) => /* @__PURE__ */ e("div", { ...u({ line: p }), children: p.map((f, g) => /* @__PURE__ */ e("span", { ...m({ token: f }) }, g)) }, s)) })
            }
          )
        ] }),
        /* @__PURE__ */ a(Be, { children: [
          /* @__PURE__ */ a(
            z,
            {
              variant: "text",
              size: "small",
              onClick: (o) => (o.stopPropagation(), o.preventDefault(), i.open({
                type: "success",
                message: "Copied"
              }), navigator.clipboard.writeText(l)),
              children: [
                /* @__PURE__ */ e(Yr, { size: "small" }),
                "Copy to clipboard"
              ]
            }
          ),
          /* @__PURE__ */ e(z, { onClick: () => r(!1), children: "Close" })
        ] })
      ]
    }
  );
}
function ur(t) {
  const r = (n) => {
    const i = {
      ...n
    };
    return delete i.fromBuilder, delete i.resolved, delete i.propertiesOrder, delete i.editable, i.type === "map" ? {
      ...i,
      properties: i.properties.map(r)
    } : i;
  };
  return {
    id: t.id,
    name: t.name,
    singularName: t.singularName,
    path: t.path,
    description: t.description,
    editable: !0,
    collectionGroup: t.collectionGroup,
    icon: t.icon,
    group: t.group,
    customId: t.customId,
    initialFilter: t.initialFilter,
    initialSort: t.initialSort,
    properties: Object.entries(t.properties ?? {}).map(([n, i]) => ({
      [n]: r(i)
    })).reduce((n, i) => ({ ...n, ...i }), {}),
    subcollections: (t.subcollections ?? []).map(ur)
  };
}
function Gi({
  showErrors: t,
  isNewCollection: r,
  propertyErrorsRef: n,
  onPropertyError: i,
  setDirty: l,
  reservedGroups: o,
  extraIcon: d,
  getUser: c,
  getData: u,
  doCollectionInference: m,
  propertyConfigs: p,
  collectionEditable: s
}) {
  const {
    values: f,
    setFieldValue: g,
    setFieldError: P,
    setFieldTouched: y,
    errors: x,
    dirty: v
  } = G(), b = Ie(), T = wr(), w = !T, [C, O] = j(), [N, F] = j(), [D, _] = j(), S = N ? ne(N, D) : void 0, h = S ? I(f.properties, S.replaceAll(".", ".properties.")) : void 0, [B, oe] = j(!1), [q, Z] = j(!1), [H, Q] = j(!1), [se, Me] = j([]), we = Y.useRef(f.propertiesOrder ? { "": f.propertiesOrder } : {});
  ue(() => {
    l && l(v);
  }, [v]);
  const de = m ? () => {
    m && (Z(!0), m(f).then((A) => {
      if (A && He(A.properties), !A) {
        b.open({
          type: "error",
          message: "Could not infer properties from data"
        });
        return;
      }
      const U = (A.properties ? Object.keys(A.properties) : []).filter((M) => !f.properties[M]);
      if (U.length === 0) {
        b.open({
          type: "info",
          message: "No new properties found in existing data"
        });
        return;
      }
      const k = {
        ...U.reduce((M, L) => (M[L] = (A.properties ?? {})[L], M), {}),
        ...f.properties
      }, E = [
        ...U,
        ...f.propertiesOrder ?? []
      ];
      g("properties", k, !1), ve(E), Me(U);
    }).finally(() => {
      Z(!1);
    }));
  } : void 0, re = J((A) => A ? we.current[A] ?? I(f, Ce(A)) : we.current[""], [f]), ve = J((A, U) => {
    const k = Ce(U);
    g(k, A, !1), we.current[U ?? ""] = A;
  }, [g]), ke = J((A, U) => {
    const k = A ? ne(A, U) : void 0;
    if (!k)
      throw Error("collection editor miss config");
    g(he(k), void 0, !1);
    const M = re(U).filter((L) => L !== A);
    ve(M, U), Q(!1), O(void 0), F(void 0), _(void 0);
  }, [re, g, ve]), Ke = (A, U) => {
    g(Ce(U), A, !1);
  }, vt = ({
    id: A,
    property: U
  }) => {
    if (!A)
      throw Error("Need to include an ID when creating a new property");
    g("properties", {
      ...f.properties ?? {},
      [A]: U
    }, !1);
    const k = [...f.propertiesOrder ?? Object.keys(f.properties), A];
    ve(k), Q(!1), T && (O(k.indexOf(A)), F(A)), _(void 0);
  }, pe = ({
    id: A,
    property: U,
    previousId: k,
    namespace: E
  }) => {
    const M = A ? ne(A, E) : void 0, L = M ? he(M) : void 0;
    if (k && k !== A) {
      console.debug("onPropertyChanged, id change", {
        id: A,
        property: U,
        previousId: k,
        namespace: E
      });
      const ye = ne(k, E), et = he(ye), _t = re(E).map((rt) => rt === k ? A : rt).filter((rt) => rt !== void 0);
      ve(_t, E), A && (O(_t.indexOf(A)), F(A)), g(et, void 0, !1), y(et, !1, !1);
    }
    console.debug("onPropertyChanged", {
      id: A,
      property: U,
      previousId: k,
      namespace: E,
      propertyPath: L
    }), L && (g(L, U, !1), y(L, !0, !1));
  }, We = J((A, U, k) => {
    const E = A ? ne(A, U) : void 0;
    if (console.debug("onPropertyErrorInternal", {
      id: A,
      namespace: U,
      error: k,
      propertyPath: E
    }), E) {
      const M = k && Object.keys(k).length > 0;
      i(A, U, M ? k : void 0), P(he(E), M ? "Property error" : void 0);
    }
  }, []), Ze = () => {
    O(void 0), F(void 0);
  }, Je = N && n?.current?.properties ? n.current.properties[N] : void 0, Qe = f?.propertiesOrder === void 0 || f.propertiesOrder.length === 0, ze = f.propertiesOrder ? f.propertiesOrder : Object.keys(f.properties), Xe = Jt(() => f.ownerId && c ? c(f.ownerId) : null, [c, f.ownerId]), yt = J((A, U) => {
    console.debug("CollectionEditor: onPropertyClick", {
      propertyKey: A,
      namespace: U
    }), O(ze.indexOf(A)), F(A), _(U);
  }, [ze]), bt = /* @__PURE__ */ a("div", { className: "grid grid-cols-12 gap-2 h-full bg-gray-50 dark:bg-gray-900", children: [
    /* @__PURE__ */ a("div", { className: fe(
      "p-4 md:p-8 pb-20 md:pb-20",
      "col-span-12 lg:col-span-5 h-full overflow-auto",
      !w && "border-r " + kt
    ), children: [
      /* @__PURE__ */ a("div", { className: "flex my-2", children: [
        /* @__PURE__ */ a("div", { className: "flex-grow mb-4", children: [
          /* @__PURE__ */ e(
            $,
            {
              name: "name",
              as: W,
              invisible: !0,
              className: "-ml-1",
              inputClassName: "text-2xl font-headers",
              placeholder: "Collection name",
              size: "small",
              required: !0,
              error: !!x?.name
            }
          ),
          Xe && /* @__PURE__ */ a(
            V,
            {
              variant: "body2",
              className: "ml-2",
              color: "secondary",
              children: [
                "Created by ",
                Xe.displayName
              ]
            }
          )
        ] }),
        d && /* @__PURE__ */ e("div", { className: "ml-4", children: d }),
        /* @__PURE__ */ a("div", { className: "ml-1 mt-2 flex flex-row gap-2", children: [
          /* @__PURE__ */ e(te, { title: "Get the code for this collection", children: /* @__PURE__ */ e(
            ae,
            {
              variant: "filled",
              disabled: q,
              onClick: () => oe(!0),
              children: /* @__PURE__ */ e(Gr, {})
            }
          ) }),
          de && /* @__PURE__ */ e(te, { title: "Add new properties based on data", children: /* @__PURE__ */ e(
            ae,
            {
              variant: "filled",
              disabled: q,
              onClick: de,
              children: q ? /* @__PURE__ */ e(Ge, { size: "small" }) : /* @__PURE__ */ e(ft, {})
            }
          ) }),
          /* @__PURE__ */ e(te, { title: "Add new property", children: /* @__PURE__ */ e(
            z,
            {
              variant: "outlined",
              onClick: () => Q(!0),
              children: /* @__PURE__ */ e(ce, {})
            }
          ) })
        ] })
      ] }),
      /* @__PURE__ */ e(me, { children: /* @__PURE__ */ e(
        gt,
        {
          className: "pl-8",
          inferredPropertyKeys: se,
          selectedPropertyKey: N ? ne(N, D) : void 0,
          properties: f.properties,
          additionalFields: f.additionalFields,
          propertiesOrder: ze,
          onPropertyClick: yt,
          onPropertyMove: Ke,
          onPropertyRemove: r ? ke : void 0,
          collectionEditable: s,
          errors: x
        }
      ) }),
      /* @__PURE__ */ e(
        z,
        {
          className: "mt-8 w-full",
          color: "primary",
          variant: "outlined",
          size: "large",
          onClick: () => Q(!0),
          startIcon: /* @__PURE__ */ e(ce, {}),
          children: "Add new property"
        }
      )
    ] }),
    !w && /* @__PURE__ */ e("div", { className: "col-span-12 lg:col-span-7 p-4 md:py-8 md:px-4 h-full overflow-auto pb-20 md:pb-20", children: /* @__PURE__ */ a(
      ge,
      {
        className: "sticky top-8 p-4 min-h-full border border-transparent w-full flex flex-col justify-center ",
        children: [
          S && h && !ie(h) && /* @__PURE__ */ e(
            cr,
            {
              inArray: !1,
              existingProperty: !r,
              autoUpdateId: !1,
              allowDataInference: !r,
              autoOpenTypeSelect: !1,
              propertyKey: N,
              propertyNamespace: D,
              property: h,
              onPropertyChanged: pe,
              onDelete: ke,
              onError: We,
              forceShowErrors: t,
              initialErrors: Je,
              getData: u,
              propertyConfigs: p,
              collectionEditable: s
            },
            `edit_view_${C}`
          ),
          !h && /* @__PURE__ */ a("div", { className: "w-full flex flex-col items-center justify-center h-full gap-4", children: [
            /* @__PURE__ */ e(V, { variant: "label", className: "", children: Qe ? "Now you can add your first property" : "Select a property to edit it" }),
            /* @__PURE__ */ a(
              z,
              {
                variant: "outlined",
                onClick: () => Q(!0),
                children: [
                  /* @__PURE__ */ e(ce, {}),
                  "Add new property"
                ]
              }
            )
          ] }),
          h && ie(h) && /* @__PURE__ */ e(V, { variant: "label", className: "flex items-center justify-center", children: "This property is defined as a property builder in code" })
        ]
      }
    ) }),
    w && /* @__PURE__ */ e(
      Ve,
      {
        inArray: !1,
        open: C !== void 0,
        autoUpdateId: !h,
        allowDataInference: !r,
        existingProperty: !0,
        autoOpenTypeSelect: !1,
        propertyKey: N,
        propertyNamespace: D,
        property: h,
        onPropertyChanged: pe,
        onDelete: ke,
        onError: We,
        forceShowErrors: t,
        initialErrors: Je,
        getData: u,
        propertyConfigs: p,
        collectionEditable: s,
        onOkClicked: w ? Ze : void 0
      },
      `edit_view_${C}`
    )
  ] });
  return /* @__PURE__ */ a(R, { children: [
    bt,
    /* @__PURE__ */ e(
      Ve,
      {
        inArray: !1,
        existingProperty: !1,
        autoOpenTypeSelect: !0,
        autoUpdateId: !0,
        forceShowErrors: t,
        open: H,
        onCancel: () => Q(!1),
        onPropertyChanged: vt,
        getData: u,
        allowDataInference: !r,
        propertyConfigs: p,
        collectionEditable: s,
        existingPropertyKeys: f.propertiesOrder
      }
    ),
    /* @__PURE__ */ e(me, { children: /* @__PURE__ */ e(
      Yi,
      {
        collection: f,
        open: B,
        onOpenChange: oe
      }
    ) })
  ] });
}
function Ki({
  open: t,
  handleOk: r,
  handleCancel: n,
  body: i,
  title: l
}) {
  return /* @__PURE__ */ a(
    Fe,
    {
      open: t,
      onOpenChange: (o) => o ? n() : r(),
      "aria-labelledby": "alert-dialog-title",
      "aria-describedby": "alert-dialog-description",
      children: [
        /* @__PURE__ */ a(De, { children: [
          /* @__PURE__ */ e(V, { variant: "h6", children: l ?? "Unsaved changes" }),
          i && /* @__PURE__ */ e(V, { children: i }),
          /* @__PURE__ */ e(V, { children: "Are you sure?" })
        ] }),
        /* @__PURE__ */ a(Be, { children: [
          /* @__PURE__ */ e(z, { variant: "text", onClick: n, autoFocus: !0, children: " Cancel " }),
          /* @__PURE__ */ e(z, { onClick: r, children: " Ok " })
        ] })
      ]
    }
  );
}
function Wi({ open: t, onClose: r }) {
  const {
    entityViews: n
  } = Ae();
  return /* @__PURE__ */ a(
    Fe,
    {
      maxWidth: "md",
      open: t,
      children: [
        /* @__PURE__ */ a(De, { className: "flex flex-col gap-4", children: [
          /* @__PURE__ */ e(V, { variant: "h6", children: "Select view" }),
          n?.map((i) => /* @__PURE__ */ a(
            z,
            {
              onClick: () => r(i.key),
              fullWidth: !0,
              variant: "text",
              children: [
                i.name,
                " (",
                i.key,
                ")"
              ]
            },
            i.key
          )),
          (n ?? []).length === 0 && /* @__PURE__ */ e(V, { variant: "body2", children: "No custom views defined" })
        ] }),
        /* @__PURE__ */ e(Be, { children: /* @__PURE__ */ e(z, { variant: "outlined", onClick: () => r(), children: "Cancel" }) })
      ]
    }
  );
}
function Zi({
  collection: t,
  parentCollection: r,
  configController: n,
  collectionInference: i,
  getUser: l,
  parentCollectionIds: o
}) {
  const { entityViews: d } = Ae(), [c, u] = Y.useState(), [m, p] = Y.useState(!1), [s, f] = Y.useState(), [g, P] = Y.useState(), {
    values: y,
    setFieldValue: x
  } = G(), v = t.subcollections ?? [], b = y.entityViews?.filter((C) => typeof C == "string").map((C) => Tr(C, d)).filter(Boolean) ?? [], T = t.entityViews?.filter((C) => typeof C != "string") ?? [], w = b.length + T.length;
  return /* @__PURE__ */ a("div", { className: "overflow-auto my-auto", children: [
    /* @__PURE__ */ e(ht, { maxWidth: "2xl", className: "flex flex-col gap-4 p-8 m-auto", children: /* @__PURE__ */ a("div", { className: "flex  flex-col gap-16", children: [
      /* @__PURE__ */ a("div", { className: "flex-grow flex flex-col gap-4 items-start", children: [
        /* @__PURE__ */ a(V, { variant: "h5", children: [
          "Subcollections of ",
          y.name
        ] }),
        /* @__PURE__ */ a(ge, { className: "flex flex-col gap-4 p-2 w-full", children: [
          v && v.length > 0 && /* @__PURE__ */ e(Bt, { children: /* @__PURE__ */ e(Mt, { children: v.map((C) => /* @__PURE__ */ a(
            Ct,
            {
              onClick: () => P({
                isNewCollection: !1,
                editedCollectionId: C.id
              }),
              children: [
                /* @__PURE__ */ e(
                  Re,
                  {
                    align: "left",
                    children: /* @__PURE__ */ e(V, { variant: "subtitle2", className: "flex-grow", children: C.name })
                  }
                ),
                /* @__PURE__ */ e(
                  Re,
                  {
                    align: "right",
                    children: /* @__PURE__ */ e(te, { title: "Remove", children: /* @__PURE__ */ e(
                      ae,
                      {
                        size: "small",
                        onClick: (O) => {
                          O.preventDefault(), O.stopPropagation(), u(C.id);
                        },
                        color: "inherit",
                        children: /* @__PURE__ */ e(mt, { size: "small" })
                      }
                    ) })
                  }
                )
              ]
            },
            C.path
          )) }) }),
          /* @__PURE__ */ e(
            z,
            {
              onClick: () => {
                P({
                  isNewCollection: !0
                });
              },
              variant: "text",
              startIcon: /* @__PURE__ */ e(ce, {}),
              children: "Add subcollection"
            }
          )
        ] })
      ] }),
      /* @__PURE__ */ a("div", { className: "flex-grow  flex flex-col gap-4 items-start", children: [
        /* @__PURE__ */ e(V, { variant: "h5", children: "Custom views" }),
        w === 0 && /* @__PURE__ */ e(Kr, { action: /* @__PURE__ */ e(
          z,
          {
            variant: "text",
            size: "small",
            href: "https://firecms.co/docs/customization_quickstart",
            component: "a",
            rel: "noopener noreferrer",
            target: "_blank",
            children: "More info"
          }
        ), children: "Define your own custom views by uploading them with the CLI." }),
        /* @__PURE__ */ e(R, { children: /* @__PURE__ */ a(ge, { className: "flex flex-col gap-4 p-2 w-full", children: [
          /* @__PURE__ */ e(Bt, { children: /* @__PURE__ */ a(Mt, { children: [
            b.map((C) => /* @__PURE__ */ a(Ct, { children: [
              /* @__PURE__ */ e(
                Re,
                {
                  align: "left",
                  children: /* @__PURE__ */ e(V, { variant: "subtitle2", className: "flex-grow", children: C.name })
                }
              ),
              /* @__PURE__ */ e(
                Re,
                {
                  align: "right",
                  children: /* @__PURE__ */ e(te, { title: "Remove", children: /* @__PURE__ */ e(
                    ae,
                    {
                      size: "small",
                      onClick: (O) => {
                        O.preventDefault(), O.stopPropagation(), f(C.key);
                      },
                      color: "inherit",
                      children: /* @__PURE__ */ e(mt, { size: "small" })
                    }
                  ) })
                }
              )
            ] }, C.key)),
            T.map((C) => /* @__PURE__ */ e(Ct, { children: /* @__PURE__ */ a(
              Re,
              {
                align: "left",
                children: [
                  /* @__PURE__ */ e(V, { variant: "subtitle2", className: "flex-grow", children: C.name }),
                  /* @__PURE__ */ a(V, { variant: "caption", className: "flex-grow", children: [
                    "This view is defined in code with key ",
                    /* @__PURE__ */ e("code", { children: C.key })
                  ] })
                ]
              }
            ) }, C.key))
          ] }) }),
          /* @__PURE__ */ e(
            z,
            {
              onClick: () => {
                p(!0);
              },
              variant: "text",
              startIcon: /* @__PURE__ */ e(ce, {}),
              children: "Add custom entity view"
            }
          )
        ] }) })
      ] })
    ] }) }),
    /* @__PURE__ */ e("div", { style: { height: "52px" } }),
    c && /* @__PURE__ */ e(
      ct,
      {
        open: !!c,
        onAccept: () => {
          const C = {
            id: c,
            parentCollectionIds: [...o ?? [], t.id]
          };
          console.debug("Deleting subcollection", C), n.deleteCollection(C), u(void 0);
        },
        onCancel: () => u(void 0),
        title: /* @__PURE__ */ e(R, { children: "Delete this subcollection?" }),
        body: /* @__PURE__ */ a(R, { children: [
          " This will ",
          /* @__PURE__ */ e("b", { children: "not delete any data" }),
          ", only the collection in the CMS"
        ] })
      }
    ),
    s && /* @__PURE__ */ e(
      ct,
      {
        open: !!s,
        onAccept: () => {
          x("entityViews", y.entityViews?.filter((C) => C !== s)), f(void 0);
        },
        onCancel: () => f(void 0),
        title: /* @__PURE__ */ e(R, { children: "Remove this view?" }),
        body: /* @__PURE__ */ a(R, { children: [
          "This will ",
          /* @__PURE__ */ e("b", { children: "not delete any data" }),
          ", only the view in the CMS"
        ] })
      }
    ),
    /* @__PURE__ */ e(
      mr,
      {
        open: !!g,
        configController: n,
        parentCollection: t,
        collectionInference: i,
        parentCollectionIds: [...o ?? [], y.id],
        isNewCollection: !1,
        ...g,
        getUser: l,
        handleClose: () => {
          P(void 0);
        }
      }
    ),
    /* @__PURE__ */ e(
      Wi,
      {
        open: m,
        onClose: (C) => {
          C && x("entityViews", [...y.entityViews ?? [], C]), p(!1);
        }
      }
    )
  ] });
}
const Lt = {
  id: "products",
  path: "products",
  name: "Products",
  singularName: "Product",
  icon: "shopping_cart",
  description: "List of the products currently sold in your shop",
  properties: He({
    name: {
      dataType: "string",
      name: "Name",
      description: "Name of this product",
      validation: {
        required: !0
      }
    },
    brand: {
      dataType: "string",
      name: "Brand",
      validation: {
        required: !0
      }
    },
    description: {
      dataType: "string",
      name: "Description",
      description: "Description of this product, supports markdown",
      markdown: !0
    },
    main_image: {
      dataType: "string",
      name: "Image",
      storage: {
        storagePath: "images",
        acceptedFiles: ["image/*"]
      },
      description: "Upload field for images"
    },
    available: {
      dataType: "boolean",
      name: "Available",
      columnWidth: 100,
      description: "Is this product available in the website"
    },
    price: {
      dataType: "number",
      name: "Price",
      validation: {
        requiredMessage: "You must set a positive price",
        min: 0
      }
    },
    images: {
      dataType: "array",
      name: "Images",
      hideFromCollection: !0,
      of: {
        dataType: "string",
        storage: {
          storagePath: "images",
          acceptedFiles: ["image/*"]
        }
      }
    },
    related_products: {
      dataType: "array",
      name: "Related products",
      description: "Products related to this one",
      of: {
        dataType: "reference",
        path: "products"
      }
    },
    metadata: {
      name: "Metadata",
      description: "This is an example of a map property",
      dataType: "map",
      keyValue: !0
    },
    added_on: {
      dataType: "date",
      name: "Added on",
      autoValue: "on_create"
    }
  })
}, $t = {
  id: "blog",
  path: "blog",
  name: "Blog",
  singularName: "Blog entry",
  icon: "article",
  description: "A collection of blog entries",
  defaultSize: "l",
  properties: He({
    name: {
      name: "Name",
      validation: { required: !0 },
      dataType: "string"
    },
    header_image: {
      name: "Header image",
      dataType: "string",
      storage: {
        storagePath: "images",
        acceptedFiles: ["image/*"],
        metadata: {
          cacheControl: "max-age=1000000"
        }
      }
    },
    content: {
      name: "Content",
      description: "Content blocks for the blog entry",
      validation: { required: !0 },
      dataType: "array",
      oneOf: {
        typeField: "type",
        valueField: "value",
        properties: {
          text: {
            dataType: "string",
            name: "Text",
            markdown: !0
          },
          quote: {
            dataType: "string",
            name: "Quote",
            multiline: !0
          },
          images: {
            name: "Images",
            dataType: "array",
            of: {
              dataType: "string",
              storage: {
                storagePath: "images",
                acceptedFiles: ["image/*"],
                metadata: {
                  cacheControl: "max-age=1000000"
                }
              }
            },
            description: "This fields allows uploading multiple images at once and reordering"
          },
          products: {
            name: "Products",
            dataType: "array",
            of: {
              dataType: "reference",
              path: "products",
              previewProperties: ["name", "main_image"]
            }
          }
        },
        propertiesOrder: ["text", "quote", "images", "products"]
      }
    },
    created_on: {
      name: "Created on",
      dataType: "date",
      autoValue: "on_create"
    },
    status: {
      name: "Status",
      validation: { required: !0 },
      dataType: "string",
      enumValues: {
        published: {
          id: "published",
          label: "Published"
        },
        draft: "Draft"
      },
      defaultValue: "draft"
    },
    publish_date: {
      name: "Publish date",
      dataType: "date",
      clearable: !0
    },
    reviewed: {
      name: "Reviewed",
      dataType: "boolean"
    },
    tags: {
      name: "Tags",
      description: "Example of generic array",
      dataType: "array",
      of: {
        dataType: "string",
        previewAsTag: !0
      }
    }
  }),
  initialFilter: {
    status: ["==", "published"]
  }
}, Ht = {
  id: "users",
  path: "users",
  name: "Users",
  singularName: "User",
  description: "Registered users in the app/web",
  icon: "person",
  properties: He({
    displayName: {
      name: "Display name",
      dataType: "string"
    },
    email: {
      name: "Email",
      dataType: "string",
      email: !0
    },
    emailVerified: {
      name: "Email verified",
      dataType: "boolean"
    },
    phone: {
      name: "Phone",
      dataType: "string"
    },
    favourite_products: {
      name: "Favourite products",
      dataType: "array",
      of: {
        dataType: "reference",
        path: "products"
      }
    },
    photoURL: {
      name: "Photo URL",
      dataType: "string",
      url: "image"
    }
  })
}, Yt = {
  id: "pages",
  path: "pages",
  name: "Pages",
  singularName: "Page",
  icon: "insert_drive_file",
  description: "List of website pages that can be edited here",
  properties: {
    title: {
      dataType: "string",
      name: "Page Title",
      validation: { required: !0 }
    },
    slug: {
      dataType: "string",
      name: "URL Slug",
      validation: {
        required: !0,
        unique: !0,
        matches: /^[a-z0-9]+(?:-[a-z0-9]+)*$/,
        matchesMessage: "Must be lowercase, alphanumeric, and hyphenated"
      }
    },
    hero_section: {
      dataType: "map",
      name: "Hero Section",
      properties: {
        headline: {
          dataType: "string",
          name: "Headline",
          validation: { required: !0 }
        },
        subhead: {
          dataType: "string",
          name: "Subheadline"
        },
        background_image: {
          dataType: "string",
          name: "Background Image",
          storage: {
            storagePath: "page_hero/images",
            acceptedFiles: ["image/*"]
          }
        },
        call_to_action: {
          dataType: "string",
          name: "Call to Action"
        },
        call_to_action_link: {
          dataType: "string",
          name: "CTA Link",
          url: !0
        }
      }
    },
    content: {
      dataType: "array",
      name: "Content",
      oneOf: {
        properties: {
          section: {
            dataType: "map",
            name: "Section",
            properties: {
              title: {
                dataType: "string",
                name: "Section Title",
                validation: { required: !0 }
              },
              content: {
                dataType: "string",
                name: "Section Content",
                markdown: !0
              },
              image: {
                dataType: "string",
                name: "Section Image",
                storage: {
                  storagePath: "page_sections/images",
                  acceptedFiles: ["image/*"]
                }
              },
              link: {
                dataType: "string",
                name: "Section Link",
                url: !0
              }
            }
          },
          image: {
            dataType: "string",
            name: "Image",
            storage: {
              storagePath: "page_sections/images",
              acceptedFiles: ["image/*"]
            }
          },
          slider: {
            dataType: "array",
            name: "Slider",
            of: {
              dataType: "map",
              properties: {
                title: {
                  dataType: "string",
                  name: "Title",
                  validation: { required: !0 }
                },
                image: {
                  dataType: "string",
                  storage: {
                    storagePath: "page_sections/images",
                    acceptedFiles: ["image/*"]
                  }
                }
              }
            }
          }
        }
      }
    },
    sidebar: {
      dataType: "map",
      name: "Sidebar",
      properties: {
        title: {
          dataType: "string",
          name: "Sidebar Title",
          validation: { required: !1 }
        },
        content: {
          dataType: "string",
          name: "Sidebar Content",
          markdown: !0
        }
      }
    },
    seo_metadata: {
      dataType: "map",
      name: "SEO Metadata",
      properties: {
        meta_title: {
          dataType: "string",
          name: "Meta Title"
        },
        meta_description: {
          dataType: "string",
          name: "Meta Description"
        },
        focus_keywords: {
          dataType: "array",
          name: "Focus Keywords",
          of: {
            dataType: "string"
          }
        }
      }
    },
    footer_override: {
      dataType: "string",
      name: "Footer Override",
      markdown: !0
    },
    publish_date: {
      dataType: "date",
      name: "Publish Date",
      validation: { required: !0 }
    },
    last_updated: {
      dataType: "date",
      name: "Last Updated",
      autoValue: "on_update"
    },
    is_published: {
      dataType: "boolean",
      name: "Is Published",
      columnWidth: 100,
      description: "Should this page be live on the site?"
    },
    author_uid: {
      dataType: "reference",
      name: "Author",
      path: "users"
    }
  }
};
function Ji({
  path: t,
  pathSuggestions: r,
  parentCollection: n,
  onContinue: i,
  existingCollectionPaths: l
}) {
  const [o, d] = j(!1), [c, u] = j();
  ue(() => {
    r && l && (d(!0), r(t).then((g) => {
      const P = g.filter((y) => !(l ?? []).find((x) => x.trim().toLowerCase() === y.trim().toLowerCase()));
      u(P);
    }).finally(() => d(!1)));
  }, [l, t, r]);
  const {
    values: m,
    setFieldValue: p,
    setValues: s,
    submitCount: f
  } = G();
  return /* @__PURE__ */ e("div", { className: "overflow-auto my-auto", children: /* @__PURE__ */ a(ht, { maxWidth: "4xl", className: "flex flex-col gap-4 p-8 m-auto", children: [
    /* @__PURE__ */ e(
      "div",
      {
        className: "flex flex-row py-2 pt-3 items-center",
        children: /* @__PURE__ */ e(V, { variant: "h4", className: "flex-grow", children: "New collection" })
      }
    ),
    n && /* @__PURE__ */ e(Pt, { colorScheme: "tealDarker", children: /* @__PURE__ */ a(V, { variant: "caption", children: [
      "This is a subcollection of ",
      /* @__PURE__ */ e("b", { children: n.name })
    ] }) }),
    /* @__PURE__ */ a("div", { className: "my-2", children: [
      /* @__PURE__ */ e(
        V,
        {
          variant: "caption",
          color: "secondary",
          children: "● Use one of the existing paths in your database:"
        }
      ),
      /* @__PURE__ */ a("div", { className: "flex flex-wrap gap-x-2 gap-y-1 items-center my-2 min-h-7", children: [
        o && !c && /* @__PURE__ */ e(Ge, { size: "small" }),
        c?.map((g, P) => /* @__PURE__ */ e(
          Pt,
          {
            colorScheme: "cyanLighter",
            onClick: () => {
              p("name", wt(g)), p("id", g), p("path", g), p("properties", void 0), i();
            },
            size: "small",
            children: g
          },
          g
        )),
        !o && (c ?? [])?.length === 0 && /* @__PURE__ */ e(V, { variant: "caption", children: "No suggestions" })
      ] })
    ] }),
    /* @__PURE__ */ a("div", { className: "my-2", children: [
      /* @__PURE__ */ e(
        V,
        {
          variant: "caption",
          color: "secondary",
          children: "● Select a template:"
        }
      ),
      /* @__PURE__ */ a("div", { className: "flex gap-4", children: [
        /* @__PURE__ */ e(
          lt,
          {
            title: "Products",
            subtitle: "A collection of products with images, prices and stock",
            icon: /* @__PURE__ */ e(it, { size: "small", iconKey: Lt.icon }),
            onClick: () => {
              s(Lt), i();
            }
          }
        ),
        /* @__PURE__ */ e(
          lt,
          {
            title: "Users",
            subtitle: "A collection of users with emails, names and roles",
            icon: /* @__PURE__ */ e(it, { size: "small", iconKey: Ht.icon }),
            onClick: () => {
              s(Ht), i();
            }
          }
        ),
        /* @__PURE__ */ e(
          lt,
          {
            title: "Blog posts",
            subtitle: "A collection of blog posts with images, authors and complex content",
            icon: /* @__PURE__ */ e(it, { size: "small", iconKey: $t.icon }),
            onClick: () => {
              s($t), i();
            }
          }
        ),
        /* @__PURE__ */ e(
          lt,
          {
            title: "Pages",
            subtitle: "A collection of pages with images, authors and complex content",
            icon: /* @__PURE__ */ e(it, { size: "small", iconKey: Yt.icon }),
            onClick: () => {
              s(Yt), i();
            }
          }
        )
      ] })
    ] }),
    !n && /* @__PURE__ */ a("div", { children: [
      /* @__PURE__ */ e(
        V,
        {
          variant: "caption",
          color: "secondary",
          className: "mb-2",
          children: "● Create a collection from a file (csv, json, xls, xslx...)"
        }
      ),
      /* @__PURE__ */ e(ui, { onDataAdded: (g, P) => i(g, P) })
    ] }),
    /* @__PURE__ */ e("div", { children: /* @__PURE__ */ e(z, { variant: "text", onClick: () => i(), className: "my-2", children: "Continue from scratch" }) })
  ] }) });
}
function lt({
  title: t,
  subtitle: r,
  icon: n,
  onClick: i
}) {
  return /* @__PURE__ */ e(te, { title: r, children: /* @__PURE__ */ a(
    rr,
    {
      onClick: i,
      className: fe(
        "my-2 rounded-md border mx-0 p-6 px-4 focus:outline-none transition ease-in-out duration-150 flex flex-row gap-4 items-center",
        "text-gray-700 dark:text-slate-300",
        "hover:border-primary-dark hover:text-primary-dark dark:hover:text-primary focus:ring-primary hover:ring-1 hover:ring-primary",
        "border-gray-400 dark:border-gray-600 "
      ),
      children: [
        n,
        /* @__PURE__ */ e("div", { className: "flex flex-col items-start", children: /* @__PURE__ */ e(V, { variant: "subtitle1", children: t }) })
      ]
    }
  ) });
}
function Qi({
  importConfig: t,
  propertyConfigs: r,
  collectionEditable: n
}) {
  const {
    setFieldValue: i,
    setFieldTouched: l,
    values: o
  } = G(), [d, c] = j(void 0), u = Y.useRef(o.propertiesOrder ? { "": o.propertiesOrder } : {}), m = d ? d.id : void 0, p = d || void 0, s = ({
    id: g,
    property: P,
    previousId: y,
    namespace: x
  }) => {
    const v = g ? ne(g, x) : void 0, b = v ? he(v) : void 0, T = (C) => C ? u.current[C] ?? I(o, Ce(C)) : u.current[""], w = (C, O) => {
      const N = Ce(O);
      i(N, C, !1), u.current[O ?? ""] = C;
    };
    if (y && y !== g) {
      const C = ne(y, x), O = he(C), F = T(x).map((_) => _ === y ? g : _).filter((_) => _ !== void 0);
      w(F, x);
      const D = { ...t.headersMapping };
      Object.keys(D).forEach((_) => {
        D[_] === y && (D[_] = g ?? "");
      }), t.setHeadersMapping(D), i(O, void 0, !1), l(O, !1, !1);
    }
    b && (i(b, P, !1), l(b, !0, !1));
  }, f = async ({
    id: g,
    importKey: P,
    property: y,
    namespace: x
  }) => {
    const v = g ? ne(g, x) : void 0, b = v ? he(v) : void 0, T = t.importData.map((C) => I(C, P)), w = {
      ...ii(T, y, ir),
      editable: !0
    };
    b && (w ? i(b, w, !1) : i(b, y, !1), l(b, !0, !1));
  };
  return /* @__PURE__ */ a("div", { className: "overflow-auto my-auto", children: [
    /* @__PURE__ */ a(ht, { maxWidth: "6xl", className: "flex flex-col gap-4 p-8 m-auto", children: [
      /* @__PURE__ */ e(V, { variant: "h6", className: "my-4 ml-3.5", children: "Data property mapping" }),
      /* @__PURE__ */ e(
        pi,
        {
          importConfig: t,
          destinationProperties: o.properties,
          buildPropertyView: ({
            property: g,
            propertyKey: P,
            importKey: y,
            isIdColumn: x
          }) => x ? /* @__PURE__ */ e(V, { children: " This column will be used as ID" }) : /* @__PURE__ */ e(
            mi,
            {
              property: g,
              propertyKey: P,
              onPropertyNameChanged: (v, b) => i(`properties.${v}.name`, b, !1),
              onEditClick: () => {
                !P || !g || c({
                  ...g,
                  id: P,
                  editable: !0
                });
              },
              propertyTypeView: /* @__PURE__ */ e(
                Xi,
                {
                  property: g,
                  disabled: !1,
                  onPropertyChanged: (v) => f({
                    ...v,
                    importKey: y
                  }),
                  propertyKey: P,
                  propertyConfigs: r
                }
              )
            }
          )
        }
      )
    ] }),
    /* @__PURE__ */ e(
      Ve,
      {
        open: d !== void 0,
        propertyKey: m,
        property: p,
        inArray: !1,
        autoUpdateId: !1,
        onPropertyChanged: s,
        allowDataInference: !1,
        collectionEditable: n,
        onOkClicked: () => {
          c(void 0);
        },
        onCancel: () => {
          c(void 0);
        },
        autoOpenTypeSelect: !1,
        existingProperty: !1,
        propertyConfigs: r
      }
    ),
    /* @__PURE__ */ e("div", { style: { height: "52px" } })
  ] });
}
function Xi({
  property: t,
  onPropertyChanged: r,
  propertyKey: n,
  propertyConfigs: i,
  disabled: l
}) {
  const o = t ? Wt(t) : null, d = t ? Le(t, i) : null, [c, u] = j(!1);
  return /* @__PURE__ */ e(
    te,
    {
      title: t && d ? `${d?.name} - ${t.dataType}` : void 0,
      open: c ? !1 : void 0,
      children: /* @__PURE__ */ e(
        Ne,
        {
          open: c,
          onOpenChange: u,
          invisible: !0,
          className: "w-full",
          disabled: l,
          error: !d,
          value: o ?? "",
          placeholder: "Select a property widget",
          position: "item-aligned",
          renderValue: (m) => d ? /* @__PURE__ */ e($e, { propertyConfig: d }) : null,
          onValueChange: (m) => {
            const p = lr(t, m, i);
            n && r({
              id: n,
              property: p,
              previousId: n,
              namespace: void 0
            });
          },
          children: Object.entries(dr).map(([m, p]) => /* @__PURE__ */ e(
            sr,
            {
              value: m,
              optionDisabled: !1,
              propertyConfig: p,
              existing: !1
            },
            m
          ))
        }
      )
    }
  );
}
function en({
  importConfig: t,
  properties: r,
  propertiesOrder: n
}) {
  const [i, l] = j(!1);
  async function o() {
    const c = t.importData.map((u) => hi(u, t.idColumn, t.headersMapping, r, "TEMP_PATH", t.defaultValues));
    t.setEntities(c);
  }
  ue(() => {
    o().finally(() => l(!1));
  }, []);
  const d = kr();
  return i ? /* @__PURE__ */ e(ut, {}) : /* @__PURE__ */ e(
    Or,
    {
      title: /* @__PURE__ */ a("div", { children: [
        /* @__PURE__ */ e(V, { variant: "subtitle2", children: "Imported data preview" }),
        /* @__PURE__ */ e(V, { variant: "caption", children: "Entities with the same id will be overwritten" })
      ] }),
      tableController: {
        data: t.entities,
        dataLoading: !1,
        noMoreToLoad: !1
      },
      endAdornment: /* @__PURE__ */ e("div", { className: "h-12" }),
      filterable: !1,
      sortable: !1,
      selectionController: d,
      displayedColumnIds: n.map((c) => ({
        key: c,
        disabled: !1
      })),
      properties: r
    }
  );
}
function pr(t, r = "") {
  const n = Object.keys(t).reduce((o, d) => {
    const c = t[d], u = Vr(d), m = r ? `${r}.${u}` : u;
    if (c.dataType === "map" && c.properties) {
      const f = pr(c.properties, m);
      return {
        headersMapping: { ...o.headersMapping, [d]: m },
        properties: {
          ...o.properties,
          [u]: {
            ...c,
            properties: f.properties,
            propertiesOrder: Object.keys(f.properties)
          }
        }
      };
    }
    const p = {
      ...o.properties,
      [u]: c
    };
    return {
      headersMapping: { ...o.headersMapping, [d]: m },
      properties: p
    };
  }, { headersMapping: {}, properties: {} }), i = Object.keys(n.headersMapping)?.[0];
  let l;
  return (i?.includes("id") || i?.includes("key")) && (l = i), {
    ...n,
    idColumn: l
  };
}
function mr(t) {
  const r = t.open, [n, i] = Ue.useState(!1), [l, o] = Ue.useState(!1), d = J(() => {
    n ? o(!0) : t.handleClose(void 0);
  }, [n, t.handleClose]);
  return ue(() => {
    r || (i(!1), o(!1));
  }, [r]), /* @__PURE__ */ a(
    Fe,
    {
      open: r,
      fullWidth: !0,
      fullHeight: !0,
      scrollable: !1,
      maxWidth: "7xl",
      onOpenChange: (c) => c ? void 0 : d(),
      children: [
        r && /* @__PURE__ */ e(
          tn,
          {
            ...t,
            handleCancel: d,
            setFormDirty: i
          }
        ),
        /* @__PURE__ */ e(
          Ki,
          {
            open: l,
            handleOk: () => t.handleClose(void 0),
            handleCancel: () => o(!1),
            body: "There are unsaved changes in this collection"
          }
        )
      ]
    }
  );
}
function tn(t) {
  const { propertyConfigs: r } = Ae(), n = Te(), i = _e(), {
    topLevelNavigation: l,
    collections: o
  } = n, d = t.initialValues, c = !d?.path && (t.parentCollectionIds ?? []).length === 0, u = (t.parentCollection ? t.parentCollection.subcollections : o) ?? [], m = u.map((b) => b.path.trim().toLowerCase()), p = u.map((b) => b.id?.trim().toLowerCase()).filter(Boolean), [s, f] = Ue.useState(), [g, P] = Ue.useState(!1);
  if (ue(() => {
    try {
      n.initialised && (t.editedCollectionId ? f(n.getCollectionFromPaths([...t.parentCollectionIds ?? [], t.editedCollectionId])) : f(void 0), P(!0));
    } catch (b) {
      console.error(b);
    }
  }, [t.editedCollectionId, t.parentCollectionIds, n]), !l)
    throw Error("Internal: Navigation not ready in collection editor");
  const {
    groups: y
  } = l, x = s ? {
    ...s,
    id: s.id ?? s.path ?? Ft(16)
  } : void 0, v = x ? nn(x, r) : {
    id: d?.path ?? Ft(16),
    path: d?.path ?? "",
    name: d?.name ?? "",
    group: d?.group ?? "",
    properties: {},
    propertiesOrder: [],
    icon: zt[Math.floor(Math.random() * zt.length)],
    ownerId: i.user?.uid ?? ""
  };
  return g ? !t.isNewCollection && (!n.initialised || !g) ? /* @__PURE__ */ e(ut, {}) : /* @__PURE__ */ e(
    rn,
    {
      ...t,
      initialValues: v,
      existingPaths: m,
      existingIds: p,
      includeTemplates: c,
      collection: s,
      setCollection: f,
      groups: y,
      propertyConfigs: r
    }
  ) : /* @__PURE__ */ e(ut, {});
}
function rn({
  isNewCollection: t,
  configController: r,
  editedCollectionId: n,
  parentCollectionIds: i,
  fullPath: l,
  collectionInference: o,
  handleClose: d,
  reservedGroups: c,
  extraView: u,
  handleCancel: m,
  setFormDirty: p,
  pathSuggestions: s,
  getUser: f,
  parentCollection: g,
  getData: P,
  existingPaths: y,
  existingIds: x,
  includeTemplates: v,
  collection: b,
  setCollection: T,
  initialValues: w,
  propertyConfigs: C,
  groups: O
}) {
  const N = fi(), F = Te(), D = Ie(), _ = je({}), S = t ? v ? "welcome" : "details" : "properties", [h, B] = j(S), [oe, q] = Ue.useState(), Z = (k) => {
    const E = k.id || k.path;
    return r.saveCollection({
      id: E,
      collectionData: k,
      previousId: n,
      parentCollectionIds: i
    }).then(() => (q(void 0), !0)).catch((M) => (q(M), console.error(M), D.open({
      type: "error",
      message: "Error persisting collection: " + (M.message ?? "Details in the console")
    }), !1));
  }, H = J(() => {
    h === "details" ? N.inUse ? B("import_data_saving") : B(u ? "extra_view" : "properties") : B(h === "welcome" ? "details" : h === "import_data_mapping" ? "import_data_preview" : h === "import_data_preview" ? "details" : h === "extra_view" ? "properties" : "details");
  }, [h, N.inUse, u]), Q = J((k) => {
    if (o)
      return o?.(k.path, k.collectionGroup ?? !1, i ?? []);
  }, [o, i]), se = J(async (k) => {
    try {
      if (!Q)
        return T(k), Promise.resolve(k);
      B("loading");
      const E = await Q?.(k);
      if (!E)
        return T(k), Promise.resolve(k);
      const M = {
        ...k ?? {}
      };
      return Object.keys(E.properties ?? {}).length > 0 && (M.properties = E.properties, M.propertiesOrder = E.propertiesOrder), M.propertiesOrder ? (T(M), console.debug("Inferred collection", {
        newCollection: k ?? {},
        values: M
      }), M) : (M.propertiesOrder = Object.keys(M.properties), M);
    } catch (E) {
      return console.error(E), D.open({
        type: "error",
        message: "Error inferring collection: " + (E.message ?? "Details in the console")
      }), k;
    }
  }, [i, Q]), de = Ot({
    initialValues: w,
    onSubmit: (k, E) => {
      console.log("Submitting collection", k);
      try {
        if (!t) {
          Z(k).then(() => {
            E.resetForm({ values: w }), d(k);
          });
          return;
        }
        h === "welcome" ? (H(), E.resetForm({ values: k })) : h === "details" ? u || N.inUse ? (E.resetForm({ values: k }), H()) : t ? se(k).then((M) => {
          E.resetForm({
            values: M ?? k,
            touched: {
              path: !0,
              name: !0
            }
          });
        }).finally(() => {
          H();
        }) : (E.resetForm({ values: k }), H()) : h === "extra_view" ? (H(), E.resetForm({ values: k })) : h === "import_data_mapping" || h === "import_data_preview" ? H() : h === "properties" ? Z(k).then(() => {
          E.resetForm({ values: w }), H(), d(k);
        }) : (H(), E.resetForm({ values: k }));
      } catch (M) {
        D.open({
          type: "error",
          message: "Error persisting collection: " + (M.message ?? "Details in the console")
        }), console.error(M), E.resetForm({ values: k });
      }
    },
    validation: (k) => {
      let E = {};
      const M = (h === "properties" || h === "subcollections" || h === "details") && yi;
      if (M)
        try {
          M.validateSync(k, { abortEarly: !1 });
        } catch (L) {
          L.inner.forEach((ye) => {
            E[ye.path] = ye.message;
          });
        }
      if (h === "properties" && (E = { ...E, ..._.current }), h === "details") {
        const L = Gt(k.path, t, y, k.id);
        L && (E.path = L);
        const ye = an(k.id, t, y, x);
        ye && (E.id = ye);
      }
      return E;
    }
  }), {
    values: re,
    setFieldValue: ve,
    isSubmitting: ke,
    dirty: Ke,
    submitCount: vt
  } = de, pe = re.path, We = l?.includes("/") ? l?.split("/").slice(0, -1).join("/") + "/" + pe : pe, Ze = Gt(pe, t, y, re.id), Je = !Ze && i ? F.convertIdsToPaths(i) : void 0, Qe = Ze ? void 0 : F.resolveAliasesFrom(We), ze = Qe && P ? () => P(Qe, Je ?? []) : void 0;
  ue(() => {
    p(Ke);
  }, [Ke]);
  function Xe(k, E) {
    N.setInUse(!0), ni(k, ir).then((M) => {
      const L = pr(M);
      N.setIdColumn(L.idColumn), N.setImportData(k), N.setHeadersMapping(L.headersMapping);
      const ye = (E ?? []).filter((tt) => L.headersMapping[tt]) ?? Object.keys(L.properties);
      N.setHeadingsOrder(ye), N.setOriginProperties(L.properties);
      const et = (E ?? []).map((tt) => L.headersMapping[tt]).filter(Boolean) ?? Object.keys(L.properties);
      ve("properties", L.properties), ve("propertiesOrder", et);
    });
  }
  const yt = !!re.name && !!re.id, bt = () => {
    const k = { ...re.properties };
    N.idColumn && delete k[N.idColumn], ve("properties", k), H();
  }, U = b?.editable === void 0 || b?.editable === !0 || t;
  return /* @__PURE__ */ e(De, { fullHeight: !0, children: /* @__PURE__ */ e(Vt, { value: de, children: /* @__PURE__ */ a(R, { children: [
    !t && /* @__PURE__ */ a(
      Wr,
      {
        value: h,
        className: fe(kt, "justify-end bg-gray-50 dark:bg-gray-950 border-b"),
        onValueChange: (k) => B(k),
        children: [
          /* @__PURE__ */ e(Nt, { value: "details", children: "Details" }),
          /* @__PURE__ */ e(Nt, { value: "properties", children: "Properties" }),
          /* @__PURE__ */ e(Nt, { value: "subcollections", children: "Additional views" })
        ]
      }
    ),
    /* @__PURE__ */ a(
      "form",
      {
        noValidate: !0,
        onSubmit: de.handleSubmit,
        className: fe(
          t ? "h-full" : "h-[calc(100%-48px)]",
          "flex-grow flex flex-col relative"
        ),
        children: [
          h === "loading" && /* @__PURE__ */ e(ut, {}),
          h === "extra_view" && pe && u?.View && /* @__PURE__ */ e(u.View, { path: pe }),
          h === "welcome" && /* @__PURE__ */ e(
            Ji,
            {
              path: pe,
              onContinue: (k, E) => {
                k ? (Xe(k, E), B("import_data_mapping")) : B("details");
              },
              existingCollectionPaths: y,
              parentCollection: g,
              pathSuggestions: s
            }
          ),
          h === "import_data_mapping" && N && /* @__PURE__ */ e(
            Qi,
            {
              importConfig: N,
              collectionEditable: U,
              propertyConfigs: C
            }
          ),
          h === "import_data_preview" && N && /* @__PURE__ */ e(
            en,
            {
              importConfig: N,
              properties: re.properties,
              propertiesOrder: re.propertiesOrder
            }
          ),
          h === "import_data_saving" && N && /* @__PURE__ */ e(
            gi,
            {
              importConfig: N,
              collection: re,
              path: pe,
              onImportSuccess: async (k) => {
                D.open({
                  type: "info",
                  message: "Data imported successfully"
                }), await Z(re), d(k);
              }
            }
          ),
          h === "details" && /* @__PURE__ */ e(
            bi,
            {
              existingPaths: y,
              existingIds: x,
              groups: O,
              parentCollectionIds: i,
              parentCollection: g,
              isNewCollection: t
            }
          ),
          h === "subcollections" && b && /* @__PURE__ */ e(
            Zi,
            {
              parentCollection: g,
              configController: r,
              getUser: f,
              collectionInference: o,
              parentCollectionIds: i,
              collection: b
            }
          ),
          h === "properties" && /* @__PURE__ */ e(
            Gi,
            {
              showErrors: vt > 0,
              isNewCollection: t,
              reservedGroups: c,
              onPropertyError: (k, E, M) => {
                const L = Et({
                  ..._.current,
                  [ar(k, E)]: Et(M, !0)
                }, !0);
                _.current = L, de.validate();
              },
              getUser: f,
              getData: ze,
              doCollectionInference: Q,
              propertyConfigs: C,
              collectionEditable: U,
              extraIcon: u?.icon && /* @__PURE__ */ e(
                ae,
                {
                  color: "primary",
                  onClick: () => B("extra_view"),
                  children: u.icon
                }
              )
            }
          ),
          h !== "welcome" && /* @__PURE__ */ a(
            Be,
            {
              position: "absolute",
              children: [
                oe && /* @__PURE__ */ e(Zt, { error: oe }),
                t && v && h === "import_data_mapping" && /* @__PURE__ */ a(
                  z,
                  {
                    variant: "text",
                    type: "button",
                    onClick: () => (N.setInUse(!1), B("welcome")),
                    children: [
                      /* @__PURE__ */ e(nt, {}),
                      "Back"
                    ]
                  }
                ),
                t && v && h === "import_data_preview" && /* @__PURE__ */ a(
                  z,
                  {
                    variant: "text",
                    type: "button",
                    onClick: () => {
                      B("import_data_mapping");
                    },
                    children: [
                      /* @__PURE__ */ e(nt, {}),
                      "Back"
                    ]
                  }
                ),
                t && v && h === "details" && /* @__PURE__ */ a(
                  z,
                  {
                    variant: "text",
                    type: "button",
                    onClick: () => B("welcome"),
                    children: [
                      /* @__PURE__ */ e(nt, {}),
                      "Back"
                    ]
                  }
                ),
                t && h === "properties" && /* @__PURE__ */ a(
                  z,
                  {
                    variant: "text",
                    type: "button",
                    onClick: () => B("details"),
                    children: [
                      /* @__PURE__ */ e(nt, {}),
                      "Back"
                    ]
                  }
                ),
                /* @__PURE__ */ e(
                  z,
                  {
                    variant: "text",
                    onClick: () => {
                      m();
                    },
                    children: "Cancel"
                  }
                ),
                t && h === "import_data_mapping" && /* @__PURE__ */ e(
                  z,
                  {
                    variant: "filled",
                    color: "primary",
                    onClick: bt,
                    children: "Next"
                  }
                ),
                t && h === "import_data_preview" && /* @__PURE__ */ e(
                  z,
                  {
                    variant: "filled",
                    color: "primary",
                    onClick: () => {
                      H();
                    },
                    children: "Next"
                  }
                ),
                t && (h === "details" || h === "properties") && /* @__PURE__ */ a(
                  Rt,
                  {
                    variant: "filled",
                    color: "primary",
                    type: "submit",
                    loading: ke,
                    disabled: ke || h === "details" && !yt,
                    startIcon: h === "properties" ? /* @__PURE__ */ e(Zr, {}) : void 0,
                    children: [
                      h === "details" && "Next",
                      h === "properties" && "Create collection"
                    ]
                  }
                ),
                !t && /* @__PURE__ */ e(
                  Rt,
                  {
                    variant: "filled",
                    color: "primary",
                    type: "submit",
                    loading: ke,
                    children: "Update collection"
                  }
                )
              ]
            }
          )
        ]
      }
    )
  ] }) }) });
}
function nn(t, r) {
  const {
    properties: n,
    ...i
  } = t, l = {};
  return n && Object.keys(n).forEach((o) => {
    l[o] = hr(n[o], r);
  }), {
    ...i,
    properties: l
  };
}
function hr(t, r) {
  let n = t;
  if (r && typeof n == "object" && n.propertyConfig) {
    const i = r[n.propertyConfig];
    if (i && ie(i.property))
      n = i.property;
    else if (i && (n = K(i.property, n)), !ie(n) && n.dataType === "map" && n.properties) {
      const l = {};
      Object.keys(n.properties).forEach((o) => {
        l[o] = hr(n.properties[o], r);
      }), n = {
        ...n,
        properties: l
      };
    }
  }
  return n;
}
const Gt = (t, r, n, i) => {
  let l;
  return t || (l = "You must specify a path in the database for this collection"), r && n?.includes(t.trim().toLowerCase()) && !i && (l = "There is already a collection with the specified path. If you want to have multiple collections referring to the same database path, make sure the have different ids"), Ir(t).split("/").length % 2 === 0 && (l = `Collection paths must have an odd number of segments: ${t}`), l;
}, an = (t, r, n, i) => {
  if (!t)
    return;
  let l;
  return r && n?.includes(t.trim().toLowerCase()) && (l = "There is already a collection that uses this value as a path"), r && i?.includes(t.trim().toLowerCase()) && (l = "There is already a collection which uses this id"), l;
}, fr = Y.createContext({}), gr = Y.createContext({}), on = Y.memo(
  function({
    children: r,
    collectionConfigController: n,
    configPermissions: i,
    reservedGroups: l,
    collectionInference: o,
    extraView: d,
    getPathSuggestions: c,
    getUser: u,
    getData: m,
    onAnalyticsEvent: p
  }) {
    const s = Te(), f = vi(), g = Ie(), { propertyConfigs: P } = Ae(), [y, x] = Y.useState(), [v, b] = Y.useState(), T = J(() => ({
      createCollections: !0,
      editCollections: !0,
      deleteCollections: !0
    }), []), w = J(({
      id: N,
      fullPath: F,
      parentCollectionIds: D,
      parentCollection: _
    }) => {
      console.debug("Edit collection", N, F, D, _), p?.("edit_collection", {
        id: N,
        fullPath: F
      }), x({
        editedCollectionId: N,
        fullPath: F,
        parentCollectionIds: D,
        isNewCollection: !1,
        parentCollection: _,
        redirect: !1
      });
    }, []), C = J(({
      propertyKey: N,
      property: F,
      editedCollectionId: D,
      currentPropertiesOrder: _,
      parentCollectionIds: S,
      collection: h
    }) => {
      console.debug("Edit property", N, F, D, _, S, h), p?.("edit_property", {
        propertyKey: N,
        editedCollectionId: D
      });
      const B = N && N.includes(".") ? N.substring(0, N.lastIndexOf(".")) : void 0, oe = N && N.includes(".") ? N.substring(N.lastIndexOf(".") + 1) : N;
      b({
        propertyKey: oe,
        property: F,
        namespace: B,
        currentPropertiesOrder: _,
        editedCollectionId: D,
        parentCollectionIds: S,
        collectionEditable: h?.editable ?? !1
      });
    }, []), O = Y.useCallback(({
      parentCollectionIds: N,
      parentCollection: F,
      initialValues: D,
      redirect: _,
      sourceClick: S
    }) => {
      console.debug("Create collection", {
        parentCollectionIds: N,
        parentCollection: F,
        initialValues: D,
        redirect: _,
        sourceClick: S
      }), p?.("create_collection", {
        parentCollectionIds: N,
        parentCollection: F,
        initialValues: D,
        redirect: _,
        sourceClick: S
      }), x({
        isNewCollection: !0,
        parentCollectionIds: N,
        parentCollection: F,
        initialValues: D,
        redirect: _
      });
    }, []);
    return /* @__PURE__ */ e(fr.Provider, { value: n, children: /* @__PURE__ */ a(
      gr.Provider,
      {
        value: {
          editCollection: w,
          createCollection: O,
          editProperty: C,
          configPermissions: i ?? T,
          getPathSuggestions: c
        },
        children: [
          r,
          /* @__PURE__ */ e(
            mr,
            {
              open: !!y,
              configController: n,
              isNewCollection: !1,
              collectionInference: o,
              ...y,
              getData: m,
              reservedGroups: l,
              extraView: d,
              pathSuggestions: c,
              getUser: u,
              handleClose: (N) => {
                if (y?.redirect && N && y?.isNewCollection && !y.parentCollectionIds.length) {
                  const F = s.buildUrlCollectionPath(N.id ?? N.path);
                  f(F);
                }
                x(void 0);
              }
            }
          ),
          /* @__PURE__ */ e(
            Ve,
            {
              open: !!v,
              includeIdAndName: !0,
              existingProperty: !!v?.propertyKey,
              autoUpdateId: v ? !v?.propertyKey : !1,
              autoOpenTypeSelect: v ? !v?.propertyKey : !1,
              inArray: !1,
              collectionEditable: v?.collectionEditable ?? !1,
              getData: m && v?.editedCollectionId ? () => {
                console.debug("get data for property", v?.editedCollectionId);
                const N = s.resolveAliasesFrom(v.editedCollectionId);
                return m(N, []);
              } : void 0,
              onPropertyChanged: ({
                id: N,
                property: F
              }) => {
                if (!v || !N)
                  return;
                const D = !v.propertyKey;
                return n.saveProperty({
                  path: v?.editedCollectionId,
                  property: F,
                  propertyKey: N,
                  newPropertiesOrder: D && v.currentPropertiesOrder ? [...v.currentPropertiesOrder, N] : void 0,
                  namespace: v.namespace,
                  parentCollectionIds: v.parentCollectionIds
                }).catch((_) => (console.error(_), g.open({
                  type: "error",
                  message: "Error persisting property: " + (_.message ?? "Details in the console")
                }), !1));
              },
              onPropertyChangedImmediate: !1,
              onDelete: () => {
                if (!v?.propertyKey)
                  return;
                const N = v?.currentPropertiesOrder?.filter((F) => F !== v?.propertyKey);
                return n.deleteProperty({
                  path: v?.editedCollectionId,
                  propertyKey: v?.propertyKey,
                  namespace: v?.namespace,
                  newPropertiesOrder: N,
                  parentCollectionIds: v?.parentCollectionIds
                }).then(() => {
                  b(void 0);
                }).catch((F) => (console.error(F), g.open({
                  type: "error",
                  message: "Error deleting property: " + (F.message ?? "Details in the console")
                }), !1));
              },
              onError: () => {
              },
              onOkClicked: () => {
                b(void 0);
              },
              onCancel: () => {
                b(void 0);
              },
              initialErrors: {},
              forceShowErrors: !1,
              existingPropertyKeys: [],
              allowDataInference: !0,
              propertyConfigs: P,
              property: v?.property,
              propertyKey: v?.propertyKey
            }
          )
        ]
      }
    ) });
  },
  be
), Pe = () => Qt(gr);
function ln({
  path: t,
  parentCollectionIds: r,
  collection: n,
  tableController: i
}) {
  const l = _e(), o = Te(), d = Pe(), c = o.getCollectionFromIds(r), u = d.configPermissions ? d.configPermissions({
    user: l.user,
    collection: n
  }).editCollections : !0;
  return /* @__PURE__ */ e(R, { children: /* @__PURE__ */ e(
    te,
    {
      title: u ? "Edit collection" : "You don't have permissions to edit this collection",
      children: /* @__PURE__ */ e(
        ae,
        {
          color: "primary",
          disabled: !u,
          onClick: u ? () => d?.editCollection({ id: n.id, fullPath: t, parentCollectionIds: r, parentCollection: c }) : void 0,
          children: /* @__PURE__ */ e(Ye, {})
        }
      )
    }
  ) });
}
const vr = () => Qt(fr);
function sn({
  path: t,
  collection: r
}) {
  const n = Ie(), i = _e(), l = vr(), o = Pe(), d = o.configPermissions({
    user: i.user,
    collection: r
  }), c = J(() => {
    o?.editCollection({ id: r.id, parentCollectionIds: [] });
  }, [o, t]), [u, m] = j(!1), p = J(() => {
    l?.deleteCollection({ id: r.id }).then(() => {
      m(!1), n.open({
        message: "Collection deleted",
        type: "success"
      });
    });
  }, [t, l]);
  return /* @__PURE__ */ a(R, { children: [
    /* @__PURE__ */ a("div", { children: [
      d.deleteCollections && /* @__PURE__ */ e(
        Jr,
        {
          trigger: /* @__PURE__ */ e(ae, { children: /* @__PURE__ */ e(Qr, { size: "small" }) }),
          children: /* @__PURE__ */ a(Xr, { onClick: (s) => {
            s.preventDefault(), s.stopPropagation(), m(!0);
          }, children: [
            /* @__PURE__ */ e(mt, {}),
            "Delete"
          ] })
        }
      ),
      d.editCollections && /* @__PURE__ */ e(
        ae,
        {
          onClick: (s) => {
            c();
          },
          children: /* @__PURE__ */ e(Ye, { size: "small" })
        }
      )
    ] }),
    /* @__PURE__ */ e(
      ct,
      {
        open: u,
        onAccept: p,
        onCancel: () => m(!1),
        title: /* @__PURE__ */ e(R, { children: "Delete this collection?" }),
        body: /* @__PURE__ */ a(R, { children: [
          " This will ",
          /* @__PURE__ */ e("b", { children: "not delete any data" }),
          ", only the collection in the CMS"
        ] })
      }
    )
  ] });
}
function dn({
  propertyKey: t,
  onHover: r,
  property: n,
  fullPath: i,
  parentCollectionIds: l,
  collection: o
}) {
  const d = Pe();
  return /* @__PURE__ */ e(te, { title: "Edit", children: /* @__PURE__ */ e(
    ae,
    {
      className: r ? "bg-white dark:bg-gray-950" : "hidden",
      onClick: () => {
        d.editProperty({
          propertyKey: t,
          property: n,
          editedCollectionId: o.id,
          parentCollectionIds: l,
          collection: o
        });
      },
      size: "small",
      children: /* @__PURE__ */ e(Ye, { size: "small" })
    }
  ) });
}
function cn({
  fullPath: t,
  parentCollectionIds: r,
  collection: n
}) {
  const i = _e(), l = Pe(), o = l.configPermissions ? l.configPermissions({
    user: i.user,
    collection: n
  }).editCollections : !0;
  return /* @__PURE__ */ e(te, { title: o ? "Add new property" : "You don't have permission to add new properties", children: /* @__PURE__ */ e(
    "div",
    {
      className: "p-0.5 w-20 h-full flex items-center justify-center cursor-pointer bg-gray-100 bg-opacity-40 hover:bg-gray-100 dark:bg-gray-950 dark:bg-opacity-40 dark:hover:bg-gray-950",
      onClick: () => {
        l.editProperty({
          editedCollectionId: n.id,
          parentCollectionIds: r,
          currentPropertiesOrder: _r(n),
          collection: n
        });
      },
      children: /* @__PURE__ */ e(ce, { color: "inherit" })
    }
  ) });
}
function un() {
  const t = Pe();
  return /* @__PURE__ */ e("div", { className: "bg-gray-50 dark:bg-gray-900 min-w-fit rounded", children: /* @__PURE__ */ a(
    z,
    {
      className: "min-w-fit",
      variant: "outlined",
      onClick: () => t.createCollection({
        parentCollectionIds: [],
        redirect: !0,
        sourceClick: "new_collection_button"
      }),
      children: [
        /* @__PURE__ */ e(ce, {}),
        "New collection"
      ]
    }
  ) });
}
function pn({
  path: t,
  parentCollectionIds: r,
  collection: n,
  tableController: i
}) {
  const l = _e(), o = Pe(), d = vr(), c = Ie(), u = o.configPermissions ? o.configPermissions({
    user: l.user,
    collection: n
  }).editCollections : !0;
  let m = null;
  return (!be(st(i.filterValues), st(n.initialFilter)) || !be(st(i.sortBy), st(n.initialSort))) && (m = /* @__PURE__ */ a(R, { children: [
    /* @__PURE__ */ e(
      te,
      {
        title: i.sortBy || i.filterValues ? "Save default filter and sort" : "Clear default filter and sort",
        children: /* @__PURE__ */ e(
          z,
          {
            color: "primary",
            size: "small",
            variant: "outlined",
            onClick: () => d?.saveCollection({
              id: n.id,
              parentCollectionIds: r,
              collectionData: K(
                n,
                {
                  initialFilter: i.filterValues ?? null,
                  initialSort: i.sortBy ?? null
                }
              )
            }).then(() => {
              c.open({
                type: "success",
                message: "Default config saved"
              });
            }),
            children: /* @__PURE__ */ e(ei, {})
          }
        )
      }
    ),
    (n.initialFilter || n.initialSort) && /* @__PURE__ */ e(
      te,
      {
        title: "Reset to default filter and sort",
        children: /* @__PURE__ */ e(
          z,
          {
            color: "primary",
            size: "small",
            variant: "text",
            onClick: () => {
              i.clearFilter?.(), n?.initialFilter && i.setFilterValues?.(n?.initialFilter), n?.initialSort && i.setSortBy?.(n?.initialSort);
            },
            children: /* @__PURE__ */ e(ti, {})
          }
        )
      }
    )
  ] })), /* @__PURE__ */ e(R, { children: u && m });
}
function st(t) {
  return t && Object.keys(t).length === 0 ? t : t ?? null;
}
function mn({
  group: t,
  context: r
}) {
  if (!r.navigation.topLevelNavigation)
    throw Error("Navigation not ready in FireCMSHomePage");
  const n = _e(), i = Pe(), l = i.configPermissions ? i.configPermissions({
    user: n.user
  }).createCollections : !0;
  return /* @__PURE__ */ e(
    rr,
    {
      className: fe("h-full p-4 min-h-[124px]"),
      onClick: i && l ? () => i.createCollection({
        initialValues: t ? { group: t } : void 0,
        parentCollectionIds: [],
        redirect: !0,
        sourceClick: "new_collection_card"
      }) : void 0,
      children: /* @__PURE__ */ a(
        "div",
        {
          className: "flex flex-col items-start h-full w-full items-center justify-center h-full w-full flex-grow flex-col",
          children: [
            /* @__PURE__ */ e(ce, { color: "primary", size: "large" }),
            /* @__PURE__ */ e(
              V,
              {
                color: "primary",
                variant: "caption",
                className: "font-medium",
                children: "Add new collection".toUpperCase()
              }
            ),
            !l && /* @__PURE__ */ e(V, { variant: "caption", children: "You don't have permissions to create collections" })
          ]
        }
      )
    }
  );
}
function Vn({
  collectionConfigController: t,
  configPermissions: r,
  reservedGroups: n,
  extraView: i,
  getPathSuggestions: l,
  getUser: o,
  collectionInference: d,
  getData: c,
  onAnalyticsEvent: u
}) {
  return {
    key: "collection_editor",
    loading: t.loading,
    provider: {
      Component: on,
      props: {
        collectionConfigController: t,
        configPermissions: r,
        collectionInference: d,
        reservedGroups: n,
        extraView: i,
        getPathSuggestions: l,
        getUser: o,
        getData: c,
        onAnalyticsEvent: u
      }
    },
    homePage: {
      additionalActions: /* @__PURE__ */ e(un, {}),
      additionalChildrenStart: /* @__PURE__ */ e(hn, {}),
      // additionalChildrenEnd: <RootCollectionSuggestions introMode={introMode}/>,
      CollectionActions: sn,
      AdditionalCards: mn
    },
    collectionView: {
      CollectionActionsStart: pn,
      CollectionActions: ln,
      HeaderAction: dn,
      AddColumnComponent: cn
    }
  };
}
function hn({}) {
  const t = Te();
  if (!t.topLevelNavigation)
    throw Error("Navigation not ready in FireCMSHomePage");
  const r = _e(), n = Pe(), i = n.configPermissions ? n.configPermissions({
    user: r.user
  }).createCollections : !0;
  return !t.initialised || t.collections === void 0 || (t.collections ?? []).length > 0 ? null : /* @__PURE__ */ a(
    ge,
    {
      className: "my-4 px-4 py-6 flex flex-col  bg-white dark:bg-slate-800 gap-2",
      children: [
        /* @__PURE__ */ e(V, { variant: "subtitle2", className: "uppercase", children: "No collections found" }),
        /* @__PURE__ */ e(V, { children: "Start building collections in FireCMS easily. Map them to your existing database data, import from files, or use our templates." }),
        i && /* @__PURE__ */ a(
          z,
          {
            onClick: n && i ? () => n.createCollection({
              parentCollectionIds: [],
              redirect: !0,
              sourceClick: "new_collection_card"
            }) : void 0,
            children: [
              /* @__PURE__ */ e(ce, {}),
              "Create your first collection"
            ]
          }
        ),
        /* @__PURE__ */ e(V, { variant: "caption", color: "secondary", children: "You can also define collections programmatically." })
      ]
    }
  );
}
const In = (t, r, n) => {
  const i = (d) => {
    He(d.properties), d.subcollections?.forEach(i);
  }, l = r ?? [];
  l.forEach(i), console.debug("Collections specified in code:", t), console.debug("Collections stored in the backend", l);
  const o = Fr(t, l, [], n);
  return console.debug("Collections after joining:", o), o;
};
function _n({ path: t }) {
  const r = Te(), n = fn(t), i = r.getParentCollectionIds(t), l = Pe();
  return /* @__PURE__ */ a("div", { className: "p-1 flex flex-col items-center", children: [
    /* @__PURE__ */ e(Zt, { error: "No collection for path: " + n }),
    /* @__PURE__ */ e(
      z,
      {
        className: "mx-2",
        variant: "outlined",
        size: "small",
        onClick: () => {
          l.createCollection({
            initialValues: { path: n, name: wt(n) },
            parentCollectionIds: i,
            redirect: !1,
            sourceClick: "missing_reference"
          });
        },
        children: "Create"
      }
    )
  ] });
}
function fn(t) {
  const r = t.split("/");
  return r[r.length - 1];
}
export {
  _n as MissingReferenceWidget,
  qe as editableProperty,
  ne as getFullId,
  ar as getFullIdPath,
  he as idToPropertiesPath,
  In as mergeCollections,
  Ce as namespaceToPropertiesOrderPath,
  nr as namespaceToPropertiesPath,
  wi as removeNonEditableProperties,
  Pe as useCollectionEditorController,
  Vn as useCollectionEditorPlugin,
  vr as useCollectionsConfigController
};
//# sourceMappingURL=index.es.js.map
