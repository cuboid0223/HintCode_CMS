import React from "react";
import { CollectionsConfigController } from "./types/config_controller";
import { User } from "@firecms/core";
import { CollectionEditorController } from "./types/collection_editor_controller";
import { CollectionEditorPermissionsBuilder } from "./types/config_permissions";
import { CollectionInference } from "./types/collection_inference";
export declare const ConfigControllerContext: React.Context<CollectionsConfigController>;
export declare const CollectionEditorContext: React.Context<CollectionEditorController>;
export interface ConfigControllerProviderProps {
    /**
     * Controller for managing the collections' config.
     */
    collectionConfigController: CollectionsConfigController;
    /**
     * Callback used to infer the schema from the data.
     */
    collectionInference?: CollectionInference;
    /**
     * Use this builder to define the permissions for the configuration per user.
     */
    configPermissions?: CollectionEditorPermissionsBuilder;
    /**
     * Groups that cannot be used to create new collections.
     */
    reservedGroups?: string[];
    extraView?: {
        View: React.ComponentType<{
            path: string;
        }>;
        icon: React.ReactNode;
    };
    getPathSuggestions?: (path?: string) => Promise<string[]>;
    getUser?: (uid: string) => User | null;
    getData?: (path: string, parentPaths: string[]) => Promise<object[]>;
    onAnalyticsEvent?: (event: string, params?: object) => void;
}
export declare const ConfigControllerProvider: React.NamedExoticComponent<React.PropsWithChildren<ConfigControllerProviderProps>>;
