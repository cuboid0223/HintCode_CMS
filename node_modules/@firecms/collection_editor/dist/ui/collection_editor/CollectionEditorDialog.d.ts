import * as React from "react";
import { EntityCollection, User } from "@firecms/core";
import { CollectionsConfigController } from "../../types/config_controller";
import { CollectionInference } from "../../types/collection_inference";
import { PersistedCollection } from "../../types/persisted_collection";
export interface CollectionEditorDialogProps {
    open: boolean;
    isNewCollection: boolean;
    initialValues?: {
        group?: string;
        path?: string;
        name?: string;
    };
    editedCollectionId?: string;
    fullPath?: string;
    parentCollectionIds?: string[];
    handleClose: (collection?: EntityCollection) => void;
    configController: CollectionsConfigController;
    reservedGroups?: string[];
    collectionInference?: CollectionInference;
    extraView?: {
        View: React.ComponentType<{
            path: string;
        }>;
        icon: React.ReactNode;
    };
    pathSuggestions?: (path?: string) => Promise<string[]>;
    getUser?: (uid: string) => User | null;
    getData?: (path: string, parentPaths: string[]) => Promise<object[]>;
    parentCollection?: PersistedCollection;
}
export declare function CollectionEditorDialog(props: CollectionEditorDialogProps): import("react/jsx-runtime").JSX.Element;
export declare function CollectionEditor(props: CollectionEditorDialogProps & {
    handleCancel: () => void;
    setFormDirty: (dirty: boolean) => void;
}): import("react/jsx-runtime").JSX.Element;
