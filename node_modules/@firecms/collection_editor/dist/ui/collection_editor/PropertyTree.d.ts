import React from "react";
import { AdditionalFieldDelegate, CMSType, PropertiesOrBuilders, PropertyOrBuilder } from "@firecms/core";
import { DraggableProvided } from "@hello-pangea/dnd";
export declare const PropertyTree: React.MemoExoticComponent<(<M extends {
    [Key: string]: CMSType;
}>({ namespace, selectedPropertyKey, onPropertyClick, properties, propertiesOrder: propertiesOrderProp, additionalFields, errors, onPropertyMove, onPropertyRemove, className, inferredPropertyKeys, collectionEditable }: {
    namespace?: string;
    selectedPropertyKey?: string;
    onPropertyClick?: (propertyKey: string, namespace?: string) => void;
    properties: PropertiesOrBuilders<M>;
    propertiesOrder?: string[];
    additionalFields?: AdditionalFieldDelegate<M>[];
    errors: Record<string, any>;
    onPropertyMove?: (propertiesOrder: string[], namespace?: string) => void;
    onPropertyRemove?: (propertyKey: string, namespace?: string) => void;
    className?: string;
    inferredPropertyKeys?: string[];
    collectionEditable: boolean;
}) => import("react/jsx-runtime").JSX.Element)>;
export declare function PropertyTreeEntry({ propertyKey, namespace, propertyOrBuilder, additionalField, provided, selectedPropertyKey, errors, onPropertyClick, onPropertyMove, onPropertyRemove, inferredPropertyKeys, collectionEditable }: {
    propertyKey: string;
    namespace?: string;
    propertyOrBuilder: PropertyOrBuilder;
    additionalField?: AdditionalFieldDelegate<any>;
    selectedPropertyKey?: string;
    provided: DraggableProvided;
    errors: Record<string, any>;
    onPropertyClick?: (propertyKey: string, namespace?: string) => void;
    onPropertyMove?: (propertiesOrder: string[], namespace?: string) => void;
    onPropertyRemove?: (propertyKey: string, namespace?: string) => void;
    inferredPropertyKeys?: string[];
    collectionEditable: boolean;
}): import("react/jsx-runtime").JSX.Element;
