import * as x from "react";
import b, { useContext as Q, useState as h, useEffect as U } from "react";
import T from "react-fast-compare";
const D = b.createContext({}), X = () => Q(D), nt = D.Provider, st = (t) => Array.isArray(t) && t.length === 0, M = (t) => typeof t == "function", y = (t) => t !== null && typeof t == "object", Y = (t) => String(Math.floor(Number(t))) === t, ot = (t) => Object.prototype.toString.call(t) === "[object String]", ct = (t) => t !== t, ut = (t) => x.Children.count(t) === 0, it = (t) => y(t) && M(t.then), at = (t) => t && y(t) && y(t.target);
function lt(t) {
  if (t = t || (typeof document < "u" ? document : void 0), typeof t > "u")
    return null;
  try {
    return t.activeElement || t.body;
  } catch {
    return t.body;
  }
}
function F(t, a, n, u = 0) {
  const r = O(a);
  for (; t && u < r.length; )
    t = t[r[u++]];
  return u !== r.length && !t || t === void 0 ? n : t;
}
function Z(t, a, n) {
  const u = V(t);
  let r = u, e = 0;
  const i = O(a);
  for (; e < i.length - 1; e++) {
    const c = i[e], f = F(t, i.slice(0, e + 1));
    if (f && (y(f) || Array.isArray(f)))
      r = r[c] = V(f);
    else {
      const d = i[e + 1];
      r = r[c] = Y(d) && Number(d) >= 0 ? [] : {};
    }
  }
  return (e === 0 ? t : r)[i[e]] === n ? t : (n === void 0 ? delete r[i[e]] : r[i[e]] = n, e === 0 && n === void 0 && delete u[i[e]], u);
}
function j(t, a, n = /* @__PURE__ */ new WeakMap(), u = {}) {
  for (const r of Object.keys(t)) {
    const e = t[r];
    y(e) ? n.get(e) || (n.set(e, !0), u[r] = Array.isArray(e) ? [] : {}, j(e, a, n, u[r])) : u[r] = a;
  }
  return u;
}
function V(t) {
  return Array.isArray(t) ? [...t] : typeof t == "object" && t !== null ? { ...t } : t;
}
function O(t) {
  return Array.isArray(t) ? t : t.replace(/\[(\d+)]/g, ".$1").replace(/^\./, "").replace(/\.$/, "").split(".");
}
function ft({
  validate: t,
  name: a,
  children: n,
  as: u,
  // `as` is reserved in typescript lol
  // component,
  className: r,
  ...e
}) {
  const i = X(), c = tt({ name: a, ...e }, i);
  if (M(n))
    return n({ field: c, form: i });
  const f = u || "input";
  if (typeof f == "string") {
    const { innerRef: d, ...p } = e;
    return x.createElement(
      f,
      { ref: d, ...c, ...p, className: r },
      n
    );
  }
  return x.createElement(f, { ...c, ...e, className: r }, n);
}
const tt = (t, a) => {
  const n = y(t), u = n ? t.name : t, r = F(a.values, u), e = {
    name: u,
    value: r,
    onChange: a.handleChange,
    onBlur: a.handleBlur
  };
  if (n) {
    const {
      type: i,
      value: c,
      // value is special for checkboxes
      as: f,
      multiple: d
    } = t;
    i === "checkbox" ? c === void 0 ? e.checked = !!r : (e.checked = !!(Array.isArray(r) && ~r.indexOf(c)), e.value = c) : i === "radio" ? (e.checked = r === c, e.value = c) : f === "select" && d && (e.value = e.value || [], e.multiple = !0);
  }
  return e;
};
function dt({ initialValues: t, initialErrors: a, validation: n, validateOnChange: u = !1, onSubmit: r, validateOnInitialRender: e = !1 }) {
  const i = b.useRef(t), c = b.useRef(t), [f, d] = h(t), [p, R] = h({}), [k, g] = h(a ?? {}), [_, A] = h(!1), [I, C] = h(0), [$, S] = h(!1), [q, w] = h(!1);
  U(() => {
    e && E();
  }, []);
  const W = (s) => {
    c.current = s, d(s), A(T(i.current, s));
  }, E = async () => {
    w(!0);
    const s = c.current, o = await n?.(s);
    return g(o ?? {}), w(!1), o;
  }, N = (s, o, l) => {
    const m = Z(c.current, s, o);
    c.current = m, d(m), T(F(i.current, s), o) || A(!0), l && E();
  }, z = (s, o) => {
    const l = { ...k };
    o ? l[s] = o : delete l[s], g(l);
  }, v = (s, o, l) => {
    const m = { ...p };
    m[s] = o, R(m), l && E();
  }, G = (s) => {
    const o = s.target, l = o.type === "checkbox" ? o.checked : o.value, m = o.name;
    N(m, l, u), v(m, !0);
  }, H = (s) => {
    const l = s.target.name;
    v(l, !0);
  }, J = async (s) => {
    s?.preventDefault(), s?.stopPropagation(), S(!0), C(I + 1);
    const o = await n?.(c.current);
    o && Object.keys(o).length > 0 ? g(o) : (g({}), await r?.(c.current, B.current)), S(!1);
  }, K = (s) => {
    const {
      submitCount: o,
      values: l,
      errors: m,
      touched: L
    } = s ?? {};
    i.current = l ?? t, c.current = l ?? t, d(l ?? t), g(m ?? {}), R(L ?? {}), A(!1), C(o ?? 0);
  }, P = {
    values: f,
    initialValues: i.current,
    handleChange: G,
    isSubmitting: $,
    setSubmitting: S,
    setValues: W,
    setFieldValue: N,
    errors: k,
    setFieldError: z,
    touched: p,
    setFieldTouched: v,
    dirty: _,
    setDirty: A,
    handleSubmit: J,
    submitCount: I,
    setSubmitCount: C,
    handleBlur: H,
    validate: E,
    isValidating: q,
    resetForm: K
  }, B = b.useRef(P);
  return B.current = P, P;
}
export {
  ft as Field,
  nt as Formex,
  lt as getActiveElement,
  F as getIn,
  st as isEmptyArray,
  ut as isEmptyChildren,
  M as isFunction,
  at as isInputEvent,
  Y as isInteger,
  ct as isNaN,
  y as isObject,
  it as isPromise,
  ot as isString,
  Z as setIn,
  j as setNestedObjectValues,
  dt as useCreateFormex,
  X as useFormex
};
//# sourceMappingURL=index.es.js.map
